#N struct array-help-struct float x float y array z float;
#N struct float float y;
#N canvas 535 422 688 433 12;
#X text 34 388 see also:;
#X text 444 398 updated for Pd version 0.45.;
#X text 485 171 (click for details:), f 11;
#N canvas 1025 150 716 699 define 0;
#X text 324 399 creation arguments:;
#X text 352 417 optional -k flag to keep contents (TBW);
#X text 212 152 send a pointer to a named receive object;
#X floatatom 145 299 5 0 0 0 - - -, f 5;
#X text 46 408 click to open or edit array:;
#X msg 31 116 read scalar-object-help.txt;
#X text 258 117 read/write a file TBW;
#X msg 40 152 send scalar-help-send;
#X obj 145 251 r scalar-help-send;
#X text 349 437 template;
#X text 354 458 optional name (TBW);
#X obj 145 275 get scalar-help-template1 x;
#N canvas 465 265 450 300 scalar-help-template1 0;
#X obj 62 55 struct scalar-help-template1 float x float y;
#X obj 55 99 drawpolygon 3 3 0 0 0 30 30 30 30 0 0 0;
#X msg 89 193 traverse pd-scalar-help-template1 \, bang;
#X obj 89 218 pointer;
#X msg 20 195 40 40;
#X obj 53 252 append scalar-help-template1 x y;
#X connect 2 0 3 0;
#X connect 3 0 5 2;
#X connect 4 0 5 0;
#X restore 471 57 pd scalar-help-template1;
#X floatatom 404 244 3 0 500 0 - - -, f 3;
#X obj 506 244 r scalar-help-send;
#X obj 405 282 set scalar-help-template1 x y;
#X floatatom 458 244 3 0 500 0 - - -, f 3;
#X text 32 20 "scalar define" defines and maintains a scalar.;
#X text 471 29 here's the template:;
#X obj 27 435 scalar define scalar-help-template1;
#X connect 5 0 19 0;
#X connect 7 0 19 0;
#X connect 8 0 11 0;
#X connect 11 0 3 0;
#X connect 13 0 15 0;
#X connect 14 0 15 2;
#X connect 16 0 15 1;
#X restore 486 212 pd define;
#X obj 163 388 text;
#X text 201 210 - create \, store \, and/or edit one;
#N canvas 621 88 516 514 array-and-data-structures 0;
#X obj 46 397 print;
#X obj 83 318 pointer;
#X text 53 36 The array objects can also reference arrays within structures
via pointers.;
#N canvas 801 393 504 278 array-help-struct 0;
#X scalar array-help-struct 20 20 \; 0 \; 0 \; -1 \; -6 \; -9 \; -10
\; -5 \; -2 \; 8 \; 12 \; 12 \; 12 \; 10 \; 8 \; 6 \; 1 \; \;;
#X obj 88 204 pointer;
#X msg 32 156 20 20;
#X obj 31 231 append array-help-struct x y;
#X msg 88 147 traverse pd-array-help-struct \, bang, f 21;
#X obj 13 83 filledpolygon 0 0 0 0 0 0 10 20 10 20 0 0 0;
#X obj 13 56 struct array-help-struct float x float y array z float
;
#X obj 17 114 plot z 500 2 25 5 5;
#X connect 1 0 3 2;
#X connect 2 0 3 0;
#X connect 4 0 1 0;
#X restore 60 112 pd array-help-struct;
#N canvas 1205 232 450 300 array-help-data 0;
#X scalar array-help-struct 84 93 \; 0 \; 0 \; -1 \; -6 \; -9 \; -10
\; -5 \; -2 \; 5 \; -7 \; -41 \; -47 \; -45 \; -34 \; -17 \; 8 \; 5
\; 2 \; -2 \; -11 \; -16 \; -26 \; -43 \; 16 \; 24 \; 26 \; 21 \; 20
\; 19 \; 17 \; 16 \; 16 \; 16 \; 16 \; 12 \; \;;
#X text 26 215 We have one datum... right-click to see contents.;
#X restore 61 142 pd array-help-data;
#X obj 46 357 array size -s array-help-struct z, f 19;
#X msg 83 261 traverse pd-array-help-data \, next, f 19;
#X obj 46 210 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144 -1
-1;
#X obj 46 232 t b b;
#X obj 312 321 pointer;
#X obj 275 359 array size -s array-help-struct z, f 19;
#X msg 312 264 traverse pd-array-help-data \, next, f 19;
#X obj 275 235 t f b;
#X floatatom 275 211 5 0 0 0 - - -, f 5;
#X text 220 143 <- click to see the array;
#X connect 1 0 5 1;
#X connect 5 0 0 0;
#X connect 6 0 1 0;
#X connect 7 0 8 0;
#X connect 8 0 5 0;
#X connect 8 1 6 0;
#X connect 9 0 10 1;
#X connect 11 0 9 0;
#X connect 12 0 10 0;
#X connect 12 1 11 0;
#X connect 13 0 12 0;
#X restore 81 333 pd array-and-data-structures;
#X text 96 260 (later);
#X obj 19 8 scalar;
#X text 77 7 - create a scalar datum;
#X obj 90 212 scalar define;
#X text 194 261 - more stuff;
#X text 78 309 referring to data structures in windows:;
#X text 81 180 The first argument sets the function:;
#X obj 114 387 array;
#X obj 204 388 list;
#X text 101 57 experimental - doesn't do much yet. This is included
in 0.45 to check that its design will work coherently with the array
and text objects.;

!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.8	//
ADCJITTER	s_audio_mmio.c	253;"	d	file:
AIFFHDRSIZE	d_soundfile.c	152;"	d	file:
AIFFPLUS	d_soundfile.c	155;"	d	file:
ALSAAPI9	s_audio_alsa.c	36;"	d	file:
ALSAAPI9	s_audio_alsamm.c	36;"	d	file:
ALSAMM_FORMAT	s_audio_alsamm.c	64;"	d	file:
ALSAMM_SAMPLEWIDTH_32	s_audio_alsamm.c	47;"	d	file:
ALSA_DEFFRAGSIZE	s_audio_alsa.h	16;"	d
ALSA_DEFJITTERMAX	s_audio_alsa.c	42;"	d	file:
ALSA_DEFNFRAG	s_audio_alsa.h	17;"	d
ALSA_EXTRABUFFER	s_audio_alsa.h	15;"	d
ALSA_JITTER	s_audio_alsa.h	14;"	d
ALSA_MAXDEV	s_audio_alsa.h	13;"	d
ALSA_MAX_EVENT_SIZE	s_midi_alsa.c	23;"	d	file:
ALSA_SAMPLEWIDTH_16	s_audio_alsa.h	9;"	d
ALSA_SAMPLEWIDTH_32	s_audio_alsa.h	10;"	d
ALSA_XFERSIZE16	s_audio_alsa.h	11;"	d
ALSA_XFERSIZE32	s_audio_alsa.h	12;"	d
ALTMOD	g_editor.c	1212;"	d	file:
API_ALSA	s_stuff.h	196;"	d
API_AUDIOUNIT	s_stuff.h	202;"	d
API_DEFAULT	s_stuff.h	213;"	d
API_DEFAULT	s_stuff.h	216;"	d
API_DEFAULT	s_stuff.h	219;"	d
API_DEFAULT	s_stuff.h	222;"	d
API_DEFAULT	s_stuff.h	225;"	d
API_DEFAULT	s_stuff.h	228;"	d
API_DEFAULT	s_stuff.h	231;"	d
API_DEFAULT	s_stuff.h	237;"	d
API_DEFAULTMIDI	s_midi.c	44;"	d	file:
API_DEFSTRING	s_stuff.h	214;"	d
API_DEFSTRING	s_stuff.h	217;"	d
API_DEFSTRING	s_stuff.h	220;"	d
API_DEFSTRING	s_stuff.h	223;"	d
API_DEFSTRING	s_stuff.h	226;"	d
API_DEFSTRING	s_stuff.h	229;"	d
API_DEFSTRING	s_stuff.h	232;"	d
API_DEFSTRING	s_stuff.h	238;"	d
API_DUMMY	s_stuff.h	204;"	d
API_ESD	s_stuff.h	203;"	d
API_JACK	s_stuff.h	200;"	d
API_MMIO	s_stuff.h	198;"	d
API_NONE	s_stuff.h	195;"	d
API_OSS	s_stuff.h	197;"	d
API_PORTAUDIO	s_stuff.h	199;"	d
API_SGI	s_stuff.h	201;"	d
ARRAYPAGESIZE	g_array.c	13;"	d	file:
ARRAYWRITECHUNKSIZE	g_array.c	712;"	d	file:
ATOMBUFSIZE	g_text.c	491;"	d	file:
ATOMS_ALLOCA	m_binbuf.c	584;"	d	file:
ATOMS_ALLOCA	m_binbuf.c	589;"	d	file:
ATOMS_ALLOCA	x_array.c	32;"	d	file:
ATOMS_ALLOCA	x_array.c	37;"	d	file:
ATOMS_ALLOCA	x_list.c	66;"	d	file:
ATOMS_ALLOCA	x_list.c	71;"	d	file:
ATOMS_ALLOCA	x_text.c	35;"	d	file:
ATOMS_ALLOCA	x_text.c	40;"	d	file:
ATOMS_FREEA	m_binbuf.c	586;"	d	file:
ATOMS_FREEA	m_binbuf.c	590;"	d	file:
ATOMS_FREEA	x_array.c	34;"	d	file:
ATOMS_FREEA	x_array.c	38;"	d	file:
ATOMS_FREEA	x_list.c	68;"	d	file:
ATOMS_FREEA	x_list.c	72;"	d	file:
ATOMS_FREEA	x_text.c	37;"	d	file:
ATOMS_FREEA	x_text.c	41;"	d	file:
ATOM_LABELDOWN	g_text.c	495;"	d	file:
ATOM_LABELLEFT	g_text.c	492;"	d	file:
ATOM_LABELRIGHT	g_text.c	493;"	d	file:
ATOM_LABELUP	g_text.c	494;"	d	file:
ATTRIBUTE_FORMAT_PRINTF	m_pd.h	52;"	d
ATTRIBUTE_FORMAT_PRINTF	m_pd.h	54;"	d
A_ARRAY	g_template.c	791;"	d	file:
A_CANT	m_pd.h	/^    A_CANT$/;"	e	enum:__anon7
A_COMMA	m_pd.h	/^    A_COMMA,$/;"	e	enum:__anon7
A_DEFFLOAT	m_pd.h	/^    A_DEFFLOAT,$/;"	e	enum:__anon7
A_DEFSYM	m_pd.h	/^    A_DEFSYM,$/;"	e	enum:__anon7
A_DEFSYMBOL	m_pd.h	174;"	d
A_DOLLAR	m_pd.h	/^    A_DOLLAR, $/;"	e	enum:__anon7
A_DOLLSYM	m_pd.h	/^    A_DOLLSYM,$/;"	e	enum:__anon7
A_FLOAT	m_pd.h	/^    A_FLOAT,$/;"	e	enum:__anon7
A_GIMME	m_pd.h	/^    A_GIMME,$/;"	e	enum:__anon7
A_NULL	m_pd.h	/^    A_NULL,$/;"	e	enum:__anon7
A_POINTER	m_pd.h	/^    A_POINTER,$/;"	e	enum:__anon7
A_SEMI	m_pd.h	/^    A_SEMI,$/;"	e	enum:__anon7
A_SYMBOL	m_pd.h	/^    A_SYMBOL,$/;"	e	enum:__anon7
AllocCallbackInstanceData	s_midi_mmio.c	/^LPCALLBACKINSTANCEDATA FAR PASCAL AllocCallbackInstanceData(void)$/;"	f
AllocCircularBuffer	s_midi_mmio.c	/^LPCIRCULARBUFFER AllocCircularBuffer(DWORD dwSize)$/;"	f
BEZ	g_template.c	789;"	d	file:
BMARGIN	g_rtext.c	24;"	d	file:
BMARGIN	g_rtext.c	27;"	d	file:
BOOL	d_fftroutine.c	96;"	d	file:
BOXWIDTH	g_rtext.c	182;"	d	file:
BUFSIZE	u_pdreceive.c	49;"	d	file:
BUFSIZE	u_pdsend.c	27;"	d	file:
BUF_JACK	s_audio_jack.c	20;"	d	file:
BYTE_ORDER	d_array.c	520;"	d	file:
BYTE_ORDER	d_osc.c	31;"	d	file:
CALLBACKINSTANCEDATA	s_midi_mmio.c	/^} CALLBACKINSTANCEDATA;$/;"	t	typeref:struct:callbackInstance_tag	file:
CDFT_4THREADS_BEGIN_N	d_fft_fftsg.c	903;"	d	file:
CDFT_4THREADS_BEGIN_N	d_fft_fftsg.c	930;"	d	file:
CDFT_4THREADS_BEGIN_N	d_fftsg_h.c	494;"	d	file:
CDFT_4THREADS_BEGIN_N	d_fftsg_h.c	521;"	d	file:
CDFT_LOOP_DIV	d_fftsg_h.c	543;"	d	file:
CDFT_THREADS_BEGIN_N	d_fft_fftsg.c	900;"	d	file:
CDFT_THREADS_BEGIN_N	d_fft_fftsg.c	927;"	d	file:
CDFT_THREADS_BEGIN_N	d_fftsg_h.c	491;"	d	file:
CDFT_THREADS_BEGIN_N	d_fftsg_h.c	518;"	d	file:
CHANNELS_PER_DEVICE	s_audio_mmio.c	24;"	d	file:
CIRCULARBUFFER	s_midi_mmio.c	/^} CIRCULARBUFFER;$/;"	t	typeref:struct:circularBuffer_tag	file:
CLASS_DEFAULT	m_pd.h	462;"	d
CLASS_GOBJ	m_pd.h	464;"	d
CLASS_MAINSIGNALIN	m_pd.h	494;"	d
CLASS_NOINLET	m_pd.h	466;"	d
CLASS_PATCHABLE	m_pd.h	465;"	d
CLASS_PD	m_pd.h	463;"	d
CLASS_TYPEMASK	m_pd.h	468;"	d
CLIP	g_template.c	1645;"	d	file:
CLIP32	s_audio_alsa.c	47;"	d	file:
CLIP32	s_audio_alsamm.c	62;"	d	file:
CLIP32	s_audio_oss.c	85;"	d	file:
CLOCKHZ	x_misc.c	24;"	d	file:
CLOCKHZ	x_misc.c	27;"	d	file:
CLOCKHZ	x_misc.c	31;"	d	file:
CLOSED	g_template.c	788;"	d	file:
COSTABSIZE	m_pd.h	613;"	d
CTRLMOD	g_editor.c	1211;"	d	file:
CURSOR_EDITMODE_CONNECT	g_canvas.h	334;"	d
CURSOR_EDITMODE_DISCONNECT	g_canvas.h	335;"	d
CURSOR_EDITMODE_NOTHING	g_canvas.h	333;"	d
CURSOR_EDITMODE_RESIZE	g_canvas.h	336;"	d
CURSOR_RUNMODE_ADDPOINT	g_canvas.h	332;"	d
CURSOR_RUNMODE_CLICKME	g_canvas.h	330;"	d
CURSOR_RUNMODE_NOTHING	g_canvas.h	329;"	d
CURSOR_RUNMODE_THICKEN	g_canvas.h	331;"	d
DACJITTER	s_audio_mmio.c	254;"	d	file:
DB	d_fftroutine.c	121;"	d	file:
DCLICKINTERVAL	g_editor.c	1217;"	d	file:
DCST_LOOP_DIV	d_fftsg_h.c	551;"	d	file:
DEBUG	s_audio_alsa.c	31;"	d	file:
DEBUG	s_audio_alsamm.c	130;"	d	file:
DEBUG	s_audio_alsamm.c	161;"	d	file:
DEBUG	s_audio_oss.c	34;"	d	file:
DEBUG	s_path.c	14;"	d	file:
DEBUG2	s_audio_alsa.c	32;"	d	file:
DEBUG2	s_audio_alsamm.c	131;"	d	file:
DEBUG2	s_audio_alsamm.c	162;"	d	file:
DEBUG2	s_audio_oss.c	35;"	d	file:
DEBUG_MESSDOWN	s_inter.c	55;"	d	file:
DEBUG_MESSUP	s_inter.c	54;"	d	file:
DEFAULTADVANCE	s_stuff.h	250;"	d
DEFAULTADVANCE	s_stuff.h	253;"	d
DEFAULTADVANCE	s_stuff.h	255;"	d
DEFAULTAUDIODEV	s_stuff.h	241;"	d
DEFAULTCHANS	s_audio_mmio.c	25;"	d	file:
DEFAULTFONT	s_main.c	179;"	d	file:
DEFAULTLINEGRAIN	x_time.c	224;"	d	file:
DEFAULTSRATE	s_audio_mmio.c	26;"	d	file:
DEFAULTSRATE	s_stuff.h	248;"	d
DEFBUFFER	s_audio_mmio.c	33;"	d	file:
DEFBUFPERCHAN	d_soundfile.c	1522;"	d	file:
DEFDACBLKSIZE	s_audio_esd.c	71;"	d	file:
DEFDACBLKSIZE	s_stuff.h	66;"	d
DEFDELVS	d_delay.c	10;"	d	file:
DEFMAXSIZE	d_soundfile.c	1144;"	d	file:
DEFMIDIDEV	s_stuff.h	246;"	d
DEFREALDACBLKSIZE	s_audio_mmio.c	30;"	d	file:
DEFSENDVS	d_global.c	10;"	d	file:
DEVDESCSIZE	s_audio.c	30;"	d	file:
DEVDESCSIZE	s_midi.c	576;"	d	file:
DEVONSET	s_midi.c	578;"	d	file:
DRAWNUMBER_BUFSIZE	g_template.c	2407;"	d	file:
DT_ARRAY	g_canvas.h	201;"	d
DT_FLOAT	g_canvas.h	198;"	d
DT_SYMBOL	g_canvas.h	199;"	d
DT_TEXT	g_canvas.h	200;"	d
DUMTAB1SIZE	d_math.c	67;"	d	file:
DUMTAB2SIZE	d_math.c	68;"	d	file:
EADDRINUSE	s_inter.c	35;"	d	file:
EPILOGCALL	d_ugen.c	232;"	d	file:
ERR_ADCSLEPT	s_stuff.h	158;"	d
ERR_DACSLEPT	s_stuff.h	159;"	d
ERR_DATALATE	s_stuff.h	161;"	d
ERR_NOTHING	s_stuff.h	157;"	d
ERR_RESYNC	s_stuff.h	160;"	d
EVENT	s_midi_mmio.c	/^} EVENT;$/;"	t	typeref:struct:evemsw_tag	file:
EVNT_F_ERROR	s_midi_mmio.c	129;"	d	file:
EXTERN	m_pd.h	34;"	d
EXTERN	m_pd.h	36;"	d
EXTERN	m_pd.h	39;"	d
EXTERN_STRUCT	m_pd.h	45;"	d
EXTERN_STRUCT	m_pd.h	47;"	d
EXTRAPIX	g_text.c	1214;"	d	file:
EXTRAPIX	g_text.c	1216;"	d	file:
F32MAX	s_audio_alsamm.c	61;"	d	file:
FAKEBLOCKING	s_audio_pa.c	48;"	d	file:
FALSE	d_fftroutine.c	98;"	d	file:
FAST_TRIG	d_fft_mayer.c	66;"	d	file:
FFTFLT	d_fft_fftsg.c	30;"	d	file:
FFT_NET	d_fftroutine.c	/^} FFT_NET;$/;"	t	typeref:struct:Tfft_net	file:
FHT_SWAP	d_fft_mayer.c	70;"	d	file:
FIRSTPORTNUM	s_inter.c	833;"	d	file:
FMAX	s_audio_alsa.c	46;"	d	file:
FMAX	s_audio_oss.c	84;"	d	file:
FORMAT_AIFF	d_soundfile.c	53;"	d	file:
FORMAT_NEXT	d_soundfile.c	54;"	d	file:
FORMAT_WAVE	d_soundfile.c	52;"	d	file:
FORWARD	d_fftroutine.c	124;"	d	file:
FreeCallbackInstanceData	s_midi_mmio.c	/^void FAR PASCAL FreeCallbackInstanceData(LPCALLBACKINSTANCEDATA lpBuf)$/;"	f
FreeCircularBuffer	s_midi_mmio.c	/^void FreeCircularBuffer(LPCIRCULARBUFFER lpBuf)$/;"	f
GLIST_DEFCANVASHEIGHT	g_canvas.c	28;"	d	file:
GLIST_DEFCANVASWIDTH	g_canvas.c	27;"	d	file:
GLIST_DEFCANVASYLOC	g_canvas.c	35;"	d	file:
GLIST_DEFCANVASYLOC	g_canvas.c	37;"	d	file:
GLIST_DEFGRAPHHEIGHT	g_canvas.h	47;"	d
GLIST_DEFGRAPHWIDTH	g_canvas.h	46;"	d
GOOD_TRIG	d_fft_mayer.c	62;"	d	file:
GP_ARRAY	m_pd.h	124;"	d
GP_GLIST	m_pd.h	123;"	d
GP_NONE	m_pd.h	122;"	d
GUI_ALLOCCHUNK	s_inter.c	542;"	d	file:
GUI_BYTESPERPING	s_inter.c	544;"	d	file:
GUI_UPDATESLICE	s_inter.c	543;"	d	file:
GetEvent	s_midi_mmio.c	/^WORD FAR PASCAL GetEvent(LPCIRCULARBUFFER lpBuf, LPEVENT lpEvent)$/;"	f
HANNING	d_fftroutine.c	128;"	d	file:
HASHSIZE	m_class.c	486;"	d	file:
HAVE_ALLOCA	m_binbuf.c	571;"	d	file:
HAVE_ALLOCA	x_array.c	28;"	d	file:
HAVE_ALLOCA	x_list.c	20;"	d	file:
HAVE_ALLOCA	x_text.c	31;"	d	file:
HIOFFSET	d_array.c	528;"	d	file:
HIOFFSET	d_array.c	531;"	d	file:
HIOFFSET	d_osc.c	39;"	d	file:
HIOFFSET	d_osc.c	42;"	d	file:
HUGEMSG	m_binbuf.c	568;"	d	file:
IEMGUI_MAX_NUM_LEN	g_all_guis.h	99;"	d
IEM_BNG_DEFAULTBREAKFLASHTIME	g_all_guis.h	53;"	d
IEM_BNG_DEFAULTHOLDFLASHTIME	g_all_guis.h	52;"	d
IEM_BNG_MINBREAKFLASHTIME	g_all_guis.h	55;"	d
IEM_BNG_MINHOLDFLASHTIME	g_all_guis.h	54;"	d
IEM_FONT_MINSIZE	g_all_guis.h	50;"	d
IEM_FONT_STYLE_ALL	g_all_guis.h	73;"	d
IEM_FSTYLE_FLAGS_ALL	g_all_guis.h	92;"	d
IEM_GUI_COLNR_BLACK	g_all_guis.h	31;"	d
IEM_GUI_COLNR_BLUE	g_all_guis.h	26;"	d
IEM_GUI_COLNR_CYAN	g_all_guis.h	25;"	d
IEM_GUI_COLNR_DD_GREY	g_all_guis.h	20;"	d
IEM_GUI_COLNR_D_BLUE	g_all_guis.h	37;"	d
IEM_GUI_COLNR_D_CYAN	g_all_guis.h	36;"	d
IEM_GUI_COLNR_D_GREEN	g_all_guis.h	35;"	d
IEM_GUI_COLNR_D_GREY	g_all_guis.h	9;"	d
IEM_GUI_COLNR_D_MAGENTA	g_all_guis.h	38;"	d
IEM_GUI_COLNR_D_ORANGE	g_all_guis.h	33;"	d
IEM_GUI_COLNR_D_RED	g_all_guis.h	32;"	d
IEM_GUI_COLNR_D_YELLOW	g_all_guis.h	34;"	d
IEM_GUI_COLNR_GREEN	g_all_guis.h	24;"	d
IEM_GUI_COLNR_LL_GREY	g_all_guis.h	18;"	d
IEM_GUI_COLNR_L_BLUE	g_all_guis.h	15;"	d
IEM_GUI_COLNR_L_CYAN	g_all_guis.h	14;"	d
IEM_GUI_COLNR_L_GREEN	g_all_guis.h	13;"	d
IEM_GUI_COLNR_L_GREY	g_all_guis.h	29;"	d
IEM_GUI_COLNR_L_MAGENTA	g_all_guis.h	16;"	d
IEM_GUI_COLNR_L_ORANGE	g_all_guis.h	11;"	d
IEM_GUI_COLNR_L_RED	g_all_guis.h	10;"	d
IEM_GUI_COLNR_L_YELLOW	g_all_guis.h	12;"	d
IEM_GUI_COLNR_MAGENTA	g_all_guis.h	27;"	d
IEM_GUI_COLNR_MD_GREY	g_all_guis.h	30;"	d
IEM_GUI_COLNR_ML_GREY	g_all_guis.h	8;"	d
IEM_GUI_COLNR_M_GREY	g_all_guis.h	19;"	d
IEM_GUI_COLNR_ORANGE	g_all_guis.h	22;"	d
IEM_GUI_COLNR_RED	g_all_guis.h	21;"	d
IEM_GUI_COLNR_WHITE	g_all_guis.h	7;"	d
IEM_GUI_COLNR_YELLOW	g_all_guis.h	23;"	d
IEM_GUI_COLOR_EDITED	g_all_guis.h	98;"	d
IEM_GUI_COLOR_NORMAL	g_all_guis.h	41;"	d
IEM_GUI_COLOR_SELECTED	g_all_guis.h	40;"	d
IEM_GUI_DEFAULTSIZE	g_all_guis.h	45;"	d
IEM_GUI_DRAW_MODE_CONFIG	g_all_guis.h	82;"	d
IEM_GUI_DRAW_MODE_ERASE	g_all_guis.h	81;"	d
IEM_GUI_DRAW_MODE_IO	g_all_guis.h	83;"	d
IEM_GUI_DRAW_MODE_MOVE	g_all_guis.h	78;"	d
IEM_GUI_DRAW_MODE_NEW	g_all_guis.h	79;"	d
IEM_GUI_DRAW_MODE_SELECT	g_all_guis.h	80;"	d
IEM_GUI_DRAW_MODE_UPDATE	g_all_guis.h	77;"	d
IEM_GUI_MAXSIZE	g_all_guis.h	47;"	d
IEM_GUI_MAX_COLOR	g_all_guis.h	43;"	d
IEM_GUI_MINSIZE	g_all_guis.h	46;"	d
IEM_GUI_OLD_RCV_FLAG	g_all_guis.h	96;"	d
IEM_GUI_OLD_SND_FLAG	g_all_guis.h	95;"	d
IEM_INIT_ARGS_ALL	g_all_guis.h	93;"	d
IEM_MAX_SYM_LEN	g_all_guis.h	75;"	d
IEM_RADIO_MAX	g_all_guis.h	67;"	d
IEM_SL_DEFAULTSIZE	g_all_guis.h	48;"	d
IEM_SL_MINSIZE	g_all_guis.h	49;"	d
IEM_SYM_UNIQUE_ALL	g_all_guis.h	72;"	d
IEM_SYM_UNIQUE_LAB	g_all_guis.h	71;"	d
IEM_SYM_UNIQUE_RCV	g_all_guis.h	70;"	d
IEM_SYM_UNIQUE_SND	g_all_guis.h	69;"	d
IEM_VU_DEFAULTSIZE	g_all_guis.h	57;"	d
IEM_VU_LARGESMALL	g_all_guis.h	58;"	d
IEM_VU_MAXDB	g_all_guis.h	64;"	d
IEM_VU_MAXSIZE	g_all_guis.h	60;"	d
IEM_VU_MINDB	g_all_guis.h	63;"	d
IEM_VU_MINSIZE	g_all_guis.h	59;"	d
IEM_VU_OFFSET	g_all_guis.h	65;"	d
IEM_VU_STEPS	g_all_guis.h	61;"	d
IMAG	d_fftroutine.c	113;"	d	file:
INBUFSIZE	s_inter.c	82;"	d	file:
INITVSTAKEN	d_ctl.c	569;"	d	file:
INPUT_BUFFER_SIZE	s_midi_mmio.c	116;"	d	file:
INT32_MAX	s_audio_alsa.h	20;"	d
INT32_MAX	s_audio_alsamm.c	50;"	d	file:
INT_SIZE	d_fftroutine.c	104;"	d	file:
INVERSE	d_fftroutine.c	125;"	d	file:
IOMIDDLE	g_canvas.h	45;"	d
IOWIDTH	g_canvas.h	44;"	d
ISINLET	m_obj.c	39;"	d	file:
ISSYMBOL	m_binbuf.c	974;"	d	file:
IS_A_DOLLAR	g_all_guis.h	89;"	d
IS_A_DOLLSYM	g_all_guis.h	90;"	d
IS_A_FLOAT	g_all_guis.h	87;"	d
IS_A_POINTER	g_all_guis.h	86;"	d
IS_A_SYMBOL	g_all_guis.h	88;"	d
JACK_OUT_MAX	s_audio_jack.c	21;"	d	file:
KB_EQ	x_text.c	877;"	d	file:
KB_GE	x_text.c	879;"	d	file:
KB_GT	x_text.c	878;"	d	file:
KB_LE	x_text.c	881;"	d	file:
KB_LT	x_text.c	880;"	d	file:
KB_NEAR	x_text.c	882;"	d	file:
LATE	s_audio_mmio.c	465;"	d	file:
LINEAR	d_fftroutine.c	120;"	d	file:
LIST_NGETBYTE	x_list.c	23;"	d	file:
LITTLE_ENDIAN	d_array.c	519;"	d	file:
LITTLE_ENDIAN	d_osc.c	30;"	d	file:
LMARGIN	g_rtext.c	19;"	d	file:
LOCALHOST	s_inter.c	70;"	d	file:
LOCALHOST	s_inter.c	72;"	d	file:
LOGCOSTABSIZE	m_pd.h	612;"	d
LOGTEN	d_math.c	11;"	d	file:
LOGTEN	x_acoustics.c	10;"	d	file:
LOWOFFSET	d_array.c	529;"	d	file:
LOWOFFSET	d_array.c	532;"	d	file:
LOWOFFSET	d_osc.c	40;"	d	file:
LOWOFFSET	d_osc.c	43;"	d	file:
LPCALLBACKINSTANCEDATA	s_midi_mmio.c	/^typedef CALLBACKINSTANCEDATA FAR *LPCALLBACKINSTANCEDATA;$/;"	t	file:
LPCIRCULARBUFFER	s_midi_mmio.c	/^typedef CIRCULARBUFFER FAR *LPCIRCULARBUFFER;$/;"	t	file:
LPEVENT	s_midi_mmio.c	/^typedef EVENT FAR *LPEVENT;$/;"	t	file:
MAG	d_fftroutine.c	115;"	d	file:
MAXADDMESSV	m_binbuf.c	259;"	d	file:
MAXAUDIOINDEV	s_stuff.h	243;"	d
MAXAUDIOOUTDEV	s_stuff.h	244;"	d
MAXBUFFER	s_audio_mmio.c	32;"	d	file:
MAXBUFSIZE	d_soundfile.c	1524;"	d	file:
MAXBYTESPERSAMPLE	d_soundfile.c	1517;"	d	file:
MAXCHANS	s_audio_esd.c	72;"	d	file:
MAXFFT	d_fft_fftw.c	15;"	d	file:
MAXFONTS	s_inter.c	835;"	d	file:
MAXLOG	x_arithmetic.c	627;"	d	file:
MAXLOGSIG	m_pd.h	568;"	d
MAXMIDIINDEV	s_stuff.h	107;"	d
MAXMIDIOUTDEV	s_stuff.h	108;"	d
MAXNDEV	s_audio.c	29;"	d	file:
MAXNDEV	s_midi.c	575;"	d	file:
MAXOBJDEPTH	m_class.c	536;"	d	file:
MAXOVERLAP	d_ctl.c	568;"	d	file:
MAXPDARG	m_pd.h	79;"	d
MAXPDSTRING	m_pd.h	78;"	d
MAXRESYNC	s_audio_mmio.c	307;"	d	file:
MAXSERIAL	x_misc.c	153;"	d	file:
MAXSFCHANS	d_soundfile.c	29;"	d	file:
MAXSIGSIZE	m_pd.h	569;"	d
MAXSTACK	m_binbuf.c	972;"	d	file:
MAXVECSIZE	d_soundfile.c	1518;"	d	file:
MAX_CLIENTS	s_audio_jack.c	18;"	d	file:
MAX_JACK_PORTS	s_audio_jack.c	19;"	d	file:
MA_CONNECT	g_canvas.h	118;"	d
MA_DRAGTEXT	g_canvas.h	121;"	d
MA_MOVE	g_canvas.h	117;"	d
MA_NONE	g_canvas.h	116;"	d
MA_PASSOUT	g_canvas.h	120;"	d
MA_REGION	g_canvas.h	119;"	d
MA_RESIZE	g_canvas.h	122;"	d
MIDIACTIVESENSE	s_midi.c	282;"	d	file:
MIDIACTIVESENSE	s_midi_pm.c	44;"	d	file:
MIDICHANNELTOUCH	s_midi.c	267;"	d	file:
MIDICHANNELTOUCH	s_midi_pm.c	29;"	d	file:
MIDICLOCK	s_midi.c	277;"	d	file:
MIDICLOCK	s_midi_pm.c	39;"	d	file:
MIDICONT	s_midi.c	280;"	d	file:
MIDICONT	s_midi_pm.c	42;"	d	file:
MIDICONTROLCHANGE	s_midi.c	265;"	d	file:
MIDICONTROLCHANGE	s_midi_pm.c	27;"	d	file:
MIDIENDSYSEX	s_midi.c	276;"	d	file:
MIDIENDSYSEX	s_midi_pm.c	38;"	d	file:
MIDINOTEOFF	s_midi.c	262;"	d	file:
MIDINOTEOFF	s_midi_pm.c	24;"	d	file:
MIDINOTEON	s_midi.c	263;"	d	file:
MIDINOTEON	s_midi_pm.c	25;"	d	file:
MIDIPITCHBEND	s_midi.c	268;"	d	file:
MIDIPITCHBEND	s_midi_pm.c	30;"	d	file:
MIDIPOLYTOUCH	s_midi.c	264;"	d	file:
MIDIPOLYTOUCH	s_midi_pm.c	26;"	d	file:
MIDIPROGRAMCHANGE	s_midi.c	266;"	d	file:
MIDIPROGRAMCHANGE	s_midi_pm.c	28;"	d	file:
MIDIQSIZE	s_midi.c	37;"	d	file:
MIDIRESERVED1	s_midi.c	273;"	d	file:
MIDIRESERVED1	s_midi_pm.c	35;"	d	file:
MIDIRESERVED2	s_midi.c	274;"	d	file:
MIDIRESERVED2	s_midi_pm.c	36;"	d	file:
MIDIRESET	s_midi.c	283;"	d	file:
MIDIRESET	s_midi_pm.c	45;"	d	file:
MIDISONGPOS	s_midi.c	271;"	d	file:
MIDISONGPOS	s_midi_pm.c	33;"	d	file:
MIDISONGSELECT	s_midi.c	272;"	d	file:
MIDISONGSELECT	s_midi_pm.c	34;"	d	file:
MIDISTART	s_midi.c	279;"	d	file:
MIDISTART	s_midi_pm.c	41;"	d	file:
MIDISTARTSYSEX	s_midi.c	269;"	d	file:
MIDISTARTSYSEX	s_midi_pm.c	31;"	d	file:
MIDISTOP	s_midi.c	281;"	d	file:
MIDISTOP	s_midi_pm.c	43;"	d	file:
MIDITICK	s_midi.c	278;"	d	file:
MIDITICK	s_midi_pm.c	40;"	d	file:
MIDITIMECODE	s_midi.c	270;"	d	file:
MIDITIMECODE	s_midi_pm.c	32;"	d	file:
MIDITUNEREQUEST	s_midi.c	275;"	d	file:
MIDITUNEREQUEST	s_midi_pm.c	37;"	d	file:
MIDI_AFTERTOUCH	s_midi.c	180;"	d	file:
MIDI_CONTROLCHANGE	s_midi.c	178;"	d	file:
MIDI_NOTEON	s_midi.c	176;"	d	file:
MIDI_PITCHBEND	s_midi.c	181;"	d	file:
MIDI_POLYAFTERTOUCH	s_midi.c	177;"	d	file:
MIDI_PROGRAMCHANGE	s_midi.c	179;"	d	file:
MINBUFSIZE	d_soundfile.c	1523;"	d	file:
MINFFT	d_fft_fftw.c	14;"	d	file:
MSW	m_pd.h	20;"	d
M_PI_2	d_fftsg_h.c	463;"	d	file:
NAPORTS	s_audio_mmio.c	23;"	d	file:
NBIN	m_sched.c	177;"	d	file:
NDEFAULTFONT	s_inter.c	839;"	d	file:
NFONT	s_main.c	129;"	d	file:
NHIST	g_editor.c	2559;"	d	file:
NHIST	m_sched.c	178;"	d	file:
NOMOD	g_editor.c	1209;"	d	file:
NOMOUSE	g_template.c	790;"	d	file:
NOTHING	s_audio_mmio.c	467;"	d	file:
NRESYNC	m_sched.c	236;"	d	file:
NSEARCH	s_midi_alsa.c	224;"	d	file:
NSEARCH	s_midi_oss.c	21;"	d	file:
NS_FORMAT_FLOAT	d_soundfile.c	71;"	d	file:
NS_FORMAT_LINEAR_16	d_soundfile.c	69;"	d	file:
NS_FORMAT_LINEAR_24	d_soundfile.c	70;"	d	file:
NUMARGS	s_path.c	537;"	d	file:
OBUFSIZE	d_soundfile.c	163;"	d	file:
OSS_BYTESPERCHAN	s_audio_oss.c	46;"	d	file:
OSS_DEFAUDIOBUF	s_audio_oss.c	40;"	d	file:
OSS_DEFAULTCH	s_audio_oss.c	41;"	d	file:
OSS_DEFFRAGSIZE	s_audio_oss.c	39;"	d	file:
OSS_MAXCHPERDEV	s_audio_oss.c	37;"	d	file:
OSS_MAXDEV	s_audio_oss.c	38;"	d	file:
OSS_MAXSAMPLEWIDTH	s_audio_oss.c	45;"	d	file:
OSS_XFERSAMPS	s_audio_oss.c	47;"	d	file:
OSS_XFERSIZE	s_audio_oss.c	48;"	d	file:
O_AUDIOFLAG	s_audio_oss.c	264;"	d	file:
O_CREAT	d_soundfile.c	40;"	d	file:
O_MIDIFLAG	s_midi_oss.c	36;"	d	file:
O_TRUNC	d_soundfile.c	41;"	d	file:
O_WRONLY	d_soundfile.c	42;"	d	file:
PA_VOLATILE	s_audio_paring.h	45;"	d
PDBINDIR	s_inter.c	58;"	d	file:
PDGUIDIR	s_inter.c	62;"	d	file:
PD_BADFLOAT	m_pd.h	/^static inline int PD_BADFLOAT(t_sample f) {$/;"	f
PD_BADFLOAT	m_pd.h	737;"	d
PD_BADFLOAT	m_pd.h	741;"	d
PD_BADFLOAT	m_pd.h	745;"	d
PD_BIGORSMALL	m_pd.h	/^static inline int PD_BIGORSMALL(t_sample f) {$/;"	f
PD_BIGORSMALL	m_pd.h	738;"	d
PD_BIGORSMALL	m_pd.h	742;"	d
PD_BIGORSMALL	m_pd.h	748;"	d
PD_BUGFIX_VERSION	m_pd.h	13;"	d
PD_CLASS_DEF	m_class.c	5;"	d	file:
PD_FLOATSIZE	m_pd.h	88;"	d
PD_FLOATTYPE	m_pd.h	92;"	d
PD_FLOATTYPE	m_pd.h	97;"	d
PD_FLOATUINTTYPE	m_pd.h	94;"	d
PD_FLOATUINTTYPE	m_pd.h	98;"	d
PD_LONGINTTYPE	m_pd.h	83;"	d
PD_MAJOR_VERSION	m_pd.h	11;"	d
PD_MINOR_VERSION	m_pd.h	12;"	d
PD_TEST_VERSION	m_pd.h	14;"	d
PD_USE_TE_XPIX	m_pd.h	718;"	d
PHASE	d_fftroutine.c	116;"	d	file:
PI	d_fftroutine.c	108;"	d	file:
PLOTSTYLE_BEZ	g_canvas.h	345;"	d
PLOTSTYLE_POINTS	g_canvas.h	343;"	d
PLOTSTYLE_POLY	g_canvas.h	344;"	d
PNTR_SIZE	d_fftroutine.c	106;"	d	file:
POLAR	d_fftroutine.c	117;"	d	file:
PROLOGCALL	d_ugen.c	231;"	d	file:
PutEvent	s_midi_mmio.c	/^void FAR PASCAL PutEvent(LPCIRCULARBUFFER lpBuf, LPEVENT lpEvent)$/;"	f
RDFT_LOOP_DIV	d_fftsg_h.c	547;"	d	file:
READHDRSIZE	d_soundfile.c	161;"	d	file:
READSIZE	d_soundfile.c	1520;"	d	file:
REAL	d_fft_mayer.c	61;"	d	file:
REAL	d_fftroutine.c	112;"	d	file:
RECT	d_fftroutine.c	114;"	d	file:
RECTANGULAR	d_fftroutine.c	129;"	d	file:
REQUEST_BUSY	d_soundfile.c	1530;"	d	file:
REQUEST_CLOSE	d_soundfile.c	1528;"	d	file:
REQUEST_NOTHING	d_soundfile.c	1526;"	d	file:
REQUEST_OPEN	d_soundfile.c	1527;"	d	file:
REQUEST_QUIT	d_soundfile.c	1529;"	d	file:
RESYNC	s_audio_mmio.c	466;"	d	file:
RIGHTCLICK	g_editor.c	1213;"	d	file:
RMARGIN	g_rtext.c	20;"	d	file:
RME_DEFAULTCH	s_audio_oss.c	42;"	d	file:
RTEXT_DBL	g_canvas.h	425;"	d
RTEXT_DOWN	g_canvas.h	423;"	d
RTEXT_DRAG	g_canvas.h	424;"	d
RTEXT_SHIFT	g_canvas.h	426;"	d
SAMPBLK	d_delay.c	36;"	d	file:
SAMPBUFSIZE	d_soundfile.c	1145;"	d	file:
SAMPLE	d_fftroutine.c	101;"	d	file:
SAMPLE_SIZE	d_fftroutine.c	105;"	d	file:
SAMPSIZE	s_audio_mmio.c	27;"	d	file:
SCALE	d_soundfile.c	72;"	d	file:
SCHED_AUDIO_CALLBACK	s_stuff.h	165;"	d
SCHED_AUDIO_NONE	s_stuff.h	163;"	d
SCHED_AUDIO_POLL	s_stuff.h	164;"	d
SENDDACS_NO	s_stuff.h	62;"	d
SENDDACS_SLEPT	s_stuff.h	64;"	d
SENDDACS_YES	s_stuff.h	63;"	d
SEND_CHECK	g_rtext.c	32;"	d	file:
SEND_FIRST	g_rtext.c	30;"	d	file:
SEND_UPDATE	g_rtext.c	31;"	d	file:
SEPARATOR	s_path.c	192;"	d	file:
SEPARATOR	s_path.c	194;"	d	file:
SETCOMMA	m_pd.h	320;"	d
SETDOLLAR	m_pd.h	326;"	d
SETDOLLSYM	m_pd.h	328;"	d
SETFLOAT	m_pd.h	323;"	d
SETPOINTER	m_pd.h	321;"	d
SETSEMI	m_pd.h	319;"	d
SETSYMBOL	m_pd.h	324;"	d
SHIFTMOD	g_editor.c	1210;"	d	file:
SHORT_SIZE	d_fftroutine.c	103;"	d	file:
SMALLMSG	m_binbuf.c	567;"	d	file:
SNDCTL_DSP_GETISPACE	s_audio_oss.c	11;"	d	file:
SNDCTL_DSP_GETOSPACE	s_audio_oss.c	14;"	d	file:
SOCKET_ERROR	u_pdreceive.c	28;"	d	file:
SOCKET_ERROR	u_pdsend.c	22;"	d	file:
SOCKET_ERROR	x_net.c	20;"	d	file:
SQRT2	d_fft_mayer.c	218;"	d	file:
SQRT2_2	d_fft_mayer.c	217;"	d	file:
STACKITER	m_obj.c	302;"	d	file:
STARTUPNAME	s_path.c	536;"	d	file:
STATE_IDLE	d_soundfile.c	1532;"	d	file:
STATE_STARTUP	d_soundfile.c	1533;"	d	file:
STATE_STREAM	d_soundfile.c	1534;"	d	file:
SYS_BYTESPERCHAN	s_audio.c	26;"	d	file:
SYS_DEFAULTCH	s_audio.c	23;"	d	file:
SYS_QUIT_QUIT	m_sched.c	24;"	d	file:
SYS_QUIT_RESTART	m_sched.c	25;"	d	file:
SYS_SAMPLEWIDTH	s_audio.c	25;"	d	file:
SYS_XFERSAMPS	s_audio.c	27;"	d	file:
SYS_XFERSIZE	s_audio.c	28;"	d	file:
S_UTF8_H	s_utf8.h	2;"	d
TEXT_NGETBYTE	x_array.c	30;"	d	file:
TEXT_NGETBYTE	x_text.c	33;"	d	file:
THREAD_LOCKING	m_sched.c	19;"	d	file:
TIMEUNITPERMSEC	m_sched.c	16;"	d	file:
TIMEUNITPERSECOND	m_sched.c	17;"	d	file:
TMARGIN	g_rtext.c	23;"	d	file:
TMARGIN	g_rtext.c	26;"	d	file:
TRIG_INIT	d_fft_mayer.c	104;"	d	file:
TRIG_INIT	d_fft_mayer.c	73;"	d	file:
TRIG_NEXT	d_fft_mayer.c	111;"	d	file:
TRIG_NEXT	d_fft_mayer.c	82;"	d	file:
TRIG_RESET	d_fft_mayer.c	117;"	d	file:
TRIG_RESET	d_fft_mayer.c	98;"	d	file:
TRIG_VARS	d_fft_mayer.c	102;"	d	file:
TRIG_VARS	d_fft_mayer.c	71;"	d	file:
TRUE	d_fftroutine.c	97;"	d	file:
TR_ANYTHING	x_connective.c	938;"	d	file:
TR_BANG	x_connective.c	933;"	d	file:
TR_FLOAT	x_connective.c	934;"	d	file:
TR_LIST	x_connective.c	937;"	d	file:
TR_POINTER	x_connective.c	936;"	d	file:
TR_SYMBOL	x_connective.c	935;"	d	file:
TWO_PI	d_fftroutine.c	109;"	d	file:
T_ATOM	m_pd.h	234;"	d
T_MESSAGE	m_pd.h	233;"	d
T_OBJECT	m_pd.h	232;"	d
T_TEXT	m_pd.h	231;"	d
Tfft_net	d_fftroutine.c	/^typedef struct Tfft_net {$/;"	s	file:
UCS4	s_utf8.h	7;"	d
UCUT_CLEAR	g_editor.c	472;"	d	file:
UCUT_CUT	g_editor.c	471;"	d	file:
UCUT_TEXT	g_editor.c	473;"	d	file:
UNDO_FREE	g_canvas.h	497;"	d
UNDO_REDO	g_canvas.h	499;"	d
UNDO_UNDO	g_canvas.h	498;"	d
UNITBIT32	d_array.c	501;"	d	file:
UNITBIT32	d_osc.c	11;"	d	file:
UPBUFSIZE	g_rtext.c	181;"	d	file:
USEAPI_DUMMY	s_stuff.h	235;"	d
USE_CDFT_THREADS	d_fft_fftsg.c	898;"	d	file:
USE_CDFT_THREADS	d_fft_fftsg.c	925;"	d	file:
USE_CDFT_THREADS	d_fftsg_h.c	489;"	d	file:
USE_CDFT_THREADS	d_fftsg_h.c	516;"	d	file:
UTF8_MAXBYTES	s_utf8.h	25;"	d
UTF8_MAXBYTES	s_utf8.h	32;"	d
UTF8_MAXBYTES1	s_utf8.h	28;"	d
UTF8_MAXBYTES1	s_utf8.h	35;"	d
UTF8_SUPPORT_FULL_UCS4	s_utf8.h	15;"	d
WATCH_PERIODS	s_audio_alsamm.c	133;"	d	file:
WAV_FLOAT	d_soundfile.c	115;"	d	file:
WAV_INT	d_soundfile.c	114;"	d	file:
WBUFSIZE	m_binbuf.c	876;"	d	file:
WHDR1	d_soundfile.c	157;"	d	file:
WHDR2	d_soundfile.c	158;"	d	file:
WI1250	d_fftsg_h.c	478;"	d	file:
WI2500	d_fftsg_h.c	472;"	d	file:
WI3750	d_fftsg_h.c	484;"	d	file:
WISHAPP	s_inter.c	66;"	d	file:
WR1250	d_fftsg_h.c	475;"	d	file:
WR2500	d_fftsg_h.c	469;"	d	file:
WR3750	d_fftsg_h.c	481;"	d	file:
WR5000	d_fftsg_h.c	466;"	d	file:
WRAPBACK	s_audio_mmio.c	306;"	d	file:
WRAPFWD	s_audio_mmio.c	305;"	d	file:
WRITEHDRSIZE	d_soundfile.c	159;"	d	file:
WRITESIZE	d_soundfile.c	1521;"	d	file:
WinMain	s_entry.c	/^int WINAPI WinMain(HINSTANCE hInstance,$/;"	f
XTOLERANCE	g_editor.c	2557;"	d	file:
XTRASAMPS	d_delay.c	35;"	d	file:
YTOLERANCE	g_editor.c	2558;"	d	file:
_RINGBUFFER_H	s_audio_paring.h	2;"	d
__m_imp_h_	m_imp.h	105;"	d
__m_pd_h_	m_pd.h	768;"	d
_abs_tilde	d_math.c	/^typedef struct _abs_tilde$/;"	s	file:
_adc	d_dac.c	/^typedef struct _adc$/;"	s	file:
_aiff	d_soundfile.c	/^typedef struct _aiff$/;"	s	file:
_alist	x_list.c	/^typedef struct _alist$/;"	s	file:
_alsa_dev	s_audio_alsa.h	/^typedef struct _alsa_dev$/;"	s
_append	g_traversal.c	/^typedef struct _append$/;"	s	file:
_appendvariable	g_traversal.c	/^typedef struct _appendvariable$/;"	s	file:
_array	g_canvas.h	/^struct _array$/;"	s
_array	m_pd.h	/^EXTERN_STRUCT _array;$/;"	v
_array_client	x_array.c	/^typedef struct _array_client$/;"	s	file:
_array_max	x_array.c	/^typedef struct _array_max$/;"	s	file:
_array_min	x_array.c	/^typedef struct _array_min$/;"	s	file:
_array_random	x_array.c	/^typedef struct _array_random   \/* any operation meaningful on a subrange *\/$/;"	s	file:
_array_rangeop	x_array.c	/^typedef struct _array_rangeop   \/* any operation meaningful on a subrange *\/$/;"	s	file:
_array_size	x_array.c	/^typedef struct _array_size$/;"	s	file:
_arrayvis	g_canvas.h	/^typedef struct _arrayvis$/;"	s
_atan2	x_arithmetic.c	/^typedef struct _atan2$/;"	s	file:
_atom	m_pd.h	/^typedef struct _atom$/;"	s
_bag	x_midi.c	/^typedef struct _bag$/;"	s	file:
_bagelem	x_midi.c	/^typedef struct _bagelem$/;"	s	file:
_bang	d_misc.c	/^typedef struct _bang$/;"	s	file:
_bang	x_connective.c	/^typedef struct _bang$/;"	s	file:
_bendin	x_midi.c	/^typedef struct _bendin$/;"	s	file:
_bendout	x_midi.c	/^typedef struct _bendout$/;"	s	file:
_binbuf	m_binbuf.c	/^struct _binbuf$/;"	s	file:
_binbuf	m_pd.h	/^EXTERN_STRUCT _binbuf;$/;"	v
_bindelem	m_pd.c	/^typedef struct _bindelem$/;"	s	file:
_bindlist	m_pd.c	/^typedef struct _bindlist$/;"	s	file:
_binop	x_arithmetic.c	/^typedef struct _binop$/;"	s	file:
_block	d_ugen.c	/^typedef struct _block$/;"	s	file:
_bng	g_all_guis.h	/^typedef struct _bng$/;"	s
_canvasenvironment	g_canvas.c	/^struct _canvasenvironment$/;"	s	file:
_canvasenvironment	g_canvas.h	/^EXTERN_STRUCT _canvasenvironment;$/;"	v
_change	x_connective.c	/^typedef struct _change$/;"	s	file:
_class	m_imp.h	/^struct _class$/;"	s
_class	m_pd.h	/^EXTERN_STRUCT _class;$/;"	v
_clip	d_math.c	/^typedef struct _clip$/;"	s	file:
_clip	x_arithmetic.c	/^typedef struct _clip$/;"	s	file:
_clock	m_pd.h	/^EXTERN_STRUCT _clock;$/;"	v
_clock	m_sched.c	/^struct _clock$/;"	s	file:
_comm	d_soundfile.c	/^typedef struct _comm$/;"	s	file:
_cos	d_osc.c	/^typedef struct _cos$/;"	s	file:
_cputime	x_misc.c	/^typedef struct _cputime$/;"	s	file:
_ctlin	x_midi.c	/^typedef struct _ctlin$/;"	s	file:
_ctlout	x_midi.c	/^typedef struct _ctlout$/;"	s	file:
_curve	g_template.c	/^typedef struct _curve$/;"	s	file:
_dac	d_dac.c	/^typedef struct _dac$/;"	s	file:
_datachunk	d_soundfile.c	/^typedef struct _datachunk$/;"	s	file:
_dataslot	g_canvas.h	/^typedef struct _dataslot$/;"	s
_declare	g_canvas.c	/^typedef struct _declare$/;"	s	file:
_delay	x_time.c	/^typedef struct _delay$/;"	s	file:
_drawnumber	g_template.c	/^typedef struct _drawnumber$/;"	s	file:
_dspcontext	d_ugen.c	/^struct _dspcontext$/;"	s	file:
_dspcontext	g_canvas.c	/^EXTERN_STRUCT _dspcontext;$/;"	v
_editor	g_canvas.h	/^typedef struct _editor$/;"	s
_elem	g_traversal.c	/^typedef struct _elem$/;"	s	file:
_exp_tilde	d_math.c	/^typedef struct _exp_tilde$/;"	s	file:
_fdpoll	s_inter.c	/^typedef struct _fdpoll$/;"	s	file:
_fdpoll	u_pdreceive.c	/^typedef struct _fdpoll$/;"	s	file:
_fielddesc	g_canvas.h	/^EXTERN_STRUCT _fielddesc;$/;"	v
_fielddesc	g_template.c	/^struct _fielddesc$/;"	s	file:
_fmt	d_soundfile.c	/^typedef struct _fmt         \/* format chunk *\/$/;"	s	file:
_fontinfo	s_main.c	/^typedef struct _fontinfo$/;"	s	file:
_garray	g_array.c	/^struct _garray$/;"	s	file:
_garray	m_pd.h	/^EXTERN_STRUCT _garray;$/;"	v
_gatom	g_text.c	/^typedef struct _gatom$/;"	s	file:
_get	g_traversal.c	/^typedef struct _get$/;"	s	file:
_getsize	g_traversal.c	/^typedef struct _getsize$/;"	s	file:
_getvariable	g_traversal.c	/^typedef struct _getvariable$/;"	s	file:
_gfxstub	x_gui.c	/^typedef struct _gfxstub$/;"	s	file:
_glist	g_canvas.h	/^struct _glist$/;"	s
_glist	m_pd.h	/^EXTERN_STRUCT _glist;$/;"	v
_gobj	m_pd.h	/^typedef struct _gobj        \/* a graphical object *\/$/;"	s
_gpointer	m_pd.h	/^typedef struct _gpointer           \/* pointer to a gobj in a glist *\/$/;"	s
_gstack	m_pd.c	/^typedef struct _gstack$/;"	s	file:
_gstub	m_pd.h	/^typedef struct _gstub$/;"	s
_gtemplate	g_canvas.h	/^EXTERN_STRUCT _gtemplate;$/;"	v
_gtemplate	g_template.c	/^struct _gtemplate$/;"	s	file:
_guiconnect	g_canvas.h	/^EXTERN_STRUCT _guiconnect;$/;"	v
_guiconnect	g_guiconnect.c	/^struct _guiconnect$/;"	s	file:
_guiqueue	s_inter.c	/^typedef struct _guiqueue$/;"	s	file:
_hang	x_midi.c	/^typedef struct _hang$/;"	s	file:
_hang	x_time.c	/^typedef struct _hang$/;"	s	file:
_hdial	g_all_guis.h	/^typedef struct _hdial$/;"	s
_hslider	g_all_guis.h	/^typedef struct _hslider$/;"	s
_iem_fstyle_flags	g_all_guis.h	/^typedef struct _iem_fstyle_flags$/;"	s
_iem_init_symargs	g_all_guis.h	/^typedef struct _iem_init_symargs$/;"	s
_iemgui	g_all_guis.h	/^typedef struct _iemgui$/;"	s
_iemguidummy	g_all_guis.h	/^typedef struct _iemguidummy$/;"	s
_inlet	m_obj.c	/^struct _inlet$/;"	s	file:
_inlet	m_pd.h	/^EXTERN_STRUCT _inlet;$/;"	v
_key	x_gui.c	/^typedef struct _key$/;"	s	file:
_key	x_text.c	/^typedef struct _key$/;"	s	file:
_keyname	x_gui.c	/^typedef struct _keyname$/;"	s	file:
_keyup	x_gui.c	/^typedef struct _keyup$/;"	s	file:
_line	d_ctl.c	/^typedef struct _line$/;"	s	file:
_line	x_time.c	/^typedef struct _line$/;"	s	file:
_linetraverser	g_canvas.h	/^typedef struct _linetraverser$/;"	s
_list_append	x_list.c	/^typedef struct _list_append$/;"	s	file:
_list_fromsymbol	x_list.c	/^typedef struct _list_fromsymbol$/;"	s	file:
_list_length	x_list.c	/^typedef struct _list_length$/;"	s	file:
_list_prepend	x_list.c	/^typedef struct _list_prepend$/;"	s	file:
_list_split	x_list.c	/^typedef struct _list_split$/;"	s	file:
_list_tosymbol	x_list.c	/^typedef struct _list_tosymbol$/;"	s	file:
_list_trim	x_list.c	/^typedef struct _list_trim$/;"	s	file:
_listelem	x_list.c	/^typedef struct _listelem$/;"	s	file:
_loadbang	x_misc.c	/^typedef struct _loadbang$/;"	s	file:
_loadedlist	s_loader.c	/^typedef struct _loadedlist$/;"	s	file:
_log_tilde	d_math.c	/^typedef struct _log_tilde$/;"	s	file:
_makefilename	x_connective.c	/^typedef struct _makefilename$/;"	s	file:
_makenote	x_midi.c	/^typedef struct _makenote$/;"	s	file:
_max	d_arithmetic.c	/^typedef struct _max$/;"	s	file:
_message	g_text.c	/^typedef struct _message$/;"	s	file:
_messresponder	g_text.c	/^typedef struct _messresponder$/;"	s	file:
_methodentry	m_imp.h	/^typedef struct _methodentry$/;"	s
_metro	x_time.c	/^typedef struct _metro$/;"	s	file:
_midiclkin	x_midi.c	/^typedef struct _midiclkin$/;"	s	file:
_midiin	x_midi.c	/^typedef struct _midiin$/;"	s	file:
_midiout	x_midi.c	/^typedef struct _midiout$/;"	s	file:
_midiqelem	s_midi.c	/^typedef struct _midiqelem$/;"	s	file:
_midirealtimein	x_midi.c	/^typedef struct _midirealtimein$/;"	s	file:
_min	d_arithmetic.c	/^typedef struct _min$/;"	s	file:
_minus	d_arithmetic.c	/^typedef struct _minus$/;"	s	file:
_moses	x_connective.c	/^typedef struct _moses$/;"	s	file:
_multidev	s_audio_oss.c	/^typedef struct _multidev {$/;"	s	file:
_my_canvas	g_all_guis.h	/^typedef struct _my_canvas$/;"	s
_my_numbox	g_all_guis.h	/^typedef struct _my_numbox$/;"	s
_namecanvas	x_misc.c	/^typedef struct _namecanvas$/;"	s	file:
_namelist	s_stuff.h	/^typedef struct _namelist    \/* element in a linked list of stored strings *\/$/;"	s
_netreceive	x_net.c	/^typedef struct _netreceive$/;"	s	file:
_netsend	x_net.c	/^typedef struct _netsend$/;"	s	file:
_nextstep	d_soundfile.c	/^typedef struct _nextstep$/;"	s	file:
_noise	d_osc.c	/^typedef struct _noise$/;"	s	file:
_notein	x_midi.c	/^typedef struct _notein$/;"	s	file:
_noteout	x_midi.c	/^typedef struct _noteout$/;"	s	file:
_openpanel	x_gui.c	/^typedef struct _openpanel$/;"	s	file:
_osc	d_osc.c	/^typedef struct _osc$/;"	s	file:
_oss_dev	s_audio_oss.c	/^typedef struct _oss_dev$/;"	s	file:
_outconnect	m_obj.c	/^struct _outconnect$/;"	s	file:
_outconnect	m_pd.h	/^EXTERN_STRUCT _outconnect;$/;"	v
_outlet	m_obj.c	/^struct _outlet$/;"	s	file:
_outlet	m_pd.h	/^EXTERN_STRUCT _outlet;$/;"	v
_over	d_arithmetic.c	/^typedef struct _over$/;"	s	file:
_pack	x_connective.c	/^typedef struct _pack$/;"	s	file:
_parentwidgetbehavior	g_canvas.h	/^struct _parentwidgetbehavior$/;"	s
_parentwidgetbehavior	m_pd.h	/^EXTERN_STRUCT _parentwidgetbehavior;$/;"	v
_pdfloat	x_connective.c	/^typedef struct _pdfloat$/;"	s	file:
_pdinstance	m_imp.h	/^struct _pdinstance$/;"	s
_pdinstance	m_pd.h	/^EXTERN_STRUCT _pdinstance;$/;"	v
_pdint	x_connective.c	/^typedef struct _pdint$/;"	s	file:
_pdsymbol	x_connective.c	/^typedef struct _pdsymbol$/;"	s	file:
_pgmin	x_midi.c	/^typedef struct _pgmin$/;"	s	file:
_pgmout	x_midi.c	/^typedef struct _pgmout$/;"	s	file:
_phasor	d_osc.c	/^typedef struct _phasor$/;"	s	file:
_pipe	x_time.c	/^typedef struct _pipe$/;"	s	file:
_plot	g_template.c	/^typedef struct _plot$/;"	s	file:
_plus	d_arithmetic.c	/^typedef struct _plus$/;"	s	file:
_polytouchin	x_midi.c	/^typedef struct _polytouchin$/;"	s	file:
_polytouchout	x_midi.c	/^typedef struct _polytouchout$/;"	s	file:
_pow_tilde	d_math.c	/^typedef struct _pow_tilde$/;"	s	file:
_print	d_misc.c	/^typedef struct _print$/;"	s	file:
_print	x_interface.c	/^typedef struct _print$/;"	s	file:
_ptrobj	g_traversal.c	/^typedef struct _ptrobj$/;"	s	file:
_qlist	x_text.c	/^typedef struct _qlist$/;"	s	file:
_random	x_misc.c	/^typedef struct _random$/;"	s	file:
_readsf	d_soundfile.c	/^typedef struct _readsf$/;"	s	file:
_realtime	x_misc.c	/^typedef struct _realtime$/;"	s	file:
_receive	x_connective.c	/^typedef struct _receive$/;"	s	file:
_resample	m_pd.h	/^typedef struct _resample$/;"	s
_resync	m_sched.c	/^typedef struct _resync$/;"	s	file:
_route	x_connective.c	/^typedef struct _route$/;"	s	file:
_routeelement	x_connective.c	/^typedef struct _routeelement$/;"	s	file:
_rtext	g_canvas.h	/^EXTERN_STRUCT _rtext;$/;"	v
_rtext	g_rtext.c	/^struct _rtext$/;"	s	file:
_sampleint_union	m_pd.h	/^typedef union _sampleint_union {$/;"	u
_samplelong	d_soundfile.c	/^typedef union _samplelong {$/;"	u	file:
_samplerate	d_ugen.c	/^typedef struct _samplerate$/;"	s	file:
_savepanel	x_gui.c	/^typedef struct _savepanel$/;"	s	file:
_sbuf	s_audio_mmio.c	/^typedef struct _sbuf$/;"	s	file:
_scalar	m_pd.h	/^typedef struct _scalar      \/* a graphical object holding data *\/$/;"	s
_scalarmax	d_arithmetic.c	/^typedef struct _scalarmax$/;"	s	file:
_scalarmin	d_arithmetic.c	/^typedef struct _scalarmin$/;"	s	file:
_scalarminus	d_arithmetic.c	/^typedef struct _scalarminus$/;"	s	file:
_scalarover	d_arithmetic.c	/^typedef struct _scalarover$/;"	s	file:
_scalarplus	d_arithmetic.c	/^typedef struct _scalarplus$/;"	s	file:
_scalartimes	d_arithmetic.c	/^typedef struct _scalartimes$/;"	s	file:
_sel1	x_connective.c	/^typedef struct _sel1$/;"	s	file:
_sel2	x_connective.c	/^typedef struct _sel2$/;"	s	file:
_selectelement	x_connective.c	/^typedef struct _selectelement$/;"	s	file:
_selection	g_canvas.h	/^typedef struct _selection$/;"	s
_send	x_connective.c	/^typedef struct _send$/;"	s	file:
_serial	x_misc.c	/^typedef struct _serial$/;"	s	file:
_set	g_traversal.c	/^typedef struct _set$/;"	s	file:
_setsize	g_traversal.c	/^typedef struct _setsize$/;"	s	file:
_setvariable	g_traversal.c	/^typedef struct _setvariable$/;"	s	file:
_sig	d_ctl.c	/^typedef struct _sig$/;"	s	file:
_sigcatch	d_global.c	/^typedef struct _sigcatch$/;"	s	file:
_sigdelread	d_delay.c	/^typedef struct _sigdelread$/;"	s	file:
_sigdelwrite	d_delay.c	/^typedef struct _sigdelwrite$/;"	s	file:
_siginlet	d_ugen.c	/^typedef struct _siginlet$/;"	s	file:
_signal	m_pd.h	/^typedef struct _signal$/;"	s
_sigoutconnect	d_ugen.c	/^typedef struct _sigoutconnect$/;"	s	file:
_sigoutlet	d_ugen.c	/^typedef struct _sigoutlet$/;"	s	file:
_sigreceive	d_global.c	/^typedef struct _sigreceive$/;"	s	file:
_sigsend	d_global.c	/^typedef struct _sigsend$/;"	s	file:
_sigthrow	d_global.c	/^typedef struct _sigthrow$/;"	s	file:
_sigvd	d_delay.c	/^typedef struct _sigvd$/;"	s	file:
_snapshot	d_ctl.c	/^typedef struct _snapshot$/;"	s	file:
_socketreceiver	s_inter.c	/^struct _socketreceiver$/;"	s	file:
_socketreceiver	s_stuff.h	/^EXTERN_STRUCT _socketreceiver;$/;"	v
_soundfiler	d_soundfile.c	/^typedef struct _soundfiler$/;"	s	file:
_spigot	x_connective.c	/^typedef struct _spigot$/;"	s	file:
_stripnote	x_midi.c	/^typedef struct _stripnote$/;"	s	file:
_swap	x_connective.c	/^typedef struct _swap$/;"	s	file:
_symbol	m_pd.h	/^typedef struct _symbol$/;"	s
_tabosc4_tilde	d_array.c	/^typedef struct _tabosc4_tilde$/;"	s	file:
_tabplay_tilde	d_array.c	/^typedef struct _tabplay_tilde$/;"	s	file:
_tabread	d_array.c	/^typedef struct _tabread$/;"	s	file:
_tabread4	d_array.c	/^typedef struct _tabread4$/;"	s	file:
_tabread4_tilde	d_array.c	/^typedef struct _tabread4_tilde$/;"	s	file:
_tabread_tilde	d_array.c	/^typedef struct _tabread_tilde$/;"	s	file:
_tabreceive	d_array.c	/^typedef struct _tabreceive$/;"	s	file:
_tabsend	d_array.c	/^typedef struct _tabsend$/;"	s	file:
_tabwrite	d_array.c	/^typedef struct _tabwrite$/;"	s	file:
_tabwrite_tilde	d_array.c	/^typedef struct _tabwrite_tilde$/;"	s	file:
_template	g_canvas.h	/^typedef struct _template$/;"	s
_text	m_pd.h	/^typedef struct _text        \/* patchable object - graphical, with text *\/$/;"	s
_text_client	x_text.c	/^typedef struct _text_client$/;"	s	file:
_text_define	x_text.c	/^typedef struct _text_define$/;"	s	file:
_text_get	x_text.c	/^typedef struct _text_get$/;"	s	file:
_text_search	x_text.c	/^typedef struct _text_search$/;"	s	file:
_text_sequence	x_text.c	/^typedef struct _text_sequence$/;"	s	file:
_text_set	x_text.c	/^typedef struct _text_set$/;"	s	file:
_text_size	x_text.c	/^typedef struct _text_size$/;"	s	file:
_textbuf	x_text.c	/^typedef struct _textbuf$/;"	s	file:
_threshold_tilde	d_ctl.c	/^typedef struct _threshold_tilde$/;"	s	file:
_tick	g_canvas.h	/^typedef struct _tick    \/* where to put ticks on x or y axes *\/$/;"	s
_timer	x_time.c	/^typedef struct _timer$/;"	s	file:
_times	d_arithmetic.c	/^typedef struct _times$/;"	s	file:
_toggle	g_all_guis.h	/^typedef struct _toggle$/;"	s
_touchin	x_midi.c	/^typedef struct _touchin$/;"	s	file:
_touchout	x_midi.c	/^typedef struct _touchout$/;"	s	file:
_trigger	x_connective.c	/^typedef struct _trigger$/;"	s	file:
_tscalar	g_canvas.h	/^EXTERN_STRUCT _tscalar;$/;"	v
_ugenbox	d_ugen.c	/^typedef struct _ugenbox$/;"	s	file:
_undo_connect	g_editor.c	/^typedef struct _undo_connect    $/;"	s	file:
_undo_cut	g_editor.c	/^typedef struct _undo_cut        $/;"	s	file:
_undo_move	g_editor.c	/^typedef struct _undo_move       $/;"	s	file:
_undo_move_elem	g_editor.c	/^typedef struct _undo_move_elem  $/;"	s	file:
_undo_paste	g_editor.c	/^typedef struct _undo_paste      $/;"	s	file:
_unpack	x_connective.c	/^typedef struct _unpack$/;"	s	file:
_until	x_connective.c	/^typedef struct _until$/;"	s	file:
_updateheader	g_canvas.h	/^typedef struct _updateheader$/;"	s
_value	x_connective.c	/^typedef struct _value$/;"	s	file:
_vdial	g_all_guis.h	/^typedef struct _vdial$/;"	s
_vinlet	d_ugen.c	/^EXTERN_STRUCT _vinlet;$/;"	v
_vinlet	g_io.c	/^typedef struct _vinlet$/;"	s	file:
_vline	d_ctl.c	/^typedef struct _vline$/;"	s	file:
_voutlet	d_ugen.c	/^EXTERN_STRUCT _voutlet;$/;"	v
_voutlet	g_io.c	/^typedef struct _voutlet$/;"	s	file:
_vseg	d_ctl.c	/^typedef struct _vseg$/;"	s	file:
_vslider	g_all_guis.h	/^typedef struct _vslider$/;"	s
_vsnapshot	d_ctl.c	/^typedef struct _vsnapshot$/;"	s	file:
_vu	g_all_guis.h	/^typedef struct _vu$/;"	s
_wave	d_soundfile.c	/^typedef struct _wave$/;"	s	file:
_wavechunk	d_soundfile.c	/^typedef struct _wavechunk           \/* ... and the last two items *\/$/;"	s	file:
_widgetbehavior	g_canvas.h	/^struct _widgetbehavior$/;"	s
_widgetbehavior	m_imp.h	/^EXTERN_STRUCT _widgetbehavior;$/;"	v
_widgetbehavior	m_pd.h	/^EXTERN_STRUCT _widgetbehavior;$/;"	v
a	d_fft_fftsg.c	/^    double *a;$/;"	m	struct:cdft_arg_st	file:
a	d_fftsg_h.c	/^    double *a;$/;"	m	struct:cdft_arg_st	file:
a_addr	s_audio_alsa.h	/^    char **a_addr;$/;"	m	struct:_alsa_dev
a_aiffid	d_soundfile.c	/^    char  a_aiffid[4];              \/* aiff chunk id 'AIFF'       *\/$/;"	m	struct:_aiff	file:
a_atom	g_text.c	/^    t_atom a_atom;          \/* this holds the value and the type *\/$/;"	m	struct:_gatom	file:
a_bitspersamp	d_soundfile.c	/^    uint16_t a_bitspersamp;         \/* bits per sample            *\/$/;"	m	struct:_aiff	file:
a_buf	g_text.c	/^    char a_buf[ATOMBUFSIZE];\/* string buffer for typing *\/$/;"	m	struct:_gatom	file:
a_channels	s_audio_alsa.h	/^    int a_channels;$/;"	m	struct:_alsa_dev
a_chunksize	d_soundfile.c	/^    uint32_t a_chunksize;           \/* chunk size                 *\/$/;"	m	struct:_aiff	file:
a_devno	s_audio_alsa.h	/^    int a_devno;$/;"	m	struct:_alsa_dev
a_draghi	g_text.c	/^    t_float a_draghi;       \/* high end of drag range *\/$/;"	m	struct:_gatom	file:
a_draglo	g_text.c	/^    t_float a_draglo;       \/* low end of drag range *\/$/;"	m	struct:_gatom	file:
a_elemsize	g_canvas.h	/^    int a_elemsize;     \/* size in bytes; LATER get this from template *\/$/;"	m	struct:_array
a_expanded_to	g_text.c	/^    t_symbol *a_expanded_to; \/* a_symto after $0, $1, ...  expansion *\/$/;"	m	struct:_gatom	file:
a_fileid	d_soundfile.c	/^    char  a_fileid[4];              \/* chunk id 'FORM'            *\/$/;"	m	struct:_aiff	file:
a_fmtchunksize	d_soundfile.c	/^    uint32_t a_fmtchunksize;        \/* format chunk size, 18      *\/$/;"	m	struct:_aiff	file:
a_fmtid	d_soundfile.c	/^    char  a_fmtid[4];               \/* format chunk id 'COMM'     *\/$/;"	m	struct:_aiff	file:
a_glist	g_text.c	/^    t_glist *a_glist;       \/* owning glist *\/$/;"	m	struct:_gatom	file:
a_gp	g_canvas.h	/^    t_gpointer a_gp;    \/* pointer to scalar or array element we're in *\/$/;"	m	struct:_array
a_handle	s_audio_alsa.h	/^    snd_pcm_t *a_handle;$/;"	m	struct:_alsa_dev
a_label	g_text.c	/^    t_symbol *a_label;      \/* symbol to show as label next to box *\/$/;"	m	struct:_gatom	file:
a_n	g_canvas.h	/^    int a_n;            \/* number of elements *\/$/;"	m	struct:_array
a_nchannels	d_soundfile.c	/^    uint16_t a_nchannels;           \/* number of channels         *\/$/;"	m	struct:_aiff	file:
a_nframeshi	d_soundfile.c	/^    uint16_t a_nframeshi;           \/* # of sample frames (hi)    *\/$/;"	m	struct:_aiff	file:
a_nframeslo	d_soundfile.c	/^    uint16_t a_nframeslo;           \/* # of sample frames (lo)    *\/$/;"	m	struct:_aiff	file:
a_samprate	d_soundfile.c	/^    unsigned char a_samprate[10];   \/* sample rate, 80-bit float! *\/$/;"	m	struct:_aiff	file:
a_sampwidth	s_audio_alsa.h	/^    int a_sampwidth;$/;"	m	struct:_alsa_dev
a_shift	g_text.c	/^    char a_shift;           \/* was shift key down when dragging started? *\/$/;"	m	struct:_gatom	file:
a_stub	g_canvas.h	/^    t_gstub *a_stub;    \/* stub for pointing into this array *\/$/;"	m	struct:_array
a_symfrom	g_text.c	/^    t_symbol *a_symfrom;    \/* "receive" name -- bind ourselvs to this *\/$/;"	m	struct:_gatom	file:
a_symto	g_text.c	/^    t_symbol *a_symto;      \/* "send" name -- send to this on output *\/$/;"	m	struct:_gatom	file:
a_synced	s_audio_alsa.h	/^    int a_synced; $/;"	m	struct:_alsa_dev
a_templatesym	g_canvas.h	/^    t_symbol *a_templatesym;    \/* template for elements *\/$/;"	m	struct:_array
a_text	g_text.c	/^    t_text a_text;$/;"	m	struct:_gatom	file:
a_toggle	g_text.c	/^    t_float a_toggle;       \/* value to toggle to *\/$/;"	m	struct:_gatom	file:
a_type	m_pd.h	/^    t_atomtype a_type;$/;"	m	struct:_atom
a_valid	g_canvas.h	/^    int a_valid;        \/* protection against stale pointers into array *\/$/;"	m	struct:_array
a_vec	g_canvas.h	/^    char *a_vec;        \/* array of elements *\/$/;"	m	struct:_array
a_w	m_pd.h	/^    union word a_w;$/;"	m	struct:_atom	typeref:union:_atom::word
a_wherelabel	g_text.c	/^    char a_wherelabel;      \/* 0-3 for left, right, above, below *\/$/;"	m	struct:_gatom	file:
abs_class	x_arithmetic.c	/^static t_class *abs_class;      \/* ----------- abs --------------- *\/$/;"	v	file:
abs_float	x_arithmetic.c	/^static void abs_float(t_object *x, t_float f)$/;"	f	file:
abs_new	x_arithmetic.c	/^static void *abs_new(void)$/;"	f	file:
abs_tilde_class	d_math.c	/^static t_class *abs_tilde_class;$/;"	v	file:
abs_tilde_dsp	d_math.c	/^static void abs_tilde_dsp(t_abs_tilde *x, t_signal **sp)$/;"	f	file:
abs_tilde_new	d_math.c	/^static void *abs_tilde_new(t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
abs_tilde_perform	d_math.c	/^t_int *abs_tilde_perform(t_int *w)$/;"	f
abs_tilde_setup	d_math.c	/^static void abs_tilde_setup(void)$/;"	f	file:
adc_class	d_dac.c	/^static t_class *adc_class;$/;"	v	file:
adc_dsp	d_dac.c	/^static void adc_dsp(t_adc *x, t_signal **sp)$/;"	f	file:
adc_free	d_dac.c	/^static void adc_free(t_adc *x)$/;"	f	file:
adc_new	d_dac.c	/^static void *adc_new(t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
adc_setup	d_dac.c	/^static void adc_setup(void)$/;"	f	file:
addfileextent	m_class.c	/^static t_symbol *addfileextent(t_symbol *s)$/;"	f	file:
addport	u_pdreceive.c	/^static void addport(int fd)$/;"	f	file:
alist_anything	x_list.c	/^static void alist_anything(t_alist *x, t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
alist_class	x_list.c	/^t_class *alist_class;$/;"	v
alist_clear	x_list.c	/^static void alist_clear(t_alist *x)$/;"	f	file:
alist_clone	x_list.c	/^static void alist_clone(t_alist *x, t_alist *y)$/;"	f	file:
alist_init	x_list.c	/^static void alist_init(t_alist *x)$/;"	f	file:
alist_list	x_list.c	/^static void alist_list(t_alist *x, t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
alist_setup	x_list.c	/^static void alist_setup(void)$/;"	f	file:
alist_toatoms	x_list.c	/^static void alist_toatoms(t_alist *x, t_atom *to)$/;"	f	file:
alsa_adddev	s_audio_alsa.c	/^void alsa_adddev(char *name)$/;"	f
alsa_buf_samps	s_audio_alsa.c	/^static int alsa_buf_samps;$/;"	v	file:
alsa_checkiosync	s_audio_alsa.c	/^static void alsa_checkiosync( void)$/;"	f	file:
alsa_close_audio	s_audio_alsa.c	/^void alsa_close_audio(void)$/;"	f
alsa_getdevs	s_audio_alsa.c	/^void alsa_getdevs(char *indevlist, int *nindevs,$/;"	f
alsa_getzeros	s_audio_alsa.c	/^void alsa_getzeros(int iodev, int n)$/;"	f
alsa_indev	s_audio_alsa.c	/^t_alsa_dev alsa_indev[ALSA_MAXDEV];$/;"	v
alsa_initted	s_midi_alsa.c	/^static int alsa_nmidiindevs, alsa_nmidioutdevs, alsa_initted;$/;"	v	file:
alsa_jittermax	s_audio_alsa.c	/^static int alsa_jittermax;$/;"	v	file:
alsa_midiinfd	s_midi_alsa.c	/^static int alsa_midiinfd[MAXMIDIINDEV];$/;"	v	file:
alsa_midioutfd	s_midi_alsa.c	/^static int alsa_midioutfd[MAXMIDIOUTDEV];$/;"	v	file:
alsa_names	s_audio_alsa.c	/^static char **alsa_names = 0;$/;"	v	file:
alsa_nindev	s_audio_alsa.c	/^int alsa_nindev;$/;"	v
alsa_nmidiin	s_midi_alsa.c	/^static int alsa_nmidiin;$/;"	v	file:
alsa_nmidiindevs	s_midi_alsa.c	/^static int alsa_nmidiindevs, alsa_nmidioutdevs, alsa_initted;$/;"	v	file:
alsa_nmidiout	s_midi_alsa.c	/^static int alsa_nmidiout;$/;"	v	file:
alsa_nmidioutdevs	s_midi_alsa.c	/^static int alsa_nmidiindevs, alsa_nmidioutdevs, alsa_initted;$/;"	v	file:
alsa_nnames	s_audio_alsa.c	/^static int alsa_nnames = 0;$/;"	v	file:
alsa_noutdev	s_audio_alsa.c	/^int alsa_noutdev;$/;"	v
alsa_numbertoname	s_audio_alsa.c	/^static void alsa_numbertoname(int devno, char *devname, int nchar)$/;"	f	file:
alsa_open_audio	s_audio_alsa.c	/^int alsa_open_audio(int naudioindev, int *audioindev, int nchindev,$/;"	f
alsa_outdev	s_audio_alsa.c	/^t_alsa_dev alsa_outdev[ALSA_MAXDEV];$/;"	v
alsa_printstate	s_audio_alsa.c	/^void alsa_printstate( void)$/;"	f
alsa_putzeros	s_audio_alsa.c	/^void alsa_putzeros(int iodev, int n)$/;"	f
alsa_send_dacs	s_audio_alsa.c	/^int alsa_send_dacs(void)$/;"	f
alsa_snd_buf	s_audio_alsa.c	/^static char *alsa_snd_buf;$/;"	v	file:
alsa_snd_bufsize	s_audio_alsa.c	/^static int alsa_snd_bufsize;$/;"	v	file:
alsa_status	s_audio_alsa.c	/^static snd_pcm_status_t *alsa_status;$/;"	v	file:
alsa_stdout	s_audio_alsamm.c	/^snd_output_t* alsa_stdout; $/;"	v
alsa_usemmap	s_audio_alsa.c	/^static int alsa_usemmap;$/;"	v	file:
alsaio_canmmap	s_audio_alsa.c	/^static int alsaio_canmmap(t_alsa_dev *dev)$/;"	f	file:
alsaio_setup	s_audio_alsa.c	/^static int alsaio_setup(t_alsa_dev *dev, int out, int *channels, int *rate,$/;"	f	file:
alsamm_buffer_size	s_audio_alsamm.c	/^static snd_pcm_sframes_t alsamm_buffer_size;$/;"	v	file:
alsamm_buffersize	s_audio_alsamm.c	/^static unsigned int alsamm_buffersize = 0;$/;"	v	file:
alsamm_buffertime	s_audio_alsamm.c	/^static unsigned int alsamm_buffertime = 0;$/;"	v	file:
alsamm_close_audio	s_audio_alsamm.c	/^void alsamm_close_audio(void)$/;"	f
alsamm_get_channels	s_audio_alsamm.c	/^static int alsamm_get_channels(snd_pcm_t *dev, $/;"	f	file:
alsamm_incards	s_audio_alsamm.c	/^static int alsamm_incards = 0;$/;"	v	file:
alsamm_inchannels	s_audio_alsamm.c	/^static int alsamm_inchannels = 0;$/;"	v	file:
alsamm_indevice	s_audio_alsamm.c	/^static t_alsa_dev *alsamm_indevice[ALSA_MAXDEV];$/;"	v	file:
alsamm_open_audio	s_audio_alsamm.c	/^int alsamm_open_audio(int rate, int blocksize)$/;"	f
alsamm_outcards	s_audio_alsamm.c	/^static int alsamm_outcards = 0;$/;"	v	file:
alsamm_outchannels	s_audio_alsamm.c	/^static int alsamm_outchannels = 0;$/;"	v	file:
alsamm_outdevice	s_audio_alsamm.c	/^static t_alsa_dev *alsamm_outdevice[ALSA_MAXDEV];$/;"	v	file:
alsamm_period_size	s_audio_alsamm.c	/^static snd_pcm_sframes_t alsamm_period_size; $/;"	v	file:
alsamm_periods	s_audio_alsamm.c	/^static unsigned int alsamm_periods;$/;"	v	file:
alsamm_send_dacs	s_audio_alsamm.c	/^int alsamm_send_dacs(void)$/;"	f
alsamm_showstat	s_audio_alsamm.c	/^void alsamm_showstat(snd_pcm_t *handle)$/;"	f
alsamm_sr	s_audio_alsamm.c	/^static unsigned int alsamm_sr = 0; $/;"	v	file:
alsamm_start	s_audio_alsamm.c	/^static int alsamm_start()$/;"	f	file:
alsamm_stop	s_audio_alsamm.c	/^static int alsamm_stop()$/;"	f	file:
alsamm_transfersize	s_audio_alsamm.c	/^static int alsamm_transfersize = DEFDACBLKSIZE;$/;"	v	file:
alsamm_xruns	s_audio_alsamm.c	/^ static int alsamm_xruns = 0;$/;"	v	file:
append_class	g_traversal.c	/^static t_class *append_class;$/;"	v	file:
append_float	g_traversal.c	/^static void append_float(t_append *x, t_float f)$/;"	f	file:
append_free	g_traversal.c	/^static void append_free(t_append *x)$/;"	f	file:
append_new	g_traversal.c	/^static void *append_new(t_symbol *why, int argc, t_atom *argv)$/;"	f	file:
append_setup	g_traversal.c	/^static void append_setup(void)$/;"	f	file:
array_client_free	x_array.c	/^static void array_client_free(t_array_client *x)$/;"	f	file:
array_client_getbuf	x_array.c	/^static t_array *array_client_getbuf(t_array_client *x, t_glist **glist)$/;"	f	file:
array_client_senditup	x_array.c	/^static void array_client_senditup(t_array_client *x)$/;"	f	file:
array_define_anything	x_array.c	/^static void array_define_anything(t_glist *x,$/;"	f	file:
array_define_class	x_array.c	/^t_class *array_define_class;$/;"	v
array_define_ignore	x_array.c	/^static void array_define_ignore(t_glist *x,$/;"	f	file:
array_define_new	x_array.c	/^static void *array_define_new(t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
array_define_save	x_array.c	/^void array_define_save(t_gobj *z, t_binbuf *bb)$/;"	f
array_define_send	x_array.c	/^static void array_define_send(t_glist *x, t_symbol *s)$/;"	f	file:
array_define_yrange	x_array.c	/^static void array_define_yrange(t_glist *x, t_floatarg ylo, t_floatarg yhi)$/;"	f	file:
array_doclick	g_template.c	/^static int array_doclick(t_array *array, t_glist *glist, t_scalar *sc,$/;"	f	file:
array_doclick_element	g_template.c	/^static int array_doclick_element(t_array *array, t_glist *glist,$/;"	f	file:
array_free	g_array.c	/^void array_free(t_array *x)$/;"	f
array_get_bang	x_array.c	/^static void array_get_bang(t_array_rangeop *x)$/;"	f	file:
array_get_class	x_array.c	/^static t_class *array_get_class;$/;"	v	file:
array_get_float	x_array.c	/^static void array_get_float(t_array_rangeop *x, t_floatarg f)$/;"	f	file:
array_get_new	x_array.c	/^static void *array_get_new(t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
array_getcoordinate	g_array.c	/^void array_getcoordinate(t_glist *glist,$/;"	f
array_getfields	g_template.c	/^int array_getfields(t_symbol *elemtemplatesym,$/;"	f
array_getrect	g_array.c	/^static void array_getrect(t_array *array, t_glist *glist,$/;"	f	file:
array_max_bang	x_array.c	/^static void array_max_bang(t_array_max *x)$/;"	f	file:
array_max_class	x_array.c	/^static t_class *array_max_class;$/;"	v	file:
array_max_float	x_array.c	/^static void array_max_float(t_array_max *x, t_floatarg f)$/;"	f	file:
array_max_new	x_array.c	/^static void *array_max_new(t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
array_min_bang	x_array.c	/^static void array_min_bang(t_array_min *x)$/;"	f	file:
array_min_class	x_array.c	/^static t_class *array_min_class;$/;"	v	file:
array_min_float	x_array.c	/^static void array_min_float(t_array_min *x, t_floatarg f)$/;"	f	file:
array_min_new	x_array.c	/^static void *array_min_new(t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
array_motion	g_template.c	/^static void array_motion(void *z, t_floatarg dx, t_floatarg dy)$/;"	f	file:
array_motion_altkey	g_template.c	/^static int array_motion_altkey;$/;"	v	file:
array_motion_array	g_template.c	/^static t_array *array_motion_array;$/;"	v	file:
array_motion_elemsize	g_template.c	/^static int array_motion_elemsize;$/;"	v	file:
array_motion_fatten	g_template.c	/^static int array_motion_fatten;$/;"	v	file:
array_motion_glist	g_template.c	/^static t_glist *array_motion_glist;$/;"	v	file:
array_motion_initx	g_template.c	/^static t_float array_motion_initx;$/;"	v	file:
array_motion_lastx	g_template.c	/^static int array_motion_lastx;$/;"	v	file:
array_motion_npoints	g_template.c	/^static int array_motion_npoints;$/;"	v	file:
array_motion_scalar	g_template.c	/^static t_scalar *array_motion_scalar;$/;"	v	file:
array_motion_template	g_template.c	/^static t_template *array_motion_template;$/;"	v	file:
array_motion_wp	g_template.c	/^static t_word *array_motion_wp;$/;"	v	file:
array_motion_xcumulative	g_template.c	/^static t_float array_motion_xcumulative;$/;"	v	file:
array_motion_xfield	g_template.c	/^static t_fielddesc *array_motion_xfield;$/;"	v	file:
array_motion_xperpix	g_template.c	/^static t_float array_motion_xperpix;$/;"	v	file:
array_motion_ycumulative	g_template.c	/^static t_float array_motion_ycumulative;$/;"	v	file:
array_motion_yfield	g_template.c	/^static t_fielddesc *array_motion_yfield;$/;"	v	file:
array_motion_yperpix	g_template.c	/^static t_float array_motion_yperpix;$/;"	v	file:
array_new	g_array.c	/^t_array *array_new(t_symbol *templatesym, t_gpointer *parent)$/;"	f
array_quantile_class	x_array.c	/^static t_class *array_quantile_class;$/;"	v	file:
array_quantile_float	x_array.c	/^static void array_quantile_float(t_array_rangeop *x, t_floatarg f)$/;"	f	file:
array_quantile_new	x_array.c	/^static void *array_quantile_new(t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
array_random_bang	x_array.c	/^static void array_random_bang(t_array_random *x)$/;"	f	file:
array_random_class	x_array.c	/^static t_class *array_random_class;$/;"	v	file:
array_random_float	x_array.c	/^static void array_random_float(t_array_random *x, t_floatarg f)$/;"	f	file:
array_random_new	x_array.c	/^static void *array_random_new(t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
array_random_seed	x_array.c	/^static void array_random_seed(t_array_random *x, t_floatarg f)$/;"	f	file:
array_rangeop_getrange	x_array.c	/^static int array_rangeop_getrange(t_array_rangeop *x,$/;"	f	file:
array_rangeop_new	x_array.c	/^static void *array_rangeop_new(t_class *class,$/;"	f	file:
array_redraw	g_array.c	/^void array_redraw(t_array *a, t_glist *glist)$/;"	f
array_resize	g_array.c	/^void array_resize(t_array *x, int n)$/;"	f
array_resize_and_redraw	g_array.c	/^void array_resize_and_redraw(t_array *array, t_glist *glist, int n)$/;"	f
array_set_class	x_array.c	/^static t_class *array_set_class;$/;"	v	file:
array_set_list	x_array.c	/^static void array_set_list(t_array_rangeop *x, t_symbol *s,$/;"	f	file:
array_set_new	x_array.c	/^static void *array_set_new(t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
array_size_bang	x_array.c	/^static void array_size_bang(t_array_size *x)$/;"	f	file:
array_size_class	x_array.c	/^static t_class *array_size_class;$/;"	v	file:
array_size_float	x_array.c	/^static void array_size_float(t_array_size *x, t_floatarg f)$/;"	f	file:
array_size_new	x_array.c	/^static void *array_size_new(t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
array_sum_bang	x_array.c	/^static void array_sum_bang(t_array_rangeop *x)$/;"	f	file:
array_sum_class	x_array.c	/^static t_class *array_sum_class;$/;"	v	file:
array_sum_float	x_array.c	/^static void array_sum_float(t_array_rangeop *x, t_floatarg f)$/;"	f	file:
array_sum_new	x_array.c	/^static void *array_sum_new(t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
arrayobj_new	x_array.c	/^static void *arrayobj_new(t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
atan2_class	x_arithmetic.c	/^static t_class *atan2_class;    \/* ----------- atan2 --------------- *\/$/;"	v	file:
atan2_float	x_arithmetic.c	/^static void atan2_float(t_atan2 *x, t_float f)$/;"	f	file:
atan2_new	x_arithmetic.c	/^static void *atan2_new(void)$/;"	f	file:
atan_class	x_arithmetic.c	/^static t_class *atan_class;     \/* ----------- atan --------------- *\/$/;"	v	file:
atan_float	x_arithmetic.c	/^static void atan_float(t_object *x, t_float f)$/;"	f	file:
atan_new	x_arithmetic.c	/^static void *atan_new(void)$/;"	f	file:
atom_gensym	m_atom.c	/^t_symbol *atom_gensym(t_atom *a)  \/* this works  better for graph labels *\/$/;"	f
atom_getfloat	m_atom.c	/^t_float atom_getfloat(t_atom *a)$/;"	f
atom_getfloatarg	m_atom.c	/^t_float atom_getfloatarg(int which, int argc, t_atom *argv)$/;"	f
atom_getint	m_atom.c	/^t_int atom_getint(t_atom *a)$/;"	f
atom_getintarg	m_atom.c	/^t_int atom_getintarg(int which, int argc, t_atom *argv)$/;"	f
atom_getsymbol	m_atom.c	/^t_symbol *atom_getsymbol(t_atom *a)  \/* LATER think about this more carefully *\/$/;"	f
atom_getsymbolarg	m_atom.c	/^t_symbol *atom_getsymbolarg(int which, int argc, t_atom *argv)$/;"	f
atom_string	m_atom.c	/^void atom_string(t_atom *a, char *buf, unsigned int bufsize)$/;"	f
atoms_copy	x_list.c	/^static void atoms_copy(int argc, t_atom *from, t_atom *to)$/;"	f	file:
atoms_match	g_editor.c	/^static int atoms_match(int inargc, t_atom *inargv, int searchargc,$/;"	f	file:
audio_advance	s_audio.c	/^static int audio_advance = -1;$/;"	v	file:
audio_audiochindev	s_audio.c	/^static int audio_audiochindev[MAXAUDIOINDEV];$/;"	v	file:
audio_audiochoutdev	s_audio.c	/^static int audio_audiochoutdev[MAXAUDIOOUTDEV];$/;"	v	file:
audio_audioindev	s_audio.c	/^static int audio_audioindev[MAXAUDIOINDEV];$/;"	v	file:
audio_audiooutdev	s_audio.c	/^static int audio_audiooutdev[MAXAUDIOOUTDEV];$/;"	v	file:
audio_blocksize	s_audio.c	/^static int audio_blocksize;$/;"	v	file:
audio_callback	s_audio.c	/^static int audio_callback;$/;"	v	file:
audio_callback_is_open	s_audio.c	/^static int audio_callback_is_open;  \/* reflects true actual state *\/$/;"	v	file:
audio_getdevs	s_audio.c	/^static void audio_getdevs(char *indevlist, int *nindevs,$/;"	f	file:
audio_init	s_audio.c	/^static void audio_init( void)$/;"	f	file:
audio_isopen	s_audio.c	/^int audio_isopen(void)$/;"	f
audio_naudioindev	s_audio.c	/^static int audio_naudioindev = -1;$/;"	v	file:
audio_naudiooutdev	s_audio.c	/^static int audio_naudiooutdev = -1;$/;"	v	file:
audio_nextinchans	s_audio.c	/^static int audio_nextinchans, audio_nextoutchans;$/;"	v	file:
audio_nextoutchans	s_audio.c	/^static int audio_nextinchans, audio_nextoutchans;$/;"	v	file:
audio_rate	s_audio.c	/^static int audio_rate;$/;"	v	file:
audio_shouldkeepopen	s_audio.c	/^int audio_shouldkeepopen( void)$/;"	f
audio_state	s_audio.c	/^static int audio_state;$/;"	v	file:
audiounit_close_audio	s_audio_audiounit.c	/^void audiounit_close_audio(void) $/;"	f
audiounit_getdevs	s_audio_audiounit.c	/^void audiounit_getdevs(char *indevlist, int *nindevs,$/;"	f
audiounit_listdevs	s_audio_audiounit.c	/^void audiounit_listdevs( void)$/;"	f
audiounit_mutex	s_audio_audiounit.c	/^pthread_mutex_t audiounit_mutex;$/;"	v
audiounit_open_audio	s_audio_audiounit.c	/^int audiounit_open_audio(int inchans, int outchans, int rate)$/;"	f
audiounit_sem	s_audio_audiounit.c	/^pthread_cond_t audiounit_sem;$/;"	v
audiounit_send_dacs	s_audio_audiounit.c	/^int audiounit_send_dacs(void)$/;"	f
av_garray	g_canvas.h	/^    t_garray *av_garray;            \/* owning structure *\/    $/;"	m	struct:_arrayvis
av_upd	g_canvas.h	/^    t_updateheader av_upd;          \/* update header structure *\/$/;"	m	struct:_arrayvis
bRecordingEnabled	s_midi_mmio.c	/^BOOL bRecordingEnabled = 1;             \/\/ Enable\/disable recording flag$/;"	v
b_binbuf	x_text.c	/^    t_binbuf *b_binbuf;$/;"	m	struct:_textbuf	file:
b_canvas	x_text.c	/^    t_canvas *b_canvas;$/;"	m	struct:_textbuf	file:
b_guiconnect	x_text.c	/^    t_guiconnect *b_guiconnect;$/;"	m	struct:_textbuf	file:
b_list	m_pd.c	/^    t_bindelem *b_list;$/;"	m	struct:_bindlist	file:
b_n	m_binbuf.c	/^    int b_n;$/;"	m	struct:_binbuf	file:
b_ob	x_text.c	/^    t_object b_ob;$/;"	m	struct:_textbuf	file:
b_pd	m_pd.c	/^    t_pd b_pd;$/;"	m	struct:_bindlist	file:
b_vec	m_binbuf.c	/^    t_atom *b_vec;$/;"	m	struct:_binbuf	file:
bag_class	x_midi.c	/^static t_class *bag_class;$/;"	v	file:
bag_clear	x_midi.c	/^static void bag_clear(t_bag *x)$/;"	f	file:
bag_float	x_midi.c	/^static void bag_float(t_bag *x, t_float f)$/;"	f	file:
bag_flush	x_midi.c	/^static void bag_flush(t_bag *x)$/;"	f	file:
bag_new	x_midi.c	/^static void *bag_new(void )$/;"	f	file:
bag_setup	x_midi.c	/^static void bag_setup(void)$/;"	f	file:
bang_bang	x_connective.c	/^static void bang_bang(t_bang *x)$/;"	f	file:
bang_class	x_connective.c	/^static t_class *bang_class;$/;"	v	file:
bang_new	x_connective.c	/^static void *bang_new(t_pd *dummy)$/;"	f	file:
bang_new2	x_connective.c	/^static void *bang_new2(t_bang f)$/;"	f	file:
bang_setup	x_connective.c	/^void bang_setup(void)$/;"	f
bang_tilde_class	d_misc.c	/^static t_class *bang_tilde_class;$/;"	v	file:
bang_tilde_dsp	d_misc.c	/^static void bang_tilde_dsp(t_bang *x, t_signal **sp)$/;"	f	file:
bang_tilde_free	d_misc.c	/^static void bang_tilde_free(t_bang *x)$/;"	f	file:
bang_tilde_new	d_misc.c	/^static void *bang_tilde_new(t_symbol *s)$/;"	f	file:
bang_tilde_perform	d_misc.c	/^static t_int *bang_tilde_perform(t_int *w)$/;"	f	file:
bang_tilde_setup	d_misc.c	/^static void bang_tilde_setup(void)$/;"	f	file:
bang_tilde_tick	d_misc.c	/^static void bang_tilde_tick(t_bang *x)$/;"	f	file:
bendin_class	x_midi.c	/^static t_class *bendin_class;$/;"	v	file:
bendin_free	x_midi.c	/^static void bendin_free(t_bendin *x)$/;"	f	file:
bendin_list	x_midi.c	/^static void bendin_list(t_bendin *x, t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
bendin_new	x_midi.c	/^static void *bendin_new(t_floatarg f)$/;"	f	file:
bendin_setup	x_midi.c	/^static void bendin_setup(void)$/;"	f	file:
bendout_class	x_midi.c	/^static t_class *bendout_class;$/;"	v	file:
bendout_float	x_midi.c	/^static void bendout_float(t_bendout *x, t_float f)$/;"	f	file:
bendout_new	x_midi.c	/^static void *bendout_new(t_floatarg channel)$/;"	f	file:
bendout_setup	x_midi.c	/^static void bendout_setup(void)$/;"	f	file:
binbuf_add	m_binbuf.c	/^void binbuf_add(t_binbuf *x, int argc, t_atom *argv)$/;"	f
binbuf_addbinbuf	m_binbuf.c	/^void binbuf_addbinbuf(t_binbuf *x, t_binbuf *y)$/;"	f
binbuf_addsemi	m_binbuf.c	/^void binbuf_addsemi(t_binbuf *x)$/;"	f
binbuf_addv	m_binbuf.c	/^void binbuf_addv(t_binbuf *x, char *fmt, ...)$/;"	f
binbuf_clear	m_binbuf.c	/^void binbuf_clear(t_binbuf *x)$/;"	f
binbuf_convert	m_binbuf.c	/^static t_binbuf *binbuf_convert(t_binbuf *oldb, int maxtopd)$/;"	f	file:
binbuf_duplicate	m_binbuf.c	/^t_binbuf *binbuf_duplicate(t_binbuf *y)$/;"	f
binbuf_eval	m_binbuf.c	/^void binbuf_eval(t_binbuf *x, t_pd *target, int argc, t_atom *argv)$/;"	f
binbuf_evalfile	m_binbuf.c	/^void binbuf_evalfile(t_symbol *name, t_symbol *dir)$/;"	f
binbuf_expanddollsym	m_binbuf.c	/^int binbuf_expanddollsym(char*s, char*buf,t_atom dollar0, int ac, t_atom *av, int tonew)$/;"	f
binbuf_free	m_binbuf.c	/^void binbuf_free(t_binbuf *x)$/;"	f
binbuf_getnatom	m_binbuf.c	/^int binbuf_getnatom(t_binbuf *x)$/;"	f
binbuf_gettext	m_binbuf.c	/^void binbuf_gettext(t_binbuf *x, char **bufp, int *lengthp)$/;"	f
binbuf_getvec	m_binbuf.c	/^t_atom *binbuf_getvec(t_binbuf *x)$/;"	f
binbuf_new	m_binbuf.c	/^t_binbuf *binbuf_new(void)$/;"	f
binbuf_print	m_binbuf.c	/^void binbuf_print(t_binbuf *x)$/;"	f
binbuf_read	m_binbuf.c	/^int binbuf_read(t_binbuf *b, char *filename, char *dirname, int crflag)$/;"	f
binbuf_read_via_canvas	m_binbuf.c	/^int binbuf_read_via_canvas(t_binbuf *b, char *filename, t_canvas *canvas,$/;"	f
binbuf_read_via_path	m_binbuf.c	/^int binbuf_read_via_path(t_binbuf *b, char *filename, char *dirname,$/;"	f
binbuf_realizedollsym	m_binbuf.c	/^t_symbol *binbuf_realizedollsym(t_symbol *s, int ac, t_atom *av, int tonew)$/;"	f
binbuf_resize	m_binbuf.c	/^int binbuf_resize(t_binbuf *x, int newsize)$/;"	f
binbuf_restore	m_binbuf.c	/^void binbuf_restore(t_binbuf *x, int argc, t_atom *argv)$/;"	f
binbuf_savetext	m_binbuf.c	/^void binbuf_savetext(t_binbuf *bfrom, t_binbuf *bto)$/;"	f
binbuf_text	m_binbuf.c	/^void binbuf_text(t_binbuf *x, char *text, size_t size)$/;"	f
binbuf_write	m_binbuf.c	/^int binbuf_write(t_binbuf *x, char *filename, char *dir, int crflag)$/;"	f
bindlist_anything	m_pd.c	/^static void bindlist_anything(t_bindlist *x, t_symbol *s,$/;"	f	file:
bindlist_bang	m_pd.c	/^static void bindlist_bang(t_bindlist *x)$/;"	f	file:
bindlist_class	m_pd.c	/^static t_class *bindlist_class;$/;"	v	file:
bindlist_float	m_pd.c	/^static void bindlist_float(t_bindlist *x, t_float f)$/;"	f	file:
bindlist_list	m_pd.c	/^static void bindlist_list(t_bindlist *x, t_symbol *s,$/;"	f	file:
bindlist_pointer	m_pd.c	/^static void bindlist_pointer(t_bindlist *x, t_gpointer *gp)$/;"	f	file:
bindlist_symbol	m_pd.c	/^static void bindlist_symbol(t_bindlist *x, t_symbol *s)$/;"	f	file:
binop1_div_bang	x_arithmetic.c	/^static void binop1_div_bang(t_binop *x)$/;"	f	file:
binop1_div_class	x_arithmetic.c	/^static t_class *binop1_div_class;$/;"	v	file:
binop1_div_float	x_arithmetic.c	/^static void binop1_div_float(t_binop *x, t_float f)$/;"	f	file:
binop1_div_new	x_arithmetic.c	/^static void *binop1_div_new(t_floatarg f)$/;"	f	file:
binop1_max_bang	x_arithmetic.c	/^static void binop1_max_bang(t_binop *x)$/;"	f	file:
binop1_max_class	x_arithmetic.c	/^static t_class *binop1_max_class;$/;"	v	file:
binop1_max_float	x_arithmetic.c	/^static void binop1_max_float(t_binop *x, t_float f)$/;"	f	file:
binop1_max_new	x_arithmetic.c	/^static void *binop1_max_new(t_floatarg f)$/;"	f	file:
binop1_min_bang	x_arithmetic.c	/^static void binop1_min_bang(t_binop *x)$/;"	f	file:
binop1_min_class	x_arithmetic.c	/^static t_class *binop1_min_class;$/;"	v	file:
binop1_min_float	x_arithmetic.c	/^static void binop1_min_float(t_binop *x, t_float f)$/;"	f	file:
binop1_min_new	x_arithmetic.c	/^static void *binop1_min_new(t_floatarg f)$/;"	f	file:
binop1_minus_bang	x_arithmetic.c	/^static void binop1_minus_bang(t_binop *x)$/;"	f	file:
binop1_minus_class	x_arithmetic.c	/^static t_class *binop1_minus_class;$/;"	v	file:
binop1_minus_float	x_arithmetic.c	/^static void binop1_minus_float(t_binop *x, t_float f)$/;"	f	file:
binop1_minus_new	x_arithmetic.c	/^static void *binop1_minus_new(t_floatarg f)$/;"	f	file:
binop1_new	x_arithmetic.c	/^static void *binop1_new(t_class *floatclass, t_floatarg f)$/;"	f	file:
binop1_plus_bang	x_arithmetic.c	/^static void binop1_plus_bang(t_binop *x)$/;"	f	file:
binop1_plus_class	x_arithmetic.c	/^static t_class *binop1_plus_class;$/;"	v	file:
binop1_plus_float	x_arithmetic.c	/^static void binop1_plus_float(t_binop *x, t_float f)$/;"	f	file:
binop1_plus_new	x_arithmetic.c	/^static void *binop1_plus_new(t_floatarg f)$/;"	f	file:
binop1_pow_bang	x_arithmetic.c	/^static void binop1_pow_bang(t_binop *x)$/;"	f	file:
binop1_pow_class	x_arithmetic.c	/^static t_class *binop1_pow_class;$/;"	v	file:
binop1_pow_float	x_arithmetic.c	/^static void binop1_pow_float(t_binop *x, t_float f)$/;"	f	file:
binop1_pow_new	x_arithmetic.c	/^static void *binop1_pow_new(t_floatarg f)$/;"	f	file:
binop1_times_bang	x_arithmetic.c	/^static void binop1_times_bang(t_binop *x)$/;"	f	file:
binop1_times_class	x_arithmetic.c	/^static t_class *binop1_times_class;$/;"	v	file:
binop1_times_float	x_arithmetic.c	/^static void binop1_times_float(t_binop *x, t_float f)$/;"	f	file:
binop1_times_new	x_arithmetic.c	/^static void *binop1_times_new(t_floatarg f)$/;"	f	file:
binop2_ba_bang	x_arithmetic.c	/^static void binop2_ba_bang(t_binop *x)$/;"	f	file:
binop2_ba_float	x_arithmetic.c	/^static void binop2_ba_float(t_binop *x, t_float f)$/;"	f	file:
binop2_bo_bang	x_arithmetic.c	/^static void binop2_bo_bang(t_binop *x)$/;"	f	file:
binop2_bo_float	x_arithmetic.c	/^static void binop2_bo_float(t_binop *x, t_float f)$/;"	f	file:
binop2_ee_bang	x_arithmetic.c	/^static void binop2_ee_bang(t_binop *x)$/;"	f	file:
binop2_ee_class	x_arithmetic.c	/^static t_class *binop2_ee_class;$/;"	v	file:
binop2_ee_float	x_arithmetic.c	/^static void binop2_ee_float(t_binop *x, t_float f)$/;"	f	file:
binop2_ee_new	x_arithmetic.c	/^static void *binop2_ee_new(t_floatarg f)$/;"	f	file:
binop2_ge_bang	x_arithmetic.c	/^static void binop2_ge_bang(t_binop *x)$/;"	f	file:
binop2_ge_class	x_arithmetic.c	/^static t_class *binop2_ge_class;$/;"	v	file:
binop2_ge_float	x_arithmetic.c	/^static void binop2_ge_float(t_binop *x, t_float f)$/;"	f	file:
binop2_ge_new	x_arithmetic.c	/^static void *binop2_ge_new(t_floatarg f)$/;"	f	file:
binop2_gt_bang	x_arithmetic.c	/^static void binop2_gt_bang(t_binop *x)$/;"	f	file:
binop2_gt_class	x_arithmetic.c	/^static t_class *binop2_gt_class;$/;"	v	file:
binop2_gt_float	x_arithmetic.c	/^static void binop2_gt_float(t_binop *x, t_float f)$/;"	f	file:
binop2_gt_new	x_arithmetic.c	/^static void *binop2_gt_new(t_floatarg f)$/;"	f	file:
binop2_la_bang	x_arithmetic.c	/^static void binop2_la_bang(t_binop *x)$/;"	f	file:
binop2_la_float	x_arithmetic.c	/^static void binop2_la_float(t_binop *x, t_float f)$/;"	f	file:
binop2_le_bang	x_arithmetic.c	/^static void binop2_le_bang(t_binop *x)$/;"	f	file:
binop2_le_class	x_arithmetic.c	/^static t_class *binop2_le_class;$/;"	v	file:
binop2_le_float	x_arithmetic.c	/^static void binop2_le_float(t_binop *x, t_float f)$/;"	f	file:
binop2_le_new	x_arithmetic.c	/^static void *binop2_le_new(t_floatarg f)$/;"	f	file:
binop2_lo_bang	x_arithmetic.c	/^static void binop2_lo_bang(t_binop *x)$/;"	f	file:
binop2_lo_float	x_arithmetic.c	/^static void binop2_lo_float(t_binop *x, t_float f)$/;"	f	file:
binop2_ls_bang	x_arithmetic.c	/^static void binop2_ls_bang(t_binop *x)$/;"	f	file:
binop2_ls_float	x_arithmetic.c	/^static void binop2_ls_float(t_binop *x, t_float f)$/;"	f	file:
binop2_lt_bang	x_arithmetic.c	/^static void binop2_lt_bang(t_binop *x)$/;"	f	file:
binop2_lt_class	x_arithmetic.c	/^static t_class *binop2_lt_class;$/;"	v	file:
binop2_lt_float	x_arithmetic.c	/^static void binop2_lt_float(t_binop *x, t_float f)$/;"	f	file:
binop2_lt_new	x_arithmetic.c	/^static void *binop2_lt_new(t_floatarg f)$/;"	f	file:
binop2_ne_bang	x_arithmetic.c	/^static void binop2_ne_bang(t_binop *x)$/;"	f	file:
binop2_ne_class	x_arithmetic.c	/^static t_class *binop2_ne_class;$/;"	v	file:
binop2_ne_float	x_arithmetic.c	/^static void binop2_ne_float(t_binop *x, t_float f)$/;"	f	file:
binop2_ne_new	x_arithmetic.c	/^static void *binop2_ne_new(t_floatarg f)$/;"	f	file:
binop2_new	x_arithmetic.c	/^static void *binop2_new(t_class *floatclass, t_floatarg f)$/;"	f	file:
binop2_pc_bang	x_arithmetic.c	/^static void binop2_pc_bang(t_binop *x)$/;"	f	file:
binop2_pc_float	x_arithmetic.c	/^static void binop2_pc_float(t_binop *x, t_float f)$/;"	f	file:
binop2_rs_bang	x_arithmetic.c	/^static void binop2_rs_bang(t_binop *x)$/;"	f	file:
binop2_rs_float	x_arithmetic.c	/^static void binop2_rs_float(t_binop *x, t_float f)$/;"	f	file:
binop3_ba_class	x_arithmetic.c	/^static t_class *binop3_ba_class;$/;"	v	file:
binop3_ba_new	x_arithmetic.c	/^static void *binop3_ba_new(t_floatarg f)$/;"	f	file:
binop3_bo_class	x_arithmetic.c	/^static t_class *binop3_bo_class;$/;"	v	file:
binop3_bo_new	x_arithmetic.c	/^static void *binop3_bo_new(t_floatarg f)$/;"	f	file:
binop3_div_bang	x_arithmetic.c	/^static void binop3_div_bang(t_binop *x)$/;"	f	file:
binop3_div_class	x_arithmetic.c	/^static t_class *binop3_div_class;$/;"	v	file:
binop3_div_float	x_arithmetic.c	/^static void binop3_div_float(t_binop *x, t_float f)$/;"	f	file:
binop3_div_new	x_arithmetic.c	/^static void *binop3_div_new(t_floatarg f)$/;"	f	file:
binop3_la_class	x_arithmetic.c	/^static t_class *binop3_la_class;$/;"	v	file:
binop3_la_new	x_arithmetic.c	/^static void *binop3_la_new(t_floatarg f)$/;"	f	file:
binop3_lo_class	x_arithmetic.c	/^static t_class *binop3_lo_class;$/;"	v	file:
binop3_lo_new	x_arithmetic.c	/^static void *binop3_lo_new(t_floatarg f)$/;"	f	file:
binop3_ls_class	x_arithmetic.c	/^static t_class *binop3_ls_class;$/;"	v	file:
binop3_ls_new	x_arithmetic.c	/^static void *binop3_ls_new(t_floatarg f)$/;"	f	file:
binop3_mod_bang	x_arithmetic.c	/^static void binop3_mod_bang(t_binop *x)$/;"	f	file:
binop3_mod_class	x_arithmetic.c	/^static t_class *binop3_mod_class;$/;"	v	file:
binop3_mod_float	x_arithmetic.c	/^static void binop3_mod_float(t_binop *x, t_float f)$/;"	f	file:
binop3_mod_new	x_arithmetic.c	/^static void *binop3_mod_new(t_floatarg f)$/;"	f	file:
binop3_new	x_arithmetic.c	/^static void *binop3_new(t_class *fixclass, t_floatarg f)$/;"	f	file:
binop3_pc_class	x_arithmetic.c	/^static t_class *binop3_pc_class;$/;"	v	file:
binop3_pc_new	x_arithmetic.c	/^static void *binop3_pc_new(t_floatarg f)$/;"	f	file:
binop3_rs_class	x_arithmetic.c	/^static t_class *binop3_rs_class;$/;"	v	file:
binop3_rs_new	x_arithmetic.c	/^static void *binop3_rs_new(t_floatarg f)$/;"	f	file:
biquadctl	d_filter.c	/^typedef struct biquadctl$/;"	s	file:
bitrv1	d_fftsg_h.c	/^void bitrv1(int n, double *a)$/;"	f
bitrv2	d_fft_fftsg.c	/^void bitrv2(int n, int *ip, double *a)$/;"	f
bitrv2	d_fftsg_h.c	/^void bitrv2(int n, double *a)$/;"	f
bitrv208	d_fft_fftsg.c	/^void bitrv208(double *a)$/;"	f
bitrv208	d_fftsg_h.c	/^void bitrv208(double *a)$/;"	f
bitrv208neg	d_fft_fftsg.c	/^void bitrv208neg(double *a)$/;"	f
bitrv208neg	d_fftsg_h.c	/^void bitrv208neg(double *a)$/;"	f
bitrv216	d_fft_fftsg.c	/^void bitrv216(double *a)$/;"	f
bitrv216	d_fftsg_h.c	/^void bitrv216(double *a)$/;"	f
bitrv216neg	d_fft_fftsg.c	/^void bitrv216neg(double *a)$/;"	f
bitrv216neg	d_fftsg_h.c	/^void bitrv216neg(double *a)$/;"	f
bitrv2conj	d_fft_fftsg.c	/^void bitrv2conj(int n, int *ip, double *a)$/;"	f
bitrv2conj	d_fftsg_h.c	/^void bitrv2conj(int n, double *a)$/;"	f
block_bang	d_ugen.c	/^static void block_bang(t_block *x)$/;"	f	file:
block_class	d_ugen.c	/^static t_class *block_class;$/;"	v	file:
block_dsp	d_ugen.c	/^static void block_dsp(t_block *x, t_signal **sp)$/;"	f	file:
block_epilog	d_ugen.c	/^static t_int *block_epilog(t_int *w)$/;"	f	file:
block_float	d_ugen.c	/^static void block_float(t_block *x, t_floatarg f)$/;"	f	file:
block_new	d_ugen.c	/^static void *block_new(t_floatarg fvecsize, t_floatarg foverlap,$/;"	f	file:
block_prolog	d_ugen.c	/^static t_int *block_prolog(t_int *w)$/;"	f	file:
block_set	d_ugen.c	/^static void block_set(t_block *x, t_floatarg fcalcsize, t_floatarg foverlap,$/;"	f	file:
block_tilde_setup	d_ugen.c	/^void block_tilde_setup(void)$/;"	f
bng_anything	g_bang.c	/^static void bng_anything(t_bng *x, t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
bng_bang	g_bang.c	/^static void bng_bang(t_bng *x)\/*wird nur mehr gesendet, wenn snd != rcv*\/$/;"	f	file:
bng_bang2	g_bang.c	/^static void bng_bang2(t_bng *x)\/*wird immer gesendet, wenn moeglich*\/$/;"	f	file:
bng_bout1	g_bang.c	/^static void bng_bout1(t_bng *x)\/*wird nur mehr gesendet, wenn snd != rcv*\/$/;"	f	file:
bng_bout2	g_bang.c	/^static void bng_bout2(t_bng *x)\/*wird immer gesendet, wenn moeglich*\/$/;"	f	file:
bng_check_minmax	g_bang.c	/^void bng_check_minmax(t_bng *x, int ftbreak, int fthold)$/;"	f
bng_class	g_bang.c	/^static t_class *bng_class;$/;"	v	file:
bng_click	g_bang.c	/^static void bng_click(t_bng *x, t_floatarg xpos, t_floatarg ypos, t_floatarg shift, t_floatarg ctrl, t_floatarg alt)$/;"	f	file:
bng_color	g_bang.c	/^static void bng_color(t_bng *x, t_symbol *s, int ac, t_atom *av)$/;"	f	file:
bng_delta	g_bang.c	/^static void bng_delta(t_bng *x, t_symbol *s, int ac, t_atom *av)$/;"	f	file:
bng_dialog	g_bang.c	/^static void bng_dialog(t_bng *x, t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
bng_draw	g_bang.c	/^void bng_draw(t_bng *x, t_glist *glist, int mode)$/;"	f
bng_draw_config	g_bang.c	/^void bng_draw_config(t_bng* x, t_glist* glist)$/;"	f
bng_draw_erase	g_bang.c	/^void bng_draw_erase(t_bng* x, t_glist* glist)$/;"	f
bng_draw_io	g_bang.c	/^void bng_draw_io(t_bng* x, t_glist* glist, int old_snd_rcv_flags)$/;"	f
bng_draw_move	g_bang.c	/^void bng_draw_move(t_bng *x, t_glist *glist)$/;"	f
bng_draw_new	g_bang.c	/^void bng_draw_new(t_bng *x, t_glist *glist)$/;"	f
bng_draw_select	g_bang.c	/^void bng_draw_select(t_bng* x, t_glist* glist)$/;"	f
bng_draw_update	g_bang.c	/^void bng_draw_update(t_bng *x, t_glist *glist)$/;"	f
bng_ff	g_bang.c	/^static void bng_ff(t_bng *x)$/;"	f	file:
bng_flashtime	g_bang.c	/^static void bng_flashtime(t_bng *x, t_symbol *s, int ac, t_atom *av)$/;"	f	file:
bng_float	g_bang.c	/^static void bng_float(t_bng *x, t_floatarg f)$/;"	f	file:
bng_getrect	g_bang.c	/^static void bng_getrect(t_gobj *z, t_glist *glist, int *xp1, int *yp1, int *xp2, int *yp2)$/;"	f	file:
bng_init	g_bang.c	/^static void bng_init(t_bng *x, t_floatarg f)$/;"	f	file:
bng_label	g_bang.c	/^static void bng_label(t_bng *x, t_symbol *s)$/;"	f	file:
bng_label_font	g_bang.c	/^static void bng_label_font(t_bng *x, t_symbol *s, int ac, t_atom *av)$/;"	f	file:
bng_label_pos	g_bang.c	/^static void bng_label_pos(t_bng *x, t_symbol *s, int ac, t_atom *av)$/;"	f	file:
bng_list	g_bang.c	/^static void bng_list(t_bng *x, t_symbol *s, int ac, t_atom *av)$/;"	f	file:
bng_loadbang	g_bang.c	/^static void bng_loadbang(t_bng *x)$/;"	f	file:
bng_new	g_bang.c	/^static void *bng_new(t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
bng_newclick	g_bang.c	/^static int bng_newclick(t_gobj *z, struct _glist *glist, int xpix, int ypix, int shift, int alt, int dbl, int doit)$/;"	f	file:
bng_pointer	g_bang.c	/^static void bng_pointer(t_bng *x, t_gpointer *gp)$/;"	f	file:
bng_pos	g_bang.c	/^static void bng_pos(t_bng *x, t_symbol *s, int ac, t_atom *av)$/;"	f	file:
bng_properties	g_bang.c	/^static void bng_properties(t_gobj *z, t_glist *owner)$/;"	f	file:
bng_receive	g_bang.c	/^static void bng_receive(t_bng *x, t_symbol *s)$/;"	f	file:
bng_save	g_bang.c	/^static void bng_save(t_gobj *z, t_binbuf *b)$/;"	f	file:
bng_send	g_bang.c	/^static void bng_send(t_bng *x, t_symbol *s)$/;"	f	file:
bng_set	g_bang.c	/^static void bng_set(t_bng *x)$/;"	f	file:
bng_size	g_bang.c	/^static void bng_size(t_bng *x, t_symbol *s, int ac, t_atom *av)$/;"	f	file:
bng_symbol	g_bang.c	/^static void bng_symbol(t_bng *x, t_symbol *s)$/;"	f	file:
bng_tick_brk	g_bang.c	/^static void bng_tick_brk(t_bng *x)$/;"	f	file:
bng_tick_hld	g_bang.c	/^static void bng_tick_hld(t_bng *x)$/;"	f	file:
bng_tick_lck	g_bang.c	/^static void bng_tick_lck(t_bng *x)$/;"	f	file:
bng_widgetbehavior	g_bang.c	/^t_widgetbehavior bng_widgetbehavior;$/;"	v
bpctl	d_filter.c	/^typedef struct bpctl$/;"	s	file:
bps	d_fftroutine.c	/^        int             bps;$/;"	m	struct:Tfft_net	file:
broken_opipe	s_audio_alsamm.c	/^ static  int broken_opipe;$/;"	v	file:
buf	s_audio_esd.c	/^static short buf[DEFDACBLKSIZE*MAXCHANS];$/;"	v	file:
buffer	m_pd.h	/^  t_sample *buffer;  \/* buffer for filtering *\/$/;"	m	struct:_resample
bufferSize	s_audio_paring.h	/^    long   bufferSize;              \/* Number of bytes in FIFO.$/;"	m	struct:__anon8
bufsize	m_pd.h	/^  int      bufsize;$/;"	m	struct:_resample
bug	s_print.c	/^void bug(const char *fmt, ...)$/;"	f
build_fft_network	d_fftroutine.c	/^void build_fft_network(FFT_NET *fft_net, int n, int window_type)$/;"	f
c_anymethod	m_imp.h	/^    t_anymethod c_anymethod;$/;"	m	struct:_class
c_bangmethod	m_imp.h	/^    t_bangmethod c_bangmethod;          \/* common methods *\/$/;"	m	struct:_class
c_bitspersamp	d_soundfile.c	/^    uint16_t c_bitspersamp;         \/* bits per sample            *\/$/;"	m	struct:_comm	file:
c_coef	d_filter.c	/^    t_sample c_coef;$/;"	m	struct:hipctl	file:
c_coef	d_filter.c	/^    t_sample c_coef;$/;"	m	struct:lopctl	file:
c_coef1	d_filter.c	/^    t_sample c_coef1;$/;"	m	struct:bpctl	file:
c_coef2	d_filter.c	/^    t_sample c_coef2;$/;"	m	struct:bpctl	file:
c_drawcommand	m_imp.h	/^    char c_drawcommand;             \/* a drawing command for a template *\/$/;"	m	struct:_class
c_externdir	m_imp.h	/^    t_symbol *c_externdir;              \/* directory extern was loaded from *\/$/;"	m	struct:_class
c_f	x_connective.c	/^    t_float c_f;$/;"	m	struct:vcommon	file:
c_fb1	d_filter.c	/^    t_sample c_fb1;$/;"	m	struct:biquadctl	file:
c_fb2	d_filter.c	/^    t_sample c_fb2;$/;"	m	struct:biquadctl	file:
c_ff1	d_filter.c	/^    t_sample c_ff1;$/;"	m	struct:biquadctl	file:
c_ff2	d_filter.c	/^    t_sample c_ff2;$/;"	m	struct:biquadctl	file:
c_ff3	d_filter.c	/^    t_sample c_ff3;$/;"	m	struct:biquadctl	file:
c_firstin	m_imp.h	/^    char c_firstin;                 \/* if patchable, true if draw first inlet *\/$/;"	m	struct:_class
c_floatmethod	m_imp.h	/^    t_floatmethod c_floatmethod;$/;"	m	struct:_class
c_floatsignalin	m_imp.h	/^    int c_floatsignalin;                \/* onset to float for signal input *\/$/;"	m	struct:_class
c_fn	m_sched.c	/^    t_clockmethod c_fn;$/;"	m	struct:_clock	file:
c_freemethod	m_imp.h	/^    t_method c_freemethod;              \/* function to call before freeing *\/$/;"	m	struct:_class
c_gain	d_filter.c	/^    t_sample c_gain;$/;"	m	struct:bpctl	file:
c_gobj	m_imp.h	/^    char c_gobj;                        \/* true if is a gobj *\/$/;"	m	struct:_class
c_helpname	m_imp.h	/^    t_symbol *c_helpname;               \/* name of help file *\/$/;"	m	struct:_class
c_im	d_osc.c	/^    float c_im;$/;"	m	struct:vcfctl	file:
c_isr	d_osc.c	/^    float c_isr;$/;"	m	struct:vcfctl	file:
c_listmethod	m_imp.h	/^    t_listmethod c_listmethod;$/;"	m	struct:_class
c_methods	m_imp.h	/^    t_methodentry *c_methods;           \/* methods other than bang, etc below *\/$/;"	m	struct:_class
c_n	d_delay.c	/^    int c_n;$/;"	m	struct:delwritectl	file:
c_name	m_imp.h	/^    t_symbol *c_name;                   \/* name (mostly for error reporting) *\/$/;"	m	struct:_class
c_nchannels	d_soundfile.c	/^    uint16_t c_nchannels;           \/* number of channels         *\/$/;"	m	struct:_comm	file:
c_next	m_sched.c	/^    struct _clock *c_next;$/;"	m	struct:_clock	typeref:struct:_clock::_clock	file:
c_nframeshi	d_soundfile.c	/^    uint16_t c_nframeshi;           \/* # of sample frames (hi)    *\/$/;"	m	struct:_comm	file:
c_nframeslo	d_soundfile.c	/^    uint16_t c_nframeslo;           \/* # of sample frames (lo)    *\/$/;"	m	struct:_comm	file:
c_nmethod	m_imp.h	/^    int c_nmethod;                      \/* number of methods *\/$/;"	m	struct:_class
c_owner	m_sched.c	/^    void *c_owner;$/;"	m	struct:_clock	file:
c_patchable	m_imp.h	/^    char c_patchable;                   \/* true if we have a t_object header *\/$/;"	m	struct:_class
c_pd	x_connective.c	/^    t_pd c_pd;$/;"	m	struct:vcommon	file:
c_phase	d_delay.c	/^    int c_phase;$/;"	m	struct:delwritectl	file:
c_pointermethod	m_imp.h	/^    t_pointermethod c_pointermethod;$/;"	m	struct:_class
c_propertiesfn	m_imp.h	/^    t_propertiesfn c_propertiesfn;      \/* function to start prop dialog *\/$/;"	m	struct:_class
c_pwb	m_imp.h	/^    struct _parentwidgetbehavior *c_pwb;\/* widget behavior in parent *\/$/;"	m	struct:_class	typeref:struct:_class::_parentwidgetbehavior
c_q	d_osc.c	/^    float c_q;$/;"	m	struct:vcfctl	file:
c_re	d_osc.c	/^    float c_re;$/;"	m	struct:vcfctl	file:
c_refcount	x_connective.c	/^    int c_refcount;$/;"	m	struct:vcommon	file:
c_samprate	d_soundfile.c	/^    unsigned char c_samprate[10];   \/* sample rate, 80-bit float! *\/$/;"	m	struct:_comm	file:
c_savefn	m_imp.h	/^    t_savefn c_savefn;                  \/* function to call when saving *\/$/;"	m	struct:_class
c_settime	m_sched.c	/^    double c_settime;       \/* in TIMEUNITS; <0 if unset *\/$/;"	m	struct:_clock	file:
c_size	m_imp.h	/^    size_t c_size;                      \/* size of an instance *\/$/;"	m	struct:_class
c_symbolmethod	m_imp.h	/^    t_symbolmethod c_symbolmethod;$/;"	m	struct:_class
c_unit	m_sched.c	/^    t_float c_unit;         \/* >0 if in TIMEUNITS; <0 if in samples *\/$/;"	m	struct:_clock	file:
c_vec	d_delay.c	/^    t_sample *c_vec;$/;"	m	struct:delwritectl	file:
c_wb	m_imp.h	/^    struct _widgetbehavior *c_wb;       \/* "gobjs" only *\/$/;"	m	struct:_class	typeref:struct:_class::_widgetbehavior
c_x	d_filter.c	/^    t_sample c_x;$/;"	m	struct:hipctl	file:
c_x	d_filter.c	/^    t_sample c_x;$/;"	m	struct:lopctl	file:
c_x1	d_filter.c	/^    t_sample c_x1;$/;"	m	struct:biquadctl	file:
c_x1	d_filter.c	/^    t_sample c_x1;$/;"	m	struct:bpctl	file:
c_x2	d_filter.c	/^    t_sample c_x2;$/;"	m	struct:biquadctl	file:
c_x2	d_filter.c	/^    t_sample c_x2;$/;"	m	struct:bpctl	file:
callbackInstance_tag	s_midi_mmio.c	/^typedef struct callbackInstance_tag$/;"	s	file:
callbackprocess	s_audio_jack.c	/^static int callbackprocess(jack_nframes_t nframes, void *arg)$/;"	f	file:
callno	s_audio_alsa.c	/^static int callno = 0;$/;"	v	file:
canvas_add_for_class	g_canvas.c	/^void canvas_add_for_class(t_class *c)$/;"	f
canvas_addinlet	g_graph.c	/^t_inlet *canvas_addinlet(t_canvas *x, t_pd *who, t_symbol *s)$/;"	f
canvas_addoutlet	g_graph.c	/^t_outlet *canvas_addoutlet(t_canvas *x, t_pd *who, t_symbol *s)$/;"	f
canvas_addtemplatesforlist	g_readwrite.c	/^static void canvas_addtemplatesforlist(t_gobj *y,$/;"	f	file:
canvas_addtemplatesforscalar	g_readwrite.c	/^static void canvas_addtemplatesforscalar(t_symbol *templatesym,$/;"	f	file:
canvas_addtolist	g_canvas.c	/^static void canvas_addtolist(t_canvas *x)$/;"	f	file:
canvas_atom	g_text.c	/^void canvas_atom(t_glist *gl, t_atomtype type,$/;"	f
canvas_bind	g_canvas.c	/^static void canvas_bind(t_canvas *x)$/;"	f	file:
canvas_bng	g_text.c	/^void canvas_bng(t_glist *gl, t_symbol *s, int argc, t_atom *argv)$/;"	f
canvas_class	g_canvas.c	/^t_class *canvas_class;$/;"	v
canvas_class	g_canvas.h	/^EXTERN t_class *canvas_class;$/;"	v
canvas_clearline	g_editor.c	/^static void canvas_clearline(t_canvas *x)$/;"	f	file:
canvas_click	g_canvas.c	/^static void canvas_click(t_canvas *x,$/;"	f	file:
canvas_collecttemplatesfor	g_readwrite.c	/^static void canvas_collecttemplatesfor(t_canvas *x, int *ntemplatesp,$/;"	f	file:
canvas_completepath	g_canvas.c	/^static void canvas_completepath(char *from, char *to, int bufsize)$/;"	f	file:
canvas_connect	g_editor.c	/^void canvas_connect(t_canvas *x, t_floatarg fwhoout, t_floatarg foutno,$/;"	f
canvas_coords	g_canvas.c	/^static void canvas_coords(t_glist *x, t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
canvas_copy	g_editor.c	/^static void canvas_copy(t_canvas *x)$/;"	f	file:
canvas_create_editor	g_editor.c	/^void canvas_create_editor(t_glist *x)$/;"	f
canvas_cut	g_editor.c	/^static void canvas_cut(t_canvas *x)$/;"	f	file:
canvas_dataproperties	g_readwrite.c	/^void canvas_dataproperties(t_canvas *x, t_scalar *sc, t_binbuf *b)$/;"	f
canvas_declare	g_canvas.c	/^static void canvas_declare(t_canvas *x, t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
canvas_deletelinesfor	g_canvas.c	/^void canvas_deletelinesfor(t_canvas *x, t_text *text)$/;"	f
canvas_deletelinesforio	g_canvas.c	/^void canvas_deletelinesforio(t_canvas *x, t_text *text,$/;"	f
canvas_destroy_editor	g_editor.c	/^void canvas_destroy_editor(t_glist *x)$/;"	f
canvas_dirty	g_canvas.c	/^void canvas_dirty(t_canvas *x, t_floatarg n)$/;"	f
canvas_disconnect	g_editor.c	/^void canvas_disconnect(t_canvas *x,$/;"	f
canvas_displaceselection	g_editor.c	/^static void canvas_displaceselection(t_canvas *x, int dx, int dy)$/;"	f	file:
canvas_doaddtemplate	g_readwrite.c	/^void canvas_doaddtemplate(t_symbol *templatesym, $/;"	f
canvas_doclear	g_editor.c	/^static void canvas_doclear(t_canvas *x)$/;"	f	file:
canvas_doclick	g_editor.c	/^void canvas_doclick(t_canvas *x, int xpos, int ypos, int which,$/;"	f
canvas_doconnect	g_editor.c	/^void canvas_doconnect(t_canvas *x, int xpos, int ypos, int which, int doit)$/;"	f
canvas_docopy	g_editor.c	/^static t_binbuf *canvas_docopy(t_canvas *x)$/;"	f	file:
canvas_dodsp	g_canvas.c	/^static void canvas_dodsp(t_canvas *x, int toplevel, t_signal **sp)$/;"	f	file:
canvas_dofind	g_editor.c	/^static int canvas_dofind(t_canvas *x, int *myindexp)$/;"	f	file:
canvas_dofont	g_editor.c	/^static void canvas_dofont(t_canvas *x, t_floatarg font, t_floatarg xresize,$/;"	f	file:
canvas_done_popup	g_editor.c	/^static void canvas_done_popup(t_canvas *x, t_float which, t_float xpos, t_float ypos)$/;"	f	file:
canvas_donecanvasdialog	g_editor.c	/^static void canvas_donecanvasdialog(t_glist *x,$/;"	f	file:
canvas_dopaste	g_editor.c	/^static void canvas_dopaste(t_canvas *x, t_binbuf *b)$/;"	f	file:
canvas_doregion	g_editor.c	/^static void canvas_doregion(t_canvas *x, int xpos, int ypos, int doit)$/;"	f	file:
canvas_dosetbounds	g_canvas.c	/^static void canvas_dosetbounds(t_canvas *x, int x1, int y1, int x2, int y2)$/;"	f	file:
canvas_drawlines	g_canvas.c	/^static void canvas_drawlines(t_canvas *x)$/;"	f	file:
canvas_drawredrect	g_canvas.c	/^void canvas_drawredrect(t_canvas *x, int doit)$/;"	f
canvas_dsp	g_canvas.c	/^static void canvas_dsp(t_canvas *x, t_signal **sp)$/;"	f	file:
canvas_dspstate	m_pd.h	/^EXTERN int canvas_dspstate;$/;"	v
canvas_duplicate	g_editor.c	/^static void canvas_duplicate(t_canvas *x)$/;"	f	file:
canvas_editmode	g_editor.c	/^void canvas_editmode(t_canvas *x, t_floatarg state)$/;"	f
canvas_editor_for_class	g_editor.c	/^void canvas_editor_for_class(t_class *c)$/;"	f
canvas_f	g_canvas.c	/^static void canvas_f(t_canvas *x, t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
canvas_fattensub	g_canvas.c	/^void canvas_fattensub(t_canvas *x,$/;"	f
canvas_find	g_editor.c	/^static void canvas_find(t_canvas *x, t_symbol *s, t_floatarg wholeword)$/;"	f	file:
canvas_find_again	g_editor.c	/^static void canvas_find_again(t_canvas *x)$/;"	f	file:
canvas_find_index	g_editor.c	/^static int canvas_find_index, canvas_find_wholeword;$/;"	v	file:
canvas_find_parent	g_editor.c	/^static void canvas_find_parent(t_canvas *x)$/;"	f	file:
canvas_find_wholeword	g_editor.c	/^static int canvas_find_index, canvas_find_wholeword;$/;"	v	file:
canvas_findbuf	g_editor.c	/^static t_binbuf *canvas_findbuf;$/;"	v	file:
canvas_finderror	g_editor.c	/^void canvas_finderror(void *error_object)$/;"	f
canvas_findhitbox	g_editor.c	/^static t_gobj *canvas_findhitbox(t_canvas *x, int xpos, int ypos,$/;"	f	file:
canvas_fixlinesfor	g_canvas.c	/^void canvas_fixlinesfor(t_canvas *x, t_text *text)$/;"	f
canvas_floatatom	g_text.c	/^void canvas_floatatom(t_glist *gl, t_symbol *s, int argc, t_atom *argv)$/;"	f
canvas_font	g_editor.c	/^static void canvas_font(t_canvas *x, t_floatarg font, t_floatarg resize,$/;"	f	file:
canvas_free	g_canvas.c	/^void canvas_free(t_canvas *x)$/;"	f
canvas_getargs	g_canvas.c	/^void canvas_getargs(int *argcp, t_atom **argvp)$/;"	f
canvas_getblock	g_canvas.c	/^void *canvas_getblock(t_class *blockclass, t_canvas **canvasp)$/;"	f
canvas_getcurrent	g_canvas.c	/^t_canvas *canvas_getcurrent(void)$/;"	f
canvas_getcurrentdir	g_canvas.c	/^t_symbol *canvas_getcurrentdir(void)$/;"	f
canvas_getdir	g_canvas.c	/^t_symbol *canvas_getdir(t_canvas *x)$/;"	f
canvas_getdollarzero	g_canvas.c	/^int canvas_getdollarzero( void)$/;"	f
canvas_getenv	g_canvas.c	/^t_canvasenvironment *canvas_getenv(t_canvas *x)$/;"	f
canvas_getindex	g_canvas.c	/^int canvas_getindex(t_canvas *x, t_gobj *y)$/;"	f
canvas_getrootfor	g_canvas.c	/^t_canvas *canvas_getrootfor(t_canvas *x)$/;"	f
canvas_hdial	g_text.c	/^void canvas_hdial(t_glist *gl, t_symbol *s, int argc, t_atom *argv)$/;"	f
canvas_hitbox	g_editor.c	/^int canvas_hitbox(t_canvas *x, t_gobj *y, int xpos, int ypos,$/;"	f
canvas_howputnew	g_text.c	/^static void canvas_howputnew(t_canvas *x, int *connectp, int *xpixp, int *ypixp,$/;"	f	file:
canvas_hradio	g_text.c	/^void canvas_hradio(t_glist *gl, t_symbol *s, int argc, t_atom *argv)$/;"	f
canvas_hslider	g_text.c	/^void canvas_hslider(t_glist *gl, t_symbol *s, int argc, t_atom *argv)$/;"	f
canvas_iemguis	g_text.c	/^void canvas_iemguis(t_glist *gl, t_symbol *guiobjname)$/;"	f
canvas_isabstraction	g_canvas.c	/^int canvas_isabstraction(t_canvas *x)$/;"	f
canvas_isconnected	g_editor.c	/^int canvas_isconnected (t_canvas *x, t_text *ob1, int n1,$/;"	f
canvas_istable	x_array.c	/^int canvas_istable(t_canvas *x)$/;"	f
canvas_key	g_editor.c	/^void canvas_key(t_canvas *x, t_symbol *s, int ac, t_atom *av)$/;"	f
canvas_last_glist	g_editor.c	/^static t_glist *canvas_last_glist;$/;"	v	file:
canvas_last_glist_x	g_editor.c	/^static int canvas_last_glist_x, canvas_last_glist_y;$/;"	v	file:
canvas_last_glist_y	g_editor.c	/^static int canvas_last_glist_x, canvas_last_glist_y;$/;"	v	file:
canvas_loadbang	g_canvas.c	/^void canvas_loadbang(t_canvas *x)$/;"	f
canvas_loadbangabstractions	g_canvas.c	/^static void canvas_loadbangabstractions(t_canvas *x)$/;"	f	file:
canvas_loadbangsubpatches	g_canvas.c	/^void canvas_loadbangsubpatches(t_canvas *x)$/;"	f
canvas_logerror	g_canvas.c	/^void canvas_logerror(t_object *y)$/;"	f
canvas_makebindsym	g_canvas.c	/^t_symbol *canvas_makebindsym(t_symbol *s)$/;"	f
canvas_makefilename	g_canvas.c	/^void canvas_makefilename(t_canvas *x, char *file, char *result, int resultsize)$/;"	f
canvas_map	g_canvas.c	/^void canvas_map(t_canvas *x, t_floatarg f)$/;"	f
canvas_menuarray	g_array.c	/^void canvas_menuarray(t_glist *canvas)$/;"	f
canvas_menuclose	g_editor.c	/^void canvas_menuclose(t_canvas *x, t_floatarg fforce)$/;"	f
canvas_menufont	g_editor.c	/^static void canvas_menufont(t_canvas *x)$/;"	f	file:
canvas_menusave	g_readwrite.c	/^static void canvas_menusave(t_canvas *x, float fdestroy)$/;"	f	file:
canvas_menusaveas	g_readwrite.c	/^static void canvas_menusaveas(t_canvas *x, float fdestroy)$/;"	f	file:
canvas_motion	g_editor.c	/^void canvas_motion(t_canvas *x, t_floatarg xpos, t_floatarg ypos,$/;"	f
canvas_mouse	g_editor.c	/^void canvas_mouse(t_canvas *x, t_floatarg xpos, t_floatarg ypos,$/;"	f
canvas_mouseup	g_editor.c	/^void canvas_mouseup(t_canvas *x,$/;"	f
canvas_msg	g_text.c	/^void canvas_msg(t_glist *gl, t_symbol *s, int argc, t_atom *argv)$/;"	f
canvas_mycnv	g_text.c	/^void canvas_mycnv(t_glist *gl, t_symbol *s, int argc, t_atom *argv)$/;"	f
canvas_new	g_canvas.c	/^t_canvas *canvas_new(void *dummy, t_symbol *sel, int argc, t_atom *argv)$/;"	f
canvas_newargc	g_canvas.c	/^static int canvas_newargc;$/;"	v	file:
canvas_newargv	g_canvas.c	/^static t_atom *canvas_newargv;$/;"	v	file:
canvas_newdirectory	g_canvas.c	/^static t_symbol *canvas_newdirectory = &s_;$/;"	v	file:
canvas_newfilename	g_canvas.c	/^static t_symbol *canvas_newfilename = &s_;$/;"	v	file:
canvas_noundo	g_editor.c	/^void canvas_noundo(t_canvas *x)$/;"	f
canvas_numbox	g_text.c	/^void canvas_numbox(t_glist *gl, t_symbol *s, int argc, t_atom *argv)$/;"	f
canvas_obj	g_text.c	/^void canvas_obj(t_glist *gl, t_symbol *s, int argc, t_atom *argv)$/;"	f
canvas_objfor	g_text.c	/^void canvas_objfor(t_glist *gl, t_text *x, int argc, t_atom *argv)$/;"	f
canvas_objtext	g_text.c	/^static void canvas_objtext(t_glist *gl, int xpix, int ypix, int width,$/;"	f	file:
canvas_open	g_canvas.c	/^int canvas_open(t_canvas *x, const char *name, const char *ext,$/;"	f
canvas_paste	g_editor.c	/^static void canvas_paste(t_canvas *x)$/;"	f	file:
canvas_pop	g_canvas.c	/^static void canvas_pop(t_canvas *x, t_floatarg fvis)$/;"	f	file:
canvas_popabstraction	g_canvas.c	/^void canvas_popabstraction(t_canvas *x)$/;"	f
canvas_print	g_editor.c	/^void canvas_print(t_canvas *x, t_symbol *s)$/;"	f
canvas_properties	g_editor.c	/^void canvas_properties(t_gobj*z, t_glist*unused)$/;"	f
canvas_readerror	g_readwrite.c	/^static void canvas_readerror(int natoms, t_atom *vec, int message, $/;"	f	file:
canvas_readscalar	g_readwrite.c	/^int canvas_readscalar(t_glist *x, int natoms, t_atom *vec,$/;"	f
canvas_readwrite_for_class	g_readwrite.c	/^void canvas_readwrite_for_class(t_class *c)$/;"	f
canvas_realizedollar	g_canvas.c	/^t_symbol *canvas_realizedollar(t_canvas *x, t_symbol *s)$/;"	f
canvas_redo	g_editor.c	/^static void canvas_redo(t_canvas *x)$/;"	f	file:
canvas_redraw	g_canvas.c	/^void canvas_redraw(t_canvas *x)$/;"	f
canvas_redrawallfortemplate	g_canvas.c	/^void canvas_redrawallfortemplate(t_template *template, int action)$/;"	f
canvas_redrawallfortemplatecanvas	g_canvas.c	/^void canvas_redrawallfortemplatecanvas(t_canvas *x, int action)$/;"	f
canvas_reflecttitle	g_canvas.c	/^void canvas_reflecttitle(t_canvas *x)$/;"	f
canvas_reload	g_editor.c	/^void canvas_reload(t_symbol *name, t_symbol *dir, t_gobj *except)$/;"	f
canvas_relocate	g_canvas.c	/^static void canvas_relocate(t_canvas *x, t_symbol *canvasgeom,$/;"	f	file:
canvas_rename	g_canvas.c	/^void canvas_rename(t_canvas *x, t_symbol *s, t_symbol *dir)$/;"	f
canvas_rename_method	g_canvas.c	/^static void canvas_rename_method(t_canvas *x, t_symbol *s, int ac, t_atom *av)$/;"	f	file:
canvas_reselect	g_editor.c	/^static void canvas_reselect(t_canvas *x)$/;"	f	file:
canvas_resortinlets	g_graph.c	/^void canvas_resortinlets(t_canvas *x)$/;"	f
canvas_resortoutlets	g_graph.c	/^void canvas_resortoutlets(t_canvas *x)$/;"	f
canvas_restore	g_canvas.c	/^void canvas_restore(t_canvas *x, t_symbol *s, int argc, t_atom *argv)$/;"	f
canvas_restoreconnections	g_editor.c	/^void canvas_restoreconnections(t_canvas *x)$/;"	f
canvas_resume_dsp	g_canvas.c	/^void canvas_resume_dsp(int oldstate)$/;"	f
canvas_rightclick	g_editor.c	/^static void canvas_rightclick(t_canvas *x, int xpos, int ypos, t_gobj *y)$/;"	f	file:
canvas_rminlet	g_graph.c	/^void canvas_rminlet(t_canvas *x, t_inlet *ip)$/;"	f
canvas_rmoutlet	g_graph.c	/^void canvas_rmoutlet(t_canvas *x, t_outlet *op)$/;"	f
canvas_savedeclarationsto	g_canvas.c	/^void canvas_savedeclarationsto(t_canvas *x, t_binbuf *b)$/;"	f
canvas_savetemplatesto	g_readwrite.c	/^static void canvas_savetemplatesto(t_canvas *x, t_binbuf *b, int wholething)$/;"	f	file:
canvas_saveto	g_readwrite.c	/^static void canvas_saveto(t_canvas *x, t_binbuf *b)$/;"	f	file:
canvas_savetofile	g_readwrite.c	/^static void canvas_savetofile(t_canvas *x, t_symbol *filename, t_symbol *dir,$/;"	f	file:
canvas_scanbinbuf	g_readwrite.c	/^static int canvas_scanbinbuf(int natoms, t_atom *vec, int *p_indexout,$/;"	f	file:
canvas_selectall	g_editor.c	/^static void canvas_selectall(t_canvas *x)$/;"	f	file:
canvas_selectinrect	g_editor.c	/^void canvas_selectinrect(t_canvas *x, int lox, int loy, int hix, int hiy)$/;"	f
canvas_setargs	g_canvas.c	/^void canvas_setargs(int argc, t_atom *argv)$/;"	f
canvas_setbounds	g_canvas.c	/^static void canvas_setbounds(t_canvas *x, t_float left, t_float top, $/;"	f	file:
canvas_setcurrent	g_canvas.c	/^void canvas_setcurrent(t_canvas *x)$/;"	f
canvas_setcursor	g_editor.c	/^void canvas_setcursor(t_canvas *x, unsigned int cursornum)$/;"	f
canvas_setdeleting	g_graph.c	/^int canvas_setdeleting(t_canvas *x, int flag)$/;"	f
canvas_setgraph	g_editor.c	/^void canvas_setgraph(t_glist *x, int flag, int nogoprect)$/;"	f
canvas_setundo	g_editor.c	/^void canvas_setundo(t_canvas *x, t_undofn undofn, void *buf,$/;"	f
canvas_showtext	g_canvas.c	/^int canvas_showtext(t_canvas *x)$/;"	f
canvas_start_dsp	g_canvas.c	/^static void canvas_start_dsp(void)$/;"	f	file:
canvas_startmotion	g_editor.c	/^void canvas_startmotion(t_canvas *x)$/;"	f
canvas_stop_dsp	g_canvas.c	/^static void canvas_stop_dsp(void)$/;"	f	file:
canvas_stowconnections	g_editor.c	/^void canvas_stowconnections(t_canvas *x)$/;"	f
canvas_suspend_dsp	g_canvas.c	/^int canvas_suspend_dsp(void)$/;"	f
canvas_symbolatom	g_text.c	/^void canvas_symbolatom(t_glist *gl, t_symbol *s, int argc, t_atom *argv)$/;"	f
canvas_takeofflist	g_canvas.c	/^static void canvas_takeofflist(t_canvas *x)$/;"	f	file:
canvas_textcopybuf	g_editor.c	/^static char *canvas_textcopybuf;$/;"	v	file:
canvas_textcopybufsize	g_editor.c	/^static int canvas_textcopybufsize;$/;"	v	file:
canvas_texteditor	g_editor.c	/^static void canvas_texteditor(t_canvas *x)$/;"	f	file:
canvas_tidy	g_editor.c	/^static void canvas_tidy(t_canvas *x)$/;"	f	file:
canvas_toggle	g_text.c	/^void canvas_toggle(t_glist *gl, t_symbol *s, int argc, t_atom *argv)$/;"	f
canvas_unbind	g_canvas.c	/^static void canvas_unbind(t_canvas *x)$/;"	f	file:
canvas_undo	g_editor.c	/^static void canvas_undo(t_canvas *x)$/;"	f	file:
canvas_undo_already_set_move	g_editor.c	/^static int canvas_undo_already_set_move;$/;"	v	file:
canvas_undo_buf	g_editor.c	/^static void *canvas_undo_buf;           \/* data private to the undo function *\/$/;"	v	file:
canvas_undo_canvas	g_editor.c	/^static t_canvas *canvas_undo_canvas;    \/* which canvas we can undo on *\/$/;"	v	file:
canvas_undo_connect	g_editor.c	/^static void canvas_undo_connect(t_canvas *x, void *z, int action)$/;"	f	file:
canvas_undo_cut	g_editor.c	/^static void canvas_undo_cut(t_canvas *x, void *z, int action)$/;"	f	file:
canvas_undo_disconnect	g_editor.c	/^static void canvas_undo_disconnect(t_canvas *x, void *z, int action)$/;"	f	file:
canvas_undo_fn	g_editor.c	/^static t_undofn canvas_undo_fn;         \/* current undo function if any *\/$/;"	v	file:
canvas_undo_move	g_editor.c	/^static void canvas_undo_move(t_canvas *x, void *z, int action)$/;"	f	file:
canvas_undo_name	g_editor.c	/^static const char *canvas_undo_name;$/;"	v	file:
canvas_undo_paste	g_editor.c	/^static void canvas_undo_paste(t_canvas *x, void *z, int action)$/;"	f	file:
canvas_undo_set_connect	g_editor.c	/^static void *canvas_undo_set_connect(t_canvas *x,$/;"	f	file:
canvas_undo_set_cut	g_editor.c	/^static void *canvas_undo_set_cut(t_canvas *x, int mode)$/;"	f	file:
canvas_undo_set_disconnect	g_editor.c	/^static void *canvas_undo_set_disconnect(t_canvas *x,$/;"	f	file:
canvas_undo_set_move	g_editor.c	/^static void *canvas_undo_set_move(t_canvas *x, int selected)$/;"	f	file:
canvas_undo_set_paste	g_editor.c	/^static void *canvas_undo_set_paste(t_canvas *x)$/;"	f	file:
canvas_undo_whatnext	g_editor.c	/^static int canvas_undo_whatnext;        \/* whether we can now UNDO or REDO *\/$/;"	v	file:
canvas_unsetcurrent	g_canvas.c	/^void canvas_unsetcurrent(t_canvas *x)$/;"	f
canvas_upclicktime	g_editor.c	/^static double canvas_upclicktime;$/;"	v	file:
canvas_update_dsp	g_canvas.c	/^void canvas_update_dsp(void)$/;"	f
canvas_updatewindowlist	g_canvas.c	/^void canvas_updatewindowlist( void)$/;"	f
canvas_upx	g_editor.c	/^static int canvas_upx, canvas_upy;$/;"	v	file:
canvas_upy	g_editor.c	/^static int canvas_upx, canvas_upy;$/;"	v	file:
canvas_vdial	g_text.c	/^void canvas_vdial(t_glist *gl, t_symbol *s, int argc, t_atom *argv)$/;"	f
canvas_vis	g_editor.c	/^void canvas_vis(t_canvas *x, t_floatarg f)$/;"	f
canvas_vradio	g_text.c	/^void canvas_vradio(t_glist *gl, t_symbol *s, int argc, t_atom *argv)$/;"	f
canvas_vslider	g_text.c	/^void canvas_vslider(t_glist *gl, t_symbol *s, int argc, t_atom *argv)$/;"	f
canvas_vumeter	g_text.c	/^void canvas_vumeter(t_glist *gl, t_symbol *s, int argc, t_atom *argv)$/;"	f
canvas_whichfind	g_canvas.c	/^t_canvas *canvas_whichfind;         \/* last canvas we did a find in *\/ $/;"	v
canvas_writescalar	g_readwrite.c	/^void canvas_writescalar(t_symbol *templatesym, t_word *w, t_binbuf *b,$/;"	f
cdft	d_fft_fftsg.c	/^void cdft(int n, int isgn, double *a, int *ip, double *w)$/;"	f
cdft	d_fftsg_h.c	/^void cdft(int n, int isgn, double *a)$/;"	f
cdft_arg_st	d_fft_fftsg.c	/^struct cdft_arg_st {$/;"	s	file:
cdft_arg_st	d_fftsg_h.c	/^struct cdft_arg_st {$/;"	s	file:
cdft_arg_t	d_fft_fftsg.c	/^typedef struct cdft_arg_st cdft_arg_t;$/;"	t	typeref:struct:cdft_arg_st	file:
cdft_arg_t	d_fftsg_h.c	/^typedef struct cdft_arg_st cdft_arg_t;$/;"	t	typeref:struct:cdft_arg_st	file:
cdft_thread_create	d_fft_fftsg.c	909;"	d	file:
cdft_thread_create	d_fft_fftsg.c	936;"	d	file:
cdft_thread_create	d_fftsg_h.c	500;"	d	file:
cdft_thread_create	d_fftsg_h.c	527;"	d	file:
cdft_thread_t	d_fft_fftsg.c	908;"	d	file:
cdft_thread_t	d_fft_fftsg.c	935;"	d	file:
cdft_thread_t	d_fftsg_h.c	499;"	d	file:
cdft_thread_t	d_fftsg_h.c	526;"	d	file:
cdft_thread_wait	d_fft_fftsg.c	915;"	d	file:
cdft_thread_wait	d_fft_fftsg.c	944;"	d	file:
cdft_thread_wait	d_fftsg_h.c	506;"	d	file:
cdft_thread_wait	d_fftsg_h.c	535;"	d	file:
ce_argc	g_canvas.c	/^    int ce_argc;           \/* number of "$" arguments *\/$/;"	m	struct:_canvasenvironment	file:
ce_argv	g_canvas.c	/^    t_atom *ce_argv;       \/* array of "$" arguments *\/$/;"	m	struct:_canvasenvironment	file:
ce_dir	g_canvas.c	/^    t_symbol *ce_dir;      \/* directory patch lives in *\/$/;"	m	struct:_canvasenvironment	file:
ce_dollarzero	g_canvas.c	/^    int ce_dollarzero;     \/* value of "$0" *\/$/;"	m	struct:_canvasenvironment	file:
ce_path	g_canvas.c	/^    t_namelist *ce_path;   \/* search path *\/$/;"	m	struct:_canvasenvironment	file:
cfft	d_fftroutine.c	/^void cfft(int trnsfrm_dir, int npnt, int window,$/;"	f
cfftw_bwd	d_fft_fftw.c	/^static cfftw_info cfftw_fwd[MAXFFT+1 - MINFFT],cfftw_bwd[MAXFFT+1 - MINFFT];$/;"	v	file:
cfftw_fwd	d_fft_fftw.c	/^static cfftw_info cfftw_fwd[MAXFFT+1 - MINFFT],cfftw_bwd[MAXFFT+1 - MINFFT];$/;"	v	file:
cfftw_getplan	d_fft_fftw.c	/^static cfftw_info *cfftw_getplan(int n,int fwd)$/;"	f	file:
cfftw_info	d_fft_fftw.c	/^} cfftw_info;$/;"	t	typeref:struct:__anon1	file:
cftb040	d_fft_fftsg.c	/^void cftb040(double *a)$/;"	f
cftb040	d_fftsg_h.c	/^void cftb040(double *a)$/;"	f
cftb1st	d_fft_fftsg.c	/^void cftb1st(int n, double *a, double *w)$/;"	f
cftb1st	d_fftsg_h.c	/^void cftb1st(int n, double *a)$/;"	f
cftbsub	d_fft_fftsg.c	/^void cftbsub(int n, double *a, int *ip, int nw, double *w)$/;"	f
cftbsub	d_fftsg_h.c	/^void cftbsub(int n, double *a)$/;"	f
cftf040	d_fft_fftsg.c	/^void cftf040(double *a)$/;"	f
cftf040	d_fftsg_h.c	/^void cftf040(double *a)$/;"	f
cftf081	d_fft_fftsg.c	/^void cftf081(double *a, double *w)$/;"	f
cftf081	d_fftsg_h.c	/^void cftf081(double *a)$/;"	f
cftf082	d_fft_fftsg.c	/^void cftf082(double *a, double *w)$/;"	f
cftf082	d_fftsg_h.c	/^void cftf082(double *a)$/;"	f
cftf161	d_fft_fftsg.c	/^void cftf161(double *a, double *w)$/;"	f
cftf161	d_fftsg_h.c	/^void cftf161(double *a)$/;"	f
cftf162	d_fft_fftsg.c	/^void cftf162(double *a, double *w)$/;"	f
cftf162	d_fftsg_h.c	/^void cftf162(double *a)$/;"	f
cftf1st	d_fft_fftsg.c	/^void cftf1st(int n, double *a, double *w)$/;"	f
cftfsub	d_fft_fftsg.c	/^void cftfsub(int n, double *a, int *ip, int nw, double *w)$/;"	f
cftfsub	d_fftsg_h.c	/^void cftfsub(int n, double *a)$/;"	f
cftfx41	d_fft_fftsg.c	/^void cftfx41(int n, double *a, int nw, double *w)$/;"	f
cftfx41	d_fftsg_h.c	/^void cftfx41(int n, double *a)$/;"	f
cftleaf	d_fft_fftsg.c	/^void cftleaf(int n, int isplt, double *a, int nw, double *w)$/;"	f
cftleaf	d_fftsg_h.c	/^void cftleaf(int n, int isplt, double *a)$/;"	f
cftmdl1	d_fft_fftsg.c	/^void cftmdl1(int n, double *a, double *w)$/;"	f
cftmdl1	d_fftsg_h.c	/^void cftmdl1(int n, double *a)$/;"	f
cftmdl2	d_fft_fftsg.c	/^void cftmdl2(int n, double *a, double *w)$/;"	f
cftmdl2	d_fftsg_h.c	/^void cftmdl2(int n, double *a)$/;"	f
cftrec1_th	d_fft_fftsg.c	/^void *cftrec1_th(void *p)$/;"	f
cftrec1_th	d_fftsg_h.c	/^void *cftrec1_th(void *p)$/;"	f
cftrec2_th	d_fft_fftsg.c	/^void *cftrec2_th(void *p)$/;"	f
cftrec2_th	d_fftsg_h.c	/^void *cftrec2_th(void *p)$/;"	f
cftrec4	d_fft_fftsg.c	/^void cftrec4(int n, double *a, int nw, double *w)$/;"	f
cftrec4	d_fftsg_h.c	/^void cftrec4(int n, double *a)$/;"	f
cftrec4_th	d_fft_fftsg.c	/^void cftrec4_th(int n, double *a, int nw, double *w)$/;"	f
cftrec4_th	d_fftsg_h.c	/^void cftrec4_th(int n, double *a)$/;"	f
cfttree	d_fft_fftsg.c	/^int cfttree(int n, int j, int k, double *a, int nw, double *w)$/;"	f
cfttree	d_fftsg_h.c	/^int cfttree(int n, int j, int k, double *a)$/;"	f
cftx020	d_fft_fftsg.c	/^void cftx020(double *a)$/;"	f
cftx020	d_fftsg_h.c	/^void cftx020(double *a)$/;"	f
change_bang	x_connective.c	/^static void change_bang(t_change *x)$/;"	f	file:
change_class	x_connective.c	/^static t_class *change_class;$/;"	v	file:
change_float	x_connective.c	/^static void change_float(t_change *x, t_float f)$/;"	f	file:
change_new	x_connective.c	/^static void *change_new(t_floatarg f)$/;"	f	file:
change_set	x_connective.c	/^static void change_set(t_change *x, t_float f)$/;"	f	file:
change_setup	x_connective.c	/^void change_setup(void)$/;"	f
channels	s_audio_oss.c	/^     int channels;$/;"	m	struct:_multidev	file:
check_error	s_audio_alsa.c	/^static void check_error(int err, int fn, const char *why)$/;"	f	file:
check_error	s_audio_alsamm.c	/^static void check_error(int err, const char *why)$/;"	f	file:
circularBuffer_tag	s_midi_mmio.c	/^typedef struct circularBuffer_tag$/;"	s	file:
class_addanything	m_class.c	/^void class_addanything(t_class *c, t_method fn)$/;"	f
class_addanything	m_pd.h	514;"	d
class_addbang	m_class.c	/^void class_addbang(t_class *c, t_method fn)$/;"	f
class_addbang	m_pd.h	509;"	d
class_addcreator	m_class.c	/^void class_addcreator(t_newmethod newmethod, t_symbol *s, $/;"	f
class_addfloat	m_pd.h	511;"	d
class_addlist	m_class.c	/^void class_addlist(t_class *c, t_method fn)$/;"	f
class_addlist	m_pd.h	513;"	d
class_addmethod	m_class.c	/^void class_addmethod(t_class *c, t_method fn, t_symbol *sel,$/;"	f
class_addpointer	m_class.c	/^void class_addpointer(t_class *c, t_method fn)$/;"	f
class_addpointer	m_pd.h	510;"	d
class_addsymbol	m_class.c	/^void class_addsymbol(t_class *c, t_method fn)$/;"	f
class_addsymbol	m_pd.h	512;"	d
class_doaddfloat	m_class.c	/^void class_doaddfloat(t_class *c, t_method fn)$/;"	f
class_domainsignalin	m_class.c	/^void class_domainsignalin(t_class *c, int onset)$/;"	f
class_extern_dir	m_class.c	/^static t_symbol *class_extern_dir = &s_;$/;"	v	file:
class_gethelpdir	m_class.c	/^char *class_gethelpdir(t_class *c)$/;"	f
class_gethelpname	m_class.c	/^char *class_gethelpname(t_class *c)$/;"	f
class_getname	m_class.c	/^char *class_getname(t_class *c)$/;"	f
class_getpropertiesfn	m_class.c	/^t_propertiesfn class_getpropertiesfn(t_class *c)$/;"	f
class_getsavefn	m_class.c	/^t_savefn class_getsavefn(t_class *c)$/;"	f
class_isdrawcommand	m_class.c	/^int class_isdrawcommand(t_class *c)$/;"	f
class_loadsym	m_class.c	/^static t_symbol *class_loadsym;     \/* name under which an extern is invoked *\/$/;"	v	file:
class_new	m_class.c	/^t_class *class_new(t_symbol *s, t_newmethod newmethod, t_method freemethod,$/;"	f
class_nosavefn	m_class.c	/^static void class_nosavefn(t_gobj *z, t_binbuf *b)$/;"	f	file:
class_set_extern_dir	m_class.c	/^void class_set_extern_dir(t_symbol *s)$/;"	f
class_setdrawcommand	m_class.c	/^void class_setdrawcommand(t_class *c)$/;"	f
class_sethelpsymbol	m_class.c	/^void class_sethelpsymbol(t_class *c, t_symbol *s)$/;"	f
class_setparentwidget	m_class.c	/^void class_setparentwidget(t_class *c, t_parentwidgetbehavior *pw)$/;"	f
class_setpropertiesfn	m_class.c	/^void class_setpropertiesfn(t_class *c, t_propertiesfn f)$/;"	f
class_setsavefn	m_class.c	/^void class_setsavefn(t_class *c, t_savefn f)$/;"	f
class_setwidget	m_class.c	/^void class_setwidget(t_class *c, t_widgetbehavior *w)$/;"	f
clip_bang	x_arithmetic.c	/^static void clip_bang(t_clip *x)$/;"	f	file:
clip_class	d_math.c	/^static t_class *clip_class;$/;"	v	file:
clip_class	x_arithmetic.c	/^static t_class *clip_class;$/;"	v	file:
clip_dsp	d_math.c	/^static void clip_dsp(t_clip *x, t_signal **sp)$/;"	f	file:
clip_float	x_arithmetic.c	/^static void clip_float(t_clip *x, t_float f)$/;"	f	file:
clip_new	d_math.c	/^static void *clip_new(t_floatarg lo, t_floatarg hi)$/;"	f	file:
clip_new	x_arithmetic.c	/^static void *clip_new(t_floatarg f1, t_floatarg f2)$/;"	f	file:
clip_perform	d_math.c	/^static t_int *clip_perform(t_int *w)$/;"	f	file:
clip_setup	d_math.c	/^static void clip_setup(void)$/;"	f	file:
clip_setup	x_arithmetic.c	/^static void clip_setup(void)$/;"	f	file:
clock_delay	m_sched.c	/^void clock_delay(t_clock *x, double delaytime)$/;"	f
clock_free	m_sched.c	/^void clock_free(t_clock *x)$/;"	f
clock_getlogicaltime	m_sched.c	/^double clock_getlogicaltime( void)$/;"	f
clock_getsystime	m_sched.c	/^double clock_getsystime( void) { return (pd_this->pd_systime); }$/;"	f
clock_getsystimeafter	m_sched.c	/^double clock_getsystimeafter(double delaytime)$/;"	f
clock_gettimesince	m_sched.c	/^double clock_gettimesince(double prevsystime)$/;"	f
clock_gettimesincewithunits	m_sched.c	/^double clock_gettimesincewithunits(double prevsystime,$/;"	f
clock_new	m_sched.c	/^t_clock *clock_new(void *owner, t_method fn)$/;"	f
clock_set	m_sched.c	/^void clock_set(t_clock *x, double setticks)$/;"	f
clock_setunit	m_sched.c	/^void clock_setunit(t_clock *x, double timeunit, int sampflag)$/;"	f
clock_unset	m_sched.c	/^void clock_unset(t_clock *x)$/;"	f
coeffi	d_fftroutine.c	/^        SAMPLE          *coeffi, *inv_coeffi;$/;"	m	struct:Tfft_net	file:
coeffr	d_fftroutine.c	/^        SAMPLE          *coeffr, *inv_coeffr;$/;"	m	struct:Tfft_net	file:
coeffs	m_pd.h	/^  t_sample *coeffs;  \/* coefficients for filtering... *\/$/;"	m	struct:_resample
coefsize	m_pd.h	/^  int      coefsize;$/;"	m	struct:_resample
compute_fft	d_fftroutine.c	/^void compute_fft(FFT_NET  *fft_net)$/;"	f
conf_init	m_conf.c	/^void conf_init(void)$/;"	f
copy_binbuf	g_editor.c	/^static t_binbuf *copy_binbuf;$/;"	v	file:
copy_perf8	d_dac.c	/^t_int *copy_perf8(t_int *w)$/;"	f
copy_perform	d_dac.c	/^t_int *copy_perform(t_int *w)$/;"	f
copybytes	m_memory.c	/^void *copybytes(void *src, size_t nbytes)$/;"	f
cos_class	d_osc.c	/^static t_class *cos_class;$/;"	v	file:
cos_class	x_arithmetic.c	/^static t_class *cos_class;      \/* ----------- cos --------------- *\/$/;"	v	file:
cos_dsp	d_osc.c	/^static void cos_dsp(t_cos *x, t_signal **sp)$/;"	f	file:
cos_float	x_arithmetic.c	/^static void cos_float(t_object *x, t_float f)$/;"	f	file:
cos_maketable	d_osc.c	/^static void cos_maketable(void)$/;"	f	file:
cos_new	d_osc.c	/^static void *cos_new(void)$/;"	f	file:
cos_new	x_arithmetic.c	/^static void *cos_new(void)$/;"	f	file:
cos_perform	d_osc.c	/^static t_int *cos_perform(t_int *w)$/;"	f	file:
cos_setup	d_osc.c	/^static void cos_setup(void)$/;"	f	file:
cos_table	d_osc.c	/^float *cos_table;$/;"	v
cos_table	m_pd.h	/^EXTERN float *cos_table;$/;"	v
costab	d_fft_mayer.c	/^static REAL costab[20]=$/;"	v	file:
coswrk	d_fft_mayer.c	/^static REAL coswrk[20]=$/;"	v	file:
cputime_bang	x_misc.c	/^static void cputime_bang(t_cputime *x)$/;"	f	file:
cputime_bang2	x_misc.c	/^static void cputime_bang2(t_cputime *x)$/;"	f	file:
cputime_class	x_misc.c	/^static t_class *cputime_class;$/;"	v	file:
cputime_new	x_misc.c	/^static void *cputime_new(void)$/;"	f	file:
cputime_setup	x_misc.c	/^static void cputime_setup(void)$/;"	f	file:
create_hanning	d_fftroutine.c	/^void create_hanning(SAMPLE *window, int n, SAMPLE scale)$/;"	f
create_rectangular	d_fftroutine.c	/^void create_rectangular(SAMPLE *window, int n, SAMPLE scale)$/;"	f
create_soundfile	d_soundfile.c	/^static int create_soundfile(t_canvas *canvas, const char *filename,$/;"	f	file:
ctlin_class	x_midi.c	/^static t_class *ctlin_class;$/;"	v	file:
ctlin_free	x_midi.c	/^static void ctlin_free(t_ctlin *x)$/;"	f	file:
ctlin_list	x_midi.c	/^static void ctlin_list(t_ctlin *x, t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
ctlin_new	x_midi.c	/^static void *ctlin_new(t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
ctlin_setup	x_midi.c	/^static void ctlin_setup(void)$/;"	f	file:
ctlout_class	x_midi.c	/^static t_class *ctlout_class;$/;"	v	file:
ctlout_float	x_midi.c	/^static void ctlout_float(t_ctlout *x, t_float f)$/;"	f	file:
ctlout_new	x_midi.c	/^static void *ctlout_new(t_floatarg ctl, t_floatarg channel)$/;"	f	file:
ctlout_setup	x_midi.c	/^static void ctlout_setup(void)$/;"	f	file:
cursorlist	g_editor.c	/^static char *cursorlist[] = {$/;"	v	file:
curve_activate	g_template.c	/^static void curve_activate(t_gobj *z, t_glist *glist,$/;"	f	file:
curve_class	g_template.c	/^t_class *curve_class;$/;"	v
curve_click	g_template.c	/^static int curve_click(t_gobj *z, t_glist *glist, $/;"	f	file:
curve_displace	g_template.c	/^static void curve_displace(t_gobj *z, t_glist *glist,$/;"	f	file:
curve_float	g_template.c	/^void curve_float(t_curve *x, t_floatarg f)$/;"	f
curve_free	g_template.c	/^static void curve_free(t_curve *x)$/;"	f	file:
curve_getrect	g_template.c	/^static void curve_getrect(t_gobj *z, t_glist *glist,$/;"	f	file:
curve_motion	g_template.c	/^static void curve_motion(void *z, t_floatarg dx, t_floatarg dy)$/;"	f	file:
curve_motion_array	g_template.c	/^static t_array *curve_motion_array;$/;"	v	file:
curve_motion_field	g_template.c	/^static int curve_motion_field;$/;"	v	file:
curve_motion_glist	g_template.c	/^static t_glist *curve_motion_glist;$/;"	v	file:
curve_motion_gpointer	g_template.c	/^static t_gpointer curve_motion_gpointer;$/;"	v	file:
curve_motion_scalar	g_template.c	/^static t_scalar *curve_motion_scalar;$/;"	v	file:
curve_motion_template	g_template.c	/^static t_template *curve_motion_template;$/;"	v	file:
curve_motion_wp	g_template.c	/^static t_word *curve_motion_wp;$/;"	v	file:
curve_motion_xbase	g_template.c	/^static t_float curve_motion_xbase;$/;"	v	file:
curve_motion_xcumulative	g_template.c	/^static t_float curve_motion_xcumulative;$/;"	v	file:
curve_motion_xper	g_template.c	/^static t_float curve_motion_xper;$/;"	v	file:
curve_motion_ybase	g_template.c	/^static t_float curve_motion_ybase;$/;"	v	file:
curve_motion_ycumulative	g_template.c	/^static t_float curve_motion_ycumulative;$/;"	v	file:
curve_motion_yper	g_template.c	/^static t_float curve_motion_yper;$/;"	v	file:
curve_new	g_template.c	/^static void *curve_new(t_symbol *classsym, int argc, t_atom *argv)$/;"	f	file:
curve_select	g_template.c	/^static void curve_select(t_gobj *z, t_glist *glist,$/;"	f	file:
curve_setup	g_template.c	/^static void curve_setup(void)$/;"	f	file:
curve_vis	g_template.c	/^static void curve_vis(t_gobj *z, t_glist *glist, $/;"	f	file:
curve_widgetbehavior	g_template.c	/^t_parentwidgetbehavior curve_widgetbehavior =$/;"	v
d_arithmetic_setup	d_arithmetic.c	/^void d_arithmetic_setup(void)$/;"	f
d_array_setup	d_array.c	/^void d_array_setup(void)$/;"	f
d_bufsize	s_audio_oss.c	/^    int d_bufsize;          \/* total buffer size in blocks for this device *\/$/;"	m	struct:_oss_dev	file:
d_bytespersamp	s_audio_oss.c	/^    unsigned int d_bytespersamp; \/* bytes per sample (2 for 16 bit, 4 for 32) *\/$/;"	m	struct:_oss_dev	file:
d_ctl_setup	d_ctl.c	/^void d_ctl_setup(void)$/;"	f
d_dac_setup	d_dac.c	/^void d_dac_setup(void)$/;"	f
d_delay_setup	d_delay.c	/^void d_delay_setup(void)$/;"	f
d_dropcount	s_audio_oss.c	/^    int d_dropcount;        \/* # of buffers to drop for resync (output only) *\/$/;"	m	struct:_oss_dev	file:
d_fd	s_audio_oss.c	/^    int d_fd;$/;"	m	struct:_oss_dev	file:
d_fft_setup	d_fft.c	/^void d_fft_setup(void)$/;"	f
d_filter_setup	d_filter.c	/^void d_filter_setup(void)$/;"	f
d_global_setup	d_global.c	/^void d_global_setup(void)$/;"	f
d_math_setup	d_math.c	/^void d_math_setup(void)$/;"	f
d_misc_setup	d_misc.c	/^void d_misc_setup(void)$/;"	f
d_nchannels	s_audio_oss.c	/^    unsigned int d_nchannels;   \/* number of channels for this device *\/$/;"	m	struct:_oss_dev	file:
d_osc_setup	d_osc.c	/^void d_osc_setup(void)$/;"	f
d_soundfile_setup	d_soundfile.c	/^void d_soundfile_setup(void)$/;"	f
d_space	s_audio_oss.c	/^    unsigned int d_space;   \/* bytes available for writing\/reading  *\/$/;"	m	struct:_oss_dev	file:
d_ugen_setup	d_ugen.c	/^void d_ugen_setup(void) $/;"	f
dac_class	d_dac.c	/^static t_class *dac_class;$/;"	v	file:
dac_dsp	d_dac.c	/^static void dac_dsp(t_dac *x, t_signal **sp)$/;"	f	file:
dac_free	d_dac.c	/^static void dac_free(t_dac *x)$/;"	f	file:
dac_new	d_dac.c	/^static void *dac_new(t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
dac_send	s_audio_alsamm.c	/^ static int dac_send = 0;$/;"	v	file:
dac_setup	d_dac.c	/^static void dac_setup(void)$/;"	f	file:
data	s_midi_mmio.c	/^    DWORD data;$/;"	m	struct:evemsw_tag	file:
dataslot_matches	g_template.c	/^static int dataslot_matches(t_dataslot *ds1, t_dataslot *ds2,$/;"	f	file:
dbtopow	x_acoustics.c	/^t_float dbtopow(t_float f)$/;"	f
dbtopow_class	x_acoustics.c	/^static t_class *dbtopow_class;$/;"	v	file:
dbtopow_float	x_acoustics.c	/^static void dbtopow_float(t_object *x, t_float f)$/;"	f	file:
dbtopow_new	x_acoustics.c	/^static void *dbtopow_new(void)$/;"	f	file:
dbtopow_tilde	d_math.c	/^typedef struct dbtopow_tilde$/;"	s	file:
dbtopow_tilde_class	d_math.c	/^t_class *dbtopow_tilde_class;$/;"	v
dbtopow_tilde_dsp	d_math.c	/^static void dbtopow_tilde_dsp(t_dbtopow_tilde *x, t_signal **sp)$/;"	f	file:
dbtopow_tilde_new	d_math.c	/^static void *dbtopow_tilde_new(void)$/;"	f	file:
dbtopow_tilde_perform	d_math.c	/^static t_int *dbtopow_tilde_perform(t_int *w)$/;"	f	file:
dbtopow_tilde_setup	d_math.c	/^void dbtopow_tilde_setup(void)$/;"	f
dbtorms	x_acoustics.c	/^t_float dbtorms(t_float f)$/;"	f
dbtorms_class	x_acoustics.c	/^static t_class *dbtorms_class;$/;"	v	file:
dbtorms_float	x_acoustics.c	/^static void dbtorms_float(t_object *x, t_float f)$/;"	f	file:
dbtorms_new	x_acoustics.c	/^static void *dbtorms_new(void)$/;"	f	file:
dbtorms_tilde	d_math.c	/^typedef struct dbtorms_tilde$/;"	s	file:
dbtorms_tilde_class	d_math.c	/^t_class *dbtorms_tilde_class;$/;"	v
dbtorms_tilde_dsp	d_math.c	/^static void dbtorms_tilde_dsp(t_dbtorms_tilde *x, t_signal **sp)$/;"	f	file:
dbtorms_tilde_new	d_math.c	/^static void *dbtorms_tilde_new(void)$/;"	f	file:
dbtorms_tilde_perform	d_math.c	/^static t_int *dbtorms_tilde_perform(t_int *w)$/;"	f	file:
dbtorms_tilde_setup	d_math.c	/^void dbtorms_tilde_setup(void)$/;"	f
dc_block	d_soundfile.c	/^    uint32_t dc_block;              \/* block size                 *\/$/;"	m	struct:_datachunk	file:
dc_calcsize	d_ugen.c	/^    int dc_calcsize;        \/* number of elements to calculate *\/$/;"	m	struct:_dspcontext	file:
dc_id	d_soundfile.c	/^    char  dc_id[4];                 \/* data chunk id 'SSND'       *\/$/;"	m	struct:_datachunk	file:
dc_iosigs	d_ugen.c	/^    t_signal **dc_iosigs;$/;"	m	struct:_dspcontext	file:
dc_ninlets	d_ugen.c	/^    int dc_ninlets;$/;"	m	struct:_dspcontext	file:
dc_noutlets	d_ugen.c	/^    int dc_noutlets;$/;"	m	struct:_dspcontext	file:
dc_offset	d_soundfile.c	/^    uint32_t dc_offset;             \/* additional offset in bytes *\/$/;"	m	struct:_datachunk	file:
dc_parentcontext	d_ugen.c	/^    struct _dspcontext *dc_parentcontext;$/;"	m	struct:_dspcontext	typeref:struct:_dspcontext::_dspcontext	file:
dc_reblock	d_ugen.c	/^    char dc_reblock;        \/* true if we have to reblock inlets\/outlets *\/$/;"	m	struct:_dspcontext	file:
dc_size	d_soundfile.c	/^    uint32_t dc_size;               \/* length of data chunk       *\/$/;"	m	struct:_datachunk	file:
dc_srate	d_ugen.c	/^    t_float dc_srate;$/;"	m	struct:_dspcontext	file:
dc_switched	d_ugen.c	/^    char dc_switched;       \/* true if we're switched *\/$/;"	m	struct:_dspcontext	file:
dc_toplevel	d_ugen.c	/^    char dc_toplevel;       \/* true if "iosigs" is invalid. *\/$/;"	m	struct:_dspcontext	file:
dc_ugenlist	d_ugen.c	/^    struct _ugenbox *dc_ugenlist;$/;"	m	struct:_dspcontext	typeref:struct:_dspcontext::_ugenbox	file:
dc_vecsize	d_ugen.c	/^    int dc_vecsize;         \/* vector size, power of two *\/$/;"	m	struct:_dspcontext	file:
dctsub	d_fft_fftsg.c	/^void dctsub(int n, double *a, int nc, double *c)$/;"	f
dctsub	d_fftsg_h.c	/^void dctsub(int n, double *a)$/;"	f
dctsub4	d_fftsg_h.c	/^void dctsub4(int n, double *a)$/;"	f
ddct	d_fft_fftsg.c	/^void ddct(int n, int isgn, double *a, int *ip, double *w)$/;"	f
ddct	d_fftsg_h.c	/^void ddct(int n, int isgn, double *a)$/;"	f
ddst	d_fft_fftsg.c	/^void ddst(int n, int isgn, double *a, int *ip, double *w)$/;"	f
ddst	d_fftsg_h.c	/^void ddst(int n, int isgn, double *a)$/;"	f
declare_class	g_canvas.c	/^static t_class *declare_class;$/;"	v	file:
declare_class	g_readwrite.c	/^static t_class *declare_class;$/;"	v	file:
declare_free	g_canvas.c	/^static void declare_free(t_declare *x)$/;"	f	file:
declare_new	g_canvas.c	/^static void *declare_new(t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
defaultfontshit	s_inter.c	/^static int defaultfontshit[MAXFONTS] = {$/;"	v	file:
delay_bang	x_time.c	/^static void delay_bang(t_delay *x)$/;"	f	file:
delay_class	x_time.c	/^static t_class *delay_class;$/;"	v	file:
delay_float	x_time.c	/^static void delay_float(t_delay *x, t_float f)$/;"	f	file:
delay_free	x_time.c	/^static void delay_free(t_delay *x)$/;"	f	file:
delay_ft1	x_time.c	/^static void delay_ft1(t_delay *x, t_floatarg g)$/;"	f	file:
delay_move	g_editor.c	/^static void delay_move(t_canvas *x)$/;"	f	file:
delay_new	x_time.c	/^static void *delay_new(t_symbol *unitname, t_floatarg f, t_floatarg tempo)$/;"	f	file:
delay_setup	x_time.c	/^static void delay_setup(void)$/;"	f	file:
delay_stop	x_time.c	/^static void delay_stop(t_delay *x)$/;"	f	file:
delay_tempo	x_time.c	/^static void delay_tempo(t_delay *x, t_symbol *unitname, t_floatarg tempo)$/;"	f	file:
delay_tick	x_time.c	/^static void delay_tick(t_delay *x)$/;"	f	file:
delread_zero	d_delay.c	/^static int delread_zero = 0;    \/* four bytes of zero for delread~, vd~ *\/$/;"	v	file:
delwritectl	d_delay.c	/^typedef struct delwritectl$/;"	s	file:
dfct	d_fft_fftsg.c	/^void dfct(int n, double *a, double *t, int *ip, double *w)$/;"	f
dfct	d_fftsg_h.c	/^void dfct(int n, double *a)$/;"	f
dfst	d_fft_fftsg.c	/^void dfst(int n, double *a, double *t, int *ip, double *w)$/;"	f
dfst	d_fftsg_h.c	/^void dfst(int n, double *a)$/;"	f
direction	d_fftroutine.c	/^        int             direction;$/;"	m	struct:Tfft_net	file:
do_open_via_path	s_path.c	/^static int do_open_via_path(const char *dir, const char *name,$/;"	f	file:
doconnect	u_pdreceive.c	/^static void doconnect(void)$/;"	f	file:
doerror	s_print.c	/^static void doerror(const void *object, const char *s)$/;"	f	file:
dogensym	m_class.c	/^t_symbol *dogensym(const char *s, t_symbol *oldsym)$/;"	f
dologpost	s_print.c	/^static void dologpost(const void *object, const int level, const char *s)$/;"	f	file:
dopoll	u_pdreceive.c	/^static void dopoll(void)$/;"	f	file:
dopost	s_print.c	/^static void dopost(const char *s)$/;"	f	file:
downsample	m_pd.h	/^  int downsample; \/* downsampling factor *\/$/;"	m	struct:_resample
downsampling_perform_0	d_resample.c	/^t_int *downsampling_perform_0(t_int *w)$/;"	f
drawnumber_activate	g_template.c	/^static void drawnumber_activate(t_gobj *z, t_glist *glist,$/;"	f	file:
drawnumber_class	g_template.c	/^t_class *drawnumber_class;$/;"	v
drawnumber_click	g_template.c	/^static int drawnumber_click(t_gobj *z, t_glist *glist, $/;"	f	file:
drawnumber_displace	g_template.c	/^static void drawnumber_displace(t_gobj *z, t_glist *glist,$/;"	f	file:
drawnumber_float	g_template.c	/^void drawnumber_float(t_drawnumber *x, t_floatarg f)$/;"	f
drawnumber_free	g_template.c	/^static void drawnumber_free(t_drawnumber *x)$/;"	f	file:
drawnumber_getbuf	g_template.c	/^static void drawnumber_getbuf(t_drawnumber *x, t_word *data,$/;"	f	file:
drawnumber_getrect	g_template.c	/^static void drawnumber_getrect(t_gobj *z, t_glist *glist,$/;"	f	file:
drawnumber_gettype	g_template.c	/^static int drawnumber_gettype(t_drawnumber *x, t_word *data,$/;"	f	file:
drawnumber_key	g_template.c	/^static void drawnumber_key(void *z, t_floatarg fkey)$/;"	f	file:
drawnumber_motion	g_template.c	/^static void drawnumber_motion(void *z, t_floatarg dx, t_floatarg dy)$/;"	f	file:
drawnumber_motion_array	g_template.c	/^static t_array *drawnumber_motion_array;$/;"	v	file:
drawnumber_motion_firstkey	g_template.c	/^static int drawnumber_motion_firstkey;$/;"	v	file:
drawnumber_motion_glist	g_template.c	/^static t_glist *drawnumber_motion_glist;$/;"	v	file:
drawnumber_motion_gpointer	g_template.c	/^static t_gpointer drawnumber_motion_gpointer;$/;"	v	file:
drawnumber_motion_scalar	g_template.c	/^static t_scalar *drawnumber_motion_scalar;$/;"	v	file:
drawnumber_motion_template	g_template.c	/^static t_template *drawnumber_motion_template;$/;"	v	file:
drawnumber_motion_type	g_template.c	/^static int drawnumber_motion_type;$/;"	v	file:
drawnumber_motion_wp	g_template.c	/^static t_word *drawnumber_motion_wp;$/;"	v	file:
drawnumber_motion_ycumulative	g_template.c	/^static t_float drawnumber_motion_ycumulative;$/;"	v	file:
drawnumber_new	g_template.c	/^static void *drawnumber_new(t_symbol *classsym, int argc, t_atom *argv)$/;"	f	file:
drawnumber_select	g_template.c	/^static void drawnumber_select(t_gobj *z, t_glist *glist,$/;"	f	file:
drawnumber_setup	g_template.c	/^static void drawnumber_setup(void)$/;"	f	file:
drawnumber_vis	g_template.c	/^static void drawnumber_vis(t_gobj *z, t_glist *glist, $/;"	f	file:
drawnumber_widgetbehavior	g_template.c	/^t_parentwidgetbehavior drawnumber_widgetbehavior =$/;"	v
ds_arraytemplate	g_canvas.h	/^    t_symbol *ds_arraytemplate;     \/* filled in for arrays only *\/$/;"	m	struct:_dataslot
ds_name	g_canvas.h	/^    t_symbol *ds_name;$/;"	m	struct:_dataslot
ds_type	g_canvas.h	/^    int ds_type;$/;"	m	struct:_dataslot
dsp_add	d_ugen.c	/^void dsp_add(t_perfroutine f, int n, ...)$/;"	f
dsp_add_copy	d_dac.c	/^void dsp_add_copy(t_sample *in, t_sample *out, int n)$/;"	f
dsp_add_plus	d_arithmetic.c	/^void dsp_add_plus(t_sample *in1, t_sample *in2, t_sample *out, int n)$/;"	f
dsp_add_scalarcopy	d_ctl.c	/^void dsp_add_scalarcopy(t_float *in, t_sample *out, int n)$/;"	f
dsp_add_zero	d_ugen.c	/^void dsp_add_zero(t_sample *out, int n)$/;"	f
dsp_addv	d_ugen.c	/^void dsp_addv(t_perfroutine f, int n, t_int *vec)$/;"	f
dsp_done	d_ugen.c	/^static t_int dsp_done(t_int *w)$/;"	f	file:
dsp_phase	d_ugen.c	/^static int dsp_phase;$/;"	v	file:
dsp_tick	d_ugen.c	/^void dsp_tick(void)$/;"	f
dstsub	d_fft_fftsg.c	/^void dstsub(int n, double *a, int nc, double *c)$/;"	f
dstsub	d_fftsg_h.c	/^void dstsub(int n, double *a)$/;"	f
dstsub4	d_fftsg_h.c	/^void dstsub4(int n, double *a)$/;"	f
dummy	g_all_guis.h	/^    unsigned int dummy:1;$/;"	m	struct:_iem_fstyle_flags
dummy	g_all_guis.h	/^    unsigned int dummy:3;$/;"	m	struct:_iem_init_symargs
dummy_close_audio	s_audio_dummy.c	/^int dummy_close_audio() {$/;"	f
dummy_getdevs	s_audio_dummy.c	/^void dummy_getdevs(char *indevlist, int *nindevs, char *outdevlist,$/;"	f
dummy_listdevs	s_audio_dummy.c	/^void dummy_listdevs() {$/;"	f
dummy_open_audio	s_audio_dummy.c	/^int dummy_open_audio(int nin, int nout, int sr) {$/;"	f
dummy_send_dacs	s_audio_dummy.c	/^int dummy_send_dacs() {$/;"	f
dwCount	s_midi_mmio.c	/^    DWORD   dwCount;        \/* byte count (in EVENTS) *\/$/;"	m	struct:circularBuffer_tag	file:
dwDevice	s_midi_mmio.c	/^    DWORD               dwDevice;$/;"	m	struct:callbackInstance_tag	file:
dwDevice	s_midi_mmio.c	/^    DWORD dwDevice;$/;"	m	struct:evemsw_tag	file:
dwSize	s_midi_mmio.c	/^    DWORD   dwSize;         \/* buffer size (in EVENTS) *\/$/;"	m	struct:circularBuffer_tag	file:
dword	d_soundfile.c	/^typedef unsigned long dword;$/;"	t	file:
e_clock	g_canvas.h	/^    t_clock *e_clock;               \/* clock to filter GUI move messages *\/$/;"	m	struct:_editor
e_connectbuf	g_canvas.h	/^    t_binbuf *e_connectbuf;         \/* connections to deleted objects *\/$/;"	m	struct:_editor
e_deleted	g_canvas.h	/^    t_binbuf *e_deleted;            \/* last stuff we deleted *\/$/;"	m	struct:_editor
e_glist	g_canvas.h	/^    struct _glist *e_glist;         \/* glist which owns this *\/$/;"	m	struct:_editor	typeref:struct:_editor::_glist
e_grab	g_canvas.h	/^    t_gobj *e_grab;                 \/* object being "dragged" *\/$/;"	m	struct:_editor
e_guiconnect	g_canvas.h	/^    t_guiconnect *e_guiconnect;     \/* GUI connection for filtering messages *\/$/;"	m	struct:_editor
e_index	g_editor.c	/^    int e_index;$/;"	m	struct:_undo_move_elem	file:
e_keyfn	g_canvas.h	/^    t_glistkeyfn e_keyfn;           \/* ... keypress callback *\/$/;"	m	struct:_editor
e_lastmoved	g_canvas.h	/^    unsigned int e_lastmoved: 1;    \/* one if mouse has moved since click *\/$/;"	m	struct:_editor
e_motionfn	g_canvas.h	/^    t_glistmotionfn e_motionfn;     \/* ... motion callback *\/$/;"	m	struct:_editor
e_next	m_pd.c	/^    struct _bindelem *e_next;$/;"	m	struct:_bindelem	typeref:struct:_bindelem::_bindelem	file:
e_next	x_midi.c	/^    struct _bagelem *e_next;$/;"	m	struct:_bagelem	typeref:struct:_bagelem::_bagelem	file:
e_onmotion	g_canvas.h	/^    unsigned int e_onmotion: 3;     \/* action to take on motion *\/$/;"	m	struct:_editor
e_outlet	x_connective.c	/^    t_outlet *e_outlet;$/;"	m	struct:_routeelement	file:
e_outlet	x_connective.c	/^    t_outlet *e_outlet;$/;"	m	struct:_selectelement	file:
e_rtext	g_canvas.h	/^    t_rtext *e_rtext;               \/* text responder linked list *\/$/;"	m	struct:_editor
e_selectedline	g_canvas.h	/^    unsigned int e_selectedline: 1; \/* one if a line is selected *\/$/;"	m	struct:_editor
e_selection	g_canvas.h	/^    t_selection *e_selection;       \/* head of the selection list *\/$/;"	m	struct:_editor
e_selectline_index1	g_canvas.h	/^    int e_selectline_index1;        \/* indices for the selected line if any *\/$/;"	m	struct:_editor
e_selectline_index2	g_canvas.h	/^    int e_selectline_index2;$/;"	m	struct:_editor
e_selectline_inno	g_canvas.h	/^    int e_selectline_inno;$/;"	m	struct:_editor
e_selectline_outno	g_canvas.h	/^    int e_selectline_outno;         \/* (only valid if e_selectedline is set) *\/$/;"	m	struct:_editor
e_selectline_tag	g_canvas.h	/^    t_outconnect *e_selectline_tag;$/;"	m	struct:_editor
e_textdirty	g_canvas.h	/^    unsigned int e_textdirty: 1;    \/* one if e_textedfor has changed *\/$/;"	m	struct:_editor
e_textedfor	g_canvas.h	/^    t_rtext *e_textedfor;           \/* the rtext if any that we are editing *\/$/;"	m	struct:_editor
e_upd	g_canvas.h	/^    t_updateheader e_upd;           \/* update header structure *\/$/;"	m	struct:_editor
e_updlist	g_canvas.h	/^    t_selection *e_updlist;         \/* list of objects to update *\/$/;"	m	struct:_editor
e_value	x_midi.c	/^    t_float e_value;$/;"	m	struct:_bagelem	file:
e_w	x_connective.c	/^    t_word e_w;$/;"	m	struct:_routeelement	file:
e_w	x_connective.c	/^    t_word e_w;$/;"	m	struct:_selectelement	file:
e_who	m_pd.c	/^    t_pd *e_who;$/;"	m	struct:_bindelem	file:
e_xnew	g_canvas.h	/^    int e_xnew;                     \/* xpos for next move event *\/$/;"	m	struct:_editor
e_xpix	g_editor.c	/^    int e_xpix;$/;"	m	struct:_undo_move_elem	file:
e_xwas	g_canvas.h	/^    int e_xwas;                     \/* xpos on last mousedown or motion event *\/$/;"	m	struct:_editor
e_ynew	g_canvas.h	/^    int e_ynew;                     \/* ypos, similarly *\/$/;"	m	struct:_editor
e_ypix	g_editor.c	/^    int e_ypix;$/;"	m	struct:_undo_move_elem	file:
e_ywas	g_canvas.h	/^    int e_ywas;                     \/* ypos, similarly *\/$/;"	m	struct:_editor
editor_free	g_editor.c	/^static void editor_free(t_editor *x, t_glist *y)$/;"	f	file:
editor_new	g_editor.c	/^static t_editor *editor_new(t_glist *owner)$/;"	f	file:
elem_class	g_traversal.c	/^static t_class *elem_class;$/;"	v	file:
elem_float	g_traversal.c	/^static void elem_float(t_elem *x, t_float f)$/;"	f	file:
elem_free	g_traversal.c	/^static void elem_free(t_elem *x, t_gpointer *gp)$/;"	f	file:
elem_new	g_traversal.c	/^static void *elem_new(t_symbol *templatesym, t_symbol *fieldsym)$/;"	f	file:
elem_setup	g_traversal.c	/^static void elem_setup(void)$/;"	f	file:
endpost	s_print.c	/^void endpost(void)$/;"	f
env_tilde_class	d_ctl.c	/^t_class *env_tilde_class;$/;"	v
env_tilde_dsp	d_ctl.c	/^static void env_tilde_dsp(t_sigenv *x, t_signal **sp)$/;"	f	file:
env_tilde_ff	d_ctl.c	/^static void env_tilde_ff(t_sigenv *x)           \/* cleanup on free *\/$/;"	f	file:
env_tilde_new	d_ctl.c	/^static void *env_tilde_new(t_floatarg fnpoints, t_floatarg fperiod)$/;"	f	file:
env_tilde_perform	d_ctl.c	/^static t_int *env_tilde_perform(t_int *w)$/;"	f	file:
env_tilde_setup	d_ctl.c	/^void env_tilde_setup(void )$/;"	f
env_tilde_tick	d_ctl.c	/^static void env_tilde_tick(t_sigenv *x) \/* callback function for the clock *\/$/;"	f	file:
errobject	s_print.c	/^static const char *errobject;$/;"	v	file:
error	s_print.c	/^void error(const char *fmt, ...)$/;"	f
error_object	s_print.c	/^static void *error_object;$/;"	v	file:
error_string	s_print.c	/^static char error_string[256];$/;"	v	file:
errstring	s_print.c	/^static const char *errstring;$/;"	v	file:
esd_channels_in	s_audio_esd.c	/^static int esd_channels_in;$/;"	v	file:
esd_channels_out	s_audio_esd.c	/^static int esd_channels_out;$/;"	v	file:
esd_close_audio	s_audio_esd.c	/^void esd_close_audio( void)$/;"	f
esd_getdevs	s_audio_esd.c	/^void esd_getdevs(char *indevlist, int *nindevs,$/;"	f
esd_listdevs	s_audio_esd.c	/^void esd_listdevs( void)$/;"	f
esd_open_audio	s_audio_esd.c	/^int esd_open_audio(int nindev,  int *indev,  int nchin,  int *chin,$/;"	f
esd_send_dacs	s_audio_esd.c	/^int esd_send_dacs(void)$/;"	f
esd_socket_in	s_audio_esd.c	/^static int esd_socket_in;$/;"	v	file:
esd_socket_out	s_audio_esd.c	/^static int esd_socket_out;$/;"	v	file:
evemsw_tag	s_midi_mmio.c	/^typedef struct evemsw_tag$/;"	s	file:
exp_class	x_arithmetic.c	/^static t_class *exp_class;      \/* ----------- exp --------------- *\/$/;"	v	file:
exp_float	x_arithmetic.c	/^static void exp_float(t_object *x, t_float f)$/;"	f	file:
exp_new	x_arithmetic.c	/^static void *exp_new(void)$/;"	f	file:
exp_tilde_class	d_math.c	/^static t_class *exp_tilde_class;$/;"	v	file:
exp_tilde_dsp	d_math.c	/^static void exp_tilde_dsp(t_exp_tilde *x, t_signal **sp)$/;"	f	file:
exp_tilde_new	d_math.c	/^static void *exp_tilde_new(t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
exp_tilde_perform	d_math.c	/^t_int *exp_tilde_perform(t_int *w)$/;"	f
exp_tilde_setup	d_math.c	/^static void exp_tilde_setup(void)$/;"	f	file:
f	d_soundfile.c	/^  t_sample f;$/;"	m	union:_samplelong	file:
f	m_pd.h	/^  t_sample f;$/;"	m	union:_sampleint_union
f_fmttag	d_soundfile.c	/^    uint16_t f_fmttag;              \/* format tag, 1 for PCM      *\/$/;"	m	struct:_fmt	file:
f_navgbytespersec	d_soundfile.c	/^    uint32_t f_navgbytespersec;     \/* average bytes per second   *\/$/;"	m	struct:_fmt	file:
f_nbitspersample	d_soundfile.c	/^    uint16_t f_nbitspersample;      \/* number of bits in a sample *\/$/;"	m	struct:_fmt	file:
f_nblockalign	d_soundfile.c	/^    uint16_t f_nblockalign;         \/* number of bytes per frame  *\/$/;"	m	struct:_fmt	file:
f_nchannels	d_soundfile.c	/^    uint16_t f_nchannels;           \/* number of channels         *\/$/;"	m	struct:_fmt	file:
f_samplespersec	d_soundfile.c	/^    uint32_t f_samplespersec;       \/* sample rate in hz          *\/$/;"	m	struct:_fmt	file:
fd	s_audio_oss.c	/^     int fd;$/;"	m	struct:_multidev	file:
fd_float	g_template.c	/^        t_float fd_float;       \/* the field is a constant float *\/$/;"	m	union:_fielddesc::__anon3	file:
fd_quantum	g_template.c	/^    float fd_quantum;   \/* quantization in value *\/ $/;"	m	struct:_fielddesc	file:
fd_screen1	g_template.c	/^    float fd_screen1;   \/* min and max screen values *\/$/;"	m	struct:_fielddesc	file:
fd_screen2	g_template.c	/^    float fd_screen2;$/;"	m	struct:_fielddesc	file:
fd_symbol	g_template.c	/^        t_symbol *fd_symbol;    \/* the field is a constant symbol *\/$/;"	m	union:_fielddesc::__anon3	file:
fd_type	g_template.c	/^    char fd_type;       \/* LATER consider removing this? *\/$/;"	m	struct:_fielddesc	file:
fd_un	g_template.c	/^    } fd_un;$/;"	m	struct:_fielddesc	typeref:union:_fielddesc::__anon3	file:
fd_v1	g_template.c	/^    float fd_v1;        \/* min and max values *\/$/;"	m	struct:_fielddesc	file:
fd_v2	g_template.c	/^    float fd_v2;$/;"	m	struct:_fielddesc	file:
fd_var	g_template.c	/^    char fd_var;$/;"	m	struct:_fielddesc	file:
fd_varsym	g_template.c	/^        t_symbol *fd_varsym;    \/* the field is variable and this is the name *\/$/;"	m	union:_fielddesc::__anon3	file:
fdp_discard	u_pdreceive.c	/^    int fdp_discard;\/*buffer overflow: output message is incomplete, discard it*\/$/;"	m	struct:_fdpoll	file:
fdp_fd	s_inter.c	/^    int fdp_fd;$/;"	m	struct:_fdpoll	file:
fdp_fd	u_pdreceive.c	/^    int fdp_fd;$/;"	m	struct:_fdpoll	file:
fdp_fn	s_inter.c	/^    t_fdpollfn fdp_fn;$/;"	m	struct:_fdpoll	file:
fdp_gotsemi	u_pdreceive.c	/^    int fdp_gotsemi;\/*last char from input was a semicolon*\/$/;"	m	struct:_fdpoll	file:
fdp_outbuf	u_pdreceive.c	/^    char *fdp_outbuf;\/*output message buffer*\/ $/;"	m	struct:_fdpoll	file:
fdp_outlen	u_pdreceive.c	/^    int fdp_outlen;     \/*length of output message*\/$/;"	m	struct:_fdpoll	file:
fdp_ptr	s_inter.c	/^    void *fdp_ptr;$/;"	m	struct:_fdpoll	file:
fdpoll	u_pdreceive.c	/^static t_fdpoll *fdpoll;$/;"	v	file:
fdwEvent	s_midi_mmio.c	/^    DWORD fdwEvent;$/;"	m	struct:evemsw_tag	file:
fft	d_fft.c	/^typedef struct fft$/;"	s	file:
fft_clear	d_fftroutine.c	/^void fft_clear(void)$/;"	f
fi_fontsize	s_main.c	/^    int fi_fontsize;$/;"	m	struct:_fontinfo	file:
fi_height	s_main.c	/^    int fi_height;$/;"	m	struct:_fontinfo	file:
fi_hostfontsize	s_main.c	/^    int fi_hostfontsize;$/;"	m	struct:_fontinfo	file:
fi_maxheight	s_main.c	/^    int fi_maxheight;$/;"	m	struct:_fontinfo	file:
fi_maxwidth	s_main.c	/^    int fi_maxwidth;$/;"	m	struct:_fontinfo	file:
fi_width	s_main.c	/^    int fi_width;$/;"	m	struct:_fontinfo	file:
fielddesc_cvtfromcoord	g_template.c	/^t_float fielddesc_cvtfromcoord(t_fielddesc *f, t_float coord)$/;"	f
fielddesc_cvttocoord	g_template.c	/^t_float fielddesc_cvttocoord(t_fielddesc *f, t_float val)$/;"	f
fielddesc_getcoord	g_template.c	/^t_float fielddesc_getcoord(t_fielddesc *f, t_template *template,$/;"	f
fielddesc_getfloat	g_template.c	/^static t_float fielddesc_getfloat(t_fielddesc *f, t_template *template,$/;"	f	file:
fielddesc_getsymbol	g_template.c	/^static t_symbol *fielddesc_getsymbol(t_fielddesc *f, t_template *template,$/;"	f	file:
fielddesc_setarrayarg	g_template.c	/^static void fielddesc_setarrayarg(t_fielddesc *fd, int argc, t_atom *argv)$/;"	f	file:
fielddesc_setcoord	g_template.c	/^void fielddesc_setcoord(t_fielddesc *f, t_template *template,$/;"	f
fielddesc_setfloat_const	g_template.c	/^static void fielddesc_setfloat_const(t_fielddesc *fd, t_float f)$/;"	f	file:
fielddesc_setfloat_var	g_template.c	/^static void fielddesc_setfloat_var(t_fielddesc *fd, t_symbol *s)$/;"	f	file:
fielddesc_setfloatarg	g_template.c	/^static void fielddesc_setfloatarg(t_fielddesc *fd, int argc, t_atom *argv)$/;"	f	file:
fielddesc_setsymbol_const	g_template.c	/^static void fielddesc_setsymbol_const(t_fielddesc *fd, t_symbol *s)$/;"	f	file:
fielddesc_setsymbolarg	g_template.c	/^static void fielddesc_setsymbolarg(t_fielddesc *fd, int argc, t_atom *argv)$/;"	f	file:
firstnet	d_fftroutine.c	/^static FFT_NET  *firstnet;$/;"	v	file:
firstone	g_rtext.c	/^static int firstone(char *s, int c, int n)$/;"	f	file:
floatinlet_class	m_obj.c	/^static t_class *inlet_class, *pointerinlet_class, *floatinlet_class,$/;"	v	file:
floatinlet_float	m_obj.c	/^static void floatinlet_float(t_inlet *x, t_float f)$/;"	f	file:
floatinlet_new	m_obj.c	/^t_inlet *floatinlet_new(t_object *owner, t_float *fp)$/;"	f
format	s_audio_oss.c	/^     int format;$/;"	m	struct:_multidev	file:
framp	d_fft.c	/^typedef struct framp$/;"	s	file:
freebytes	m_memory.c	/^void freebytes(void *fatso, size_t nbytes)$/;"	f
fstat	s_path.c	46;"	d	file:
ftom	x_acoustics.c	/^t_float ftom(t_float f)$/;"	f
ftom_class	x_acoustics.c	/^static t_class *ftom_class;$/;"	v	file:
ftom_float	x_acoustics.c	/^static void ftom_float(t_object *x, t_float f)$/;"	f	file:
ftom_new	x_acoustics.c	/^static void *ftom_new(void)$/;"	f	file:
ftom_tilde	d_math.c	/^typedef struct ftom_tilde$/;"	s	file:
ftom_tilde_class	d_math.c	/^t_class *ftom_tilde_class;$/;"	v
ftom_tilde_dsp	d_math.c	/^static void ftom_tilde_dsp(t_ftom_tilde *x, t_signal **sp)$/;"	f	file:
ftom_tilde_new	d_math.c	/^static void *ftom_tilde_new(void)$/;"	f	file:
ftom_tilde_perform	d_math.c	/^static t_int *ftom_tilde_perform(t_int *w)$/;"	f	file:
ftom_tilde_setup	d_math.c	/^void ftom_tilde_setup(void)$/;"	f
g_array_setup	g_array.c	/^void g_array_setup(void)$/;"	f
g_bang_setup	g_bang.c	/^void g_bang_setup(void)$/;"	f
g_canvas_setup	g_canvas.c	/^void g_canvas_setup(void)$/;"	f
g_editor_setup	g_editor.c	/^void g_editor_setup(void)$/;"	f
g_graph_setup	g_graph.c	/^void g_graph_setup( void)$/;"	f
g_graph_setup_class	g_graph.c	/^void g_graph_setup_class(t_class *c)$/;"	f
g_guiconnect_setup	g_guiconnect.c	/^void g_guiconnect_setup(void)$/;"	f
g_hradio_setup	g_hdial.c	/^void g_hradio_setup(void)$/;"	f
g_hslider_setup	g_hslider.c	/^void g_hslider_setup(void)$/;"	f
g_io_setup	g_io.c	/^void g_io_setup(void)$/;"	f
g_loadingabstraction	m_pd.c	/^    t_symbol *g_loadingabstraction;$/;"	m	struct:_gstack	file:
g_mycanvas_setup	g_mycanvas.c	/^void g_mycanvas_setup(void)$/;"	f
g_next	m_pd.c	/^    struct _gstack *g_next;$/;"	m	struct:_gstack	typeref:struct:_gstack::_gstack	file:
g_next	m_pd.h	/^    struct _gobj *g_next;   \/* next in list *\/$/;"	m	struct:_gobj	typeref:struct:_gobj::_gobj
g_numbox_setup	g_numbox.c	/^void g_numbox_setup(void)$/;"	f
g_pd	m_pd.h	/^    t_pd g_pd;              \/* pure datum header (class) *\/$/;"	m	struct:_gobj
g_readwrite_setup	g_readwrite.c	/^void g_readwrite_setup(void)$/;"	f
g_scalar_setup	g_scalar.c	/^void g_scalar_setup(void)$/;"	f
g_template_setup	g_template.c	/^void g_template_setup(void)$/;"	f
g_text_setup	g_text.c	/^void g_text_setup(void)$/;"	f
g_toggle_setup	g_toggle.c	/^void g_toggle_setup(void)$/;"	f
g_traversal_setup	g_traversal.c	/^void g_traversal_setup(void)$/;"	f
g_vradio_setup	g_vdial.c	/^void g_vradio_setup(void)$/;"	f
g_vslider_setup	g_vslider.c	/^void g_vslider_setup(void)$/;"	f
g_vumeter_setup	g_vumeter.c	/^void g_vumeter_setup(void)$/;"	f
g_what	m_pd.c	/^    t_pd *g_what;$/;"	m	struct:_gstack	file:
garray_activate	g_array.c	/^static void garray_activate(t_gobj *z, t_glist *glist, int state)$/;"	f	file:
garray_ambigendian	g_array.c	/^int garray_ambigendian(void)$/;"	f
garray_arraydialog	g_array.c	/^void garray_arraydialog(t_garray *x, t_symbol *name, t_floatarg fsize,$/;"	f
garray_arraytemplatecanvas	g_array.c	/^static t_pd *garray_arraytemplatecanvas;$/;"	v	file:
garray_arraytemplatefile	g_array.c	/^static char garray_arraytemplatefile[] = "\\$/;"	v	file:
garray_arrayviewlist_close	g_array.c	/^void garray_arrayviewlist_close(t_garray *x)$/;"	f
garray_arrayviewlist_fillpage	g_array.c	/^void garray_arrayviewlist_fillpage(t_garray *x,$/;"	f
garray_arrayviewlist_new	g_array.c	/^void garray_arrayviewlist_new(t_garray *x)$/;"	f
garray_bounds	g_array.c	/^static void garray_bounds(t_garray *x, t_floatarg x1, t_floatarg y1,$/;"	f	file:
garray_class	g_array.c	/^t_class *garray_class;$/;"	v
garray_class	m_pd.h	/^EXTERN t_class *garray_class;$/;"	v
garray_click	g_array.c	/^static int garray_click(t_gobj *z, t_glist *glist,$/;"	f	file:
garray_const	g_array.c	/^static void garray_const(t_garray *x, t_floatarg g)$/;"	f	file:
garray_cosinesum	g_array.c	/^static void garray_cosinesum(t_garray *x, t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
garray_delete	g_array.c	/^static void garray_delete(t_gobj *z, t_glist *glist)$/;"	f	file:
garray_displace	g_array.c	/^static void garray_displace(t_gobj *z, t_glist *glist, int dx, int dy)$/;"	f	file:
garray_dofo	g_array.c	/^static void garray_dofo(t_garray *x, long npoints, t_float dcval,$/;"	f	file:
garray_doredraw	g_array.c	/^static void garray_doredraw(t_gobj *client, t_glist *glist)$/;"	f	file:
garray_fittograph	g_array.c	/^static void garray_fittograph(t_garray *x, int n, int style)$/;"	f	file:
garray_floattemplatefile	g_array.c	/^static char garray_floattemplatefile[] = "\\$/;"	v	file:
garray_free	g_array.c	/^static void garray_free(t_garray *x)$/;"	f	file:
garray_getarray	g_array.c	/^t_array *garray_getarray(t_garray *x)$/;"	f
garray_getarray_floatonly	g_array.c	/^static t_array *garray_getarray_floatonly(t_garray *x,$/;"	f	file:
garray_getfloatarray	g_array.c	/^int garray_getfloatarray(t_garray *x, int *size, t_float **vec)$/;"	f
garray_getfloatwords	g_array.c	/^int garray_getfloatwords(t_garray *x, int *size, t_word **vec)$/;"	f
garray_getglist	g_array.c	/^t_glist *garray_getglist(t_garray *x)$/;"	f
garray_getname	g_array.c	/^int garray_getname(t_garray *x, t_symbol **namep)$/;"	f
garray_getrect	g_array.c	/^static void garray_getrect(t_gobj *z, t_glist *glist,$/;"	f	file:
garray_getscalar	g_array.c	/^t_scalar *garray_getscalar(t_garray *x)$/;"	f
garray_init	g_array.c	/^void garray_init( void)$/;"	f
garray_list	g_array.c	/^static void garray_list(t_garray *x, t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
garray_normalize	g_array.c	/^static void garray_normalize(t_garray *x, t_float f)$/;"	f	file:
garray_npoints	g_array.c	/^int garray_npoints(t_garray *x) \/* get the length *\/$/;"	f
garray_print	g_array.c	/^static void garray_print(t_garray *x)$/;"	f	file:
garray_properties	g_array.c	/^void garray_properties(t_garray *x)$/;"	f
garray_read	g_array.c	/^static void garray_read(t_garray *x, t_symbol *filename)$/;"	f	file:
garray_redraw	g_array.c	/^void garray_redraw(t_garray *x)$/;"	f
garray_rename	g_array.c	/^static void garray_rename(t_garray *x, t_symbol *s)$/;"	f	file:
garray_resize	g_array.c	/^void garray_resize(t_garray *x, t_floatarg f)$/;"	f
garray_resize_long	g_array.c	/^void garray_resize_long(t_garray *x, long n)$/;"	f
garray_save	g_array.c	/^static void garray_save(t_gobj *z, t_binbuf *b)$/;"	f	file:
garray_savecontentsto	g_array.c	/^void garray_savecontentsto(t_garray *x, t_binbuf *b)$/;"	f
garray_select	g_array.c	/^static void garray_select(t_gobj *z, t_glist *glist, int state)$/;"	f	file:
garray_setsaveit	g_array.c	/^void garray_setsaveit(t_garray *x, int saveit)$/;"	f
garray_sinesum	g_array.c	/^static void garray_sinesum(t_garray *x, t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
garray_template	g_array.c	/^t_template *garray_template(t_garray *x)$/;"	f
garray_usedindsp	g_array.c	/^void garray_usedindsp(t_garray *x)$/;"	f
garray_vec	g_array.c	/^char *garray_vec(t_garray *x) \/* get the contents *\/$/;"	f
garray_vis	g_array.c	/^static void garray_vis(t_gobj *z, t_glist *glist, int vis)$/;"	f	file:
garray_widgetbehavior	g_array.c	/^t_widgetbehavior garray_widgetbehavior =$/;"	v
garray_write	g_array.c	/^static void garray_write(t_garray *x, t_symbol *filename)$/;"	f	file:
garray_xlabel	g_array.c	/^static void garray_xlabel(t_garray *x, t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
garray_xticks	g_array.c	/^static void garray_xticks(t_garray *x,$/;"	f	file:
garray_ylabel	g_array.c	/^static void garray_ylabel(t_garray *x, t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
garray_yticks	g_array.c	/^static void garray_yticks(t_garray *x,$/;"	f	file:
gatom_bang	g_text.c	/^static void gatom_bang(t_gatom *x)$/;"	f	file:
gatom_class	g_text.c	/^static t_class *gatom_class;$/;"	v	file:
gatom_click	g_text.c	/^static void gatom_click(t_gatom *x,$/;"	f	file:
gatom_clipfloat	g_text.c	/^static void gatom_clipfloat(t_gatom *x, t_float f)$/;"	f	file:
gatom_displace	g_text.c	/^static void gatom_displace(t_gobj *z, t_glist *glist,$/;"	f	file:
gatom_escapit	g_text.c	/^static t_symbol *gatom_escapit(t_symbol *s)$/;"	f	file:
gatom_float	g_text.c	/^static void gatom_float(t_gatom *x, t_float f)$/;"	f	file:
gatom_free	g_text.c	/^static void gatom_free(t_gatom *x)$/;"	f	file:
gatom_getwherelabel	g_text.c	/^static void gatom_getwherelabel(t_gatom *x, t_glist *glist, int *xp, int *yp)$/;"	f	file:
gatom_key	g_text.c	/^static void gatom_key(void *z, t_floatarg f)$/;"	f	file:
gatom_list	g_text.c	/^static void gatom_list(t_gatom *x, t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
gatom_motion	g_text.c	/^static void gatom_motion(void *z, t_floatarg dx, t_floatarg dy)$/;"	f	file:
gatom_param	g_text.c	/^static void gatom_param(t_gatom *x, t_symbol *sel, int argc, t_atom *argv)$/;"	f	file:
gatom_properties	g_text.c	/^static void gatom_properties(t_gobj *z, t_glist *owner)$/;"	f	file:
gatom_redraw	g_text.c	/^static void gatom_redraw(t_gobj *client, t_glist *glist)$/;"	f	file:
gatom_retext	g_text.c	/^static void gatom_retext(t_gatom *x, int senditup)$/;"	f	file:
gatom_set	g_text.c	/^static void gatom_set(t_gatom *x, t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
gatom_symbol	g_text.c	/^static void gatom_symbol(t_gatom *x, t_symbol *s)$/;"	f	file:
gatom_unescapit	g_text.c	/^static t_symbol *gatom_unescapit(t_symbol *s)$/;"	f	file:
gatom_vis	g_text.c	/^static void gatom_vis(t_gobj *z, t_glist *glist, int vis)$/;"	f	file:
gatom_widgetbehavior	g_text.c	/^static t_widgetbehavior gatom_widgetbehavior =$/;"	v	file:
gensym	m_class.c	/^t_symbol *gensym(const char *s)$/;"	f
get_class	g_traversal.c	/^static t_class *get_class;$/;"	v	file:
get_free	g_traversal.c	/^static void get_free(t_get *x)$/;"	f	file:
get_new	g_traversal.c	/^static void *get_new(t_symbol *why, int argc, t_atom *argv)$/;"	f	file:
get_pointer	g_traversal.c	/^static void get_pointer(t_get *x, t_gpointer *gp)$/;"	f	file:
get_setup	g_traversal.c	/^static void get_setup(void)$/;"	f	file:
get_sys_dacsr	s_main.c	/^t_float* get_sys_dacsr() { return &sys_dacsr; }$/;"	f
get_sys_main_advance	s_main.c	/^int* get_sys_main_advance() { return &sys_main_advance; }$/;"	f
get_sys_schedadvance	s_main.c	/^int* get_sys_schedadvance() { return &sys_schedadvance; }$/;"	f
get_sys_schedblocksize	s_main.c	/^int* get_sys_schedblocksize() { return &sys_schedblocksize; }$/;"	f
get_sys_sleepgrain	s_main.c	/^int* get_sys_sleepgrain() { return &sys_sleepgrain; }$/;"	f
get_sys_soundin	s_main.c	/^t_sample* get_sys_soundin() { return sys_soundin; }$/;"	f
get_sys_soundout	s_main.c	/^t_sample* get_sys_soundout() { return sys_soundout; }$/;"	f
get_sys_time	s_main.c	/^double* get_sys_time() { return &pd_this->pd_systime; }$/;"	f
get_sys_time_per_dsp_tick	s_main.c	/^double* get_sys_time_per_dsp_tick() { return &sys_time_per_dsp_tick; }$/;"	f
getbytes	m_memory.c	/^void *getbytes(size_t nbytes)$/;"	f
getfn	m_class.c	/^t_gotfn getfn(t_pd *x, t_symbol *s)$/;"	f
getsize_class	g_traversal.c	/^static t_class *getsize_class;$/;"	v	file:
getsize_new	g_traversal.c	/^static void *getsize_new(t_symbol *templatesym, t_symbol *fieldsym)$/;"	f	file:
getsize_pointer	g_traversal.c	/^static void getsize_pointer(t_getsize *x, t_gpointer *gp)$/;"	f	file:
getsize_setup	g_traversal.c	/^static void getsize_setup(void)$/;"	f	file:
getzbytes	m_memory.c	/^void *getzbytes(size_t nbytes)  \/* obsolete name *\/$/;"	f
gfxstub_anything	x_gui.c	/^static void gfxstub_anything(t_gfxstub *x, t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
gfxstub_binbuf	x_gui.c	/^static t_binbuf *gfxstub_binbuf;$/;"	v	file:
gfxstub_cancel	x_gui.c	/^static void gfxstub_cancel(t_gfxstub *x)$/;"	f	file:
gfxstub_class	x_gui.c	/^static t_class *gfxstub_class;$/;"	v	file:
gfxstub_data	x_gui.c	/^static void gfxstub_data(t_gfxstub *x, t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
gfxstub_deleteforkey	x_gui.c	/^void gfxstub_deleteforkey(void *key)$/;"	f
gfxstub_end	x_gui.c	/^static void gfxstub_end(t_gfxstub *x)$/;"	f	file:
gfxstub_free	x_gui.c	/^static void gfxstub_free(t_gfxstub *x)$/;"	f	file:
gfxstub_list	x_gui.c	/^static t_gfxstub *gfxstub_list;$/;"	v	file:
gfxstub_new	x_gui.c	/^void gfxstub_new(t_pd *owner, void *key, const char *cmd)$/;"	f
gfxstub_offlist	x_gui.c	/^static void gfxstub_offlist(t_gfxstub *x)$/;"	f	file:
gfxstub_setup	x_gui.c	/^static void gfxstub_setup(void)$/;"	f	file:
gfxstub_signoff	x_gui.c	/^static void gfxstub_signoff(t_gfxstub *x)$/;"	f	file:
gl_dirty	g_canvas.h	/^    unsigned int gl_dirty:1;        \/* (root canvas only:) patch has changed *\/$/;"	m	struct:_glist
gl_edit	g_canvas.h	/^    unsigned int gl_edit:1;         \/* edit mode *\/$/;"	m	struct:_glist
gl_editor	g_canvas.h	/^    t_editor *gl_editor;        \/* editor structure when visible *\/$/;"	m	struct:_glist
gl_env	g_canvas.h	/^    t_canvasenvironment *gl_env;    \/* root canvases and abstractions only *\/$/;"	m	struct:_glist
gl_font	g_canvas.h	/^    int gl_font;                \/* nominal font size in points, e.g., 10 *\/$/;"	m	struct:_glist
gl_gobj	g_canvas.h	193;"	d
gl_goprect	g_canvas.h	/^    unsigned int gl_goprect:1;      \/* draw rectangle for graph-on-parent *\/$/;"	m	struct:_glist
gl_havewindow	g_canvas.h	/^    unsigned int gl_havewindow:1;   \/* true if we own a window *\/$/;"	m	struct:_glist
gl_hidetext	g_canvas.h	/^    unsigned int gl_hidetext:1;     \/* hide object-name + args when doing graph on parent *\/$/;"	m	struct:_glist
gl_isdeleting	g_canvas.h	/^    unsigned int gl_isdeleting:1;   \/* we're inside glist_delete -- hack! *\/$/;"	m	struct:_glist
gl_isgraph	g_canvas.h	/^    unsigned int gl_isgraph:1;      \/* show as graph on parent *\/$/;"	m	struct:_glist
gl_list	g_canvas.h	/^    t_gobj *gl_list;            \/* the actual data *\/$/;"	m	struct:_glist
gl_loading	g_canvas.h	/^    unsigned int gl_loading:1;      \/* am now loading from file *\/$/;"	m	struct:_glist
gl_mapped	g_canvas.h	/^    unsigned int gl_mapped:1;       \/* true if, moreover, it's "mapped" *\/$/;"	m	struct:_glist
gl_name	g_canvas.h	/^    t_symbol *gl_name;          \/* symbol bound here *\/$/;"	m	struct:_glist
gl_next	g_canvas.h	/^    struct _glist *gl_next;         \/* link in list of toplevels *\/$/;"	m	struct:_glist	typeref:struct:_glist::_glist
gl_nxlabels	g_canvas.h	/^    int gl_nxlabels;            \/* number of X coordinate labels *\/$/;"	m	struct:_glist
gl_nylabels	g_canvas.h	/^    int gl_nylabels;$/;"	m	struct:_glist
gl_obj	g_canvas.h	/^    t_object gl_obj;            \/* header in case we're a glist *\/$/;"	m	struct:_glist
gl_owner	g_canvas.h	/^    struct _glist *gl_owner;    \/* parent glist, supercanvas, or 0 if none *\/$/;"	m	struct:_glist	typeref:struct:_glist::_glist
gl_pd	g_canvas.h	194;"	d
gl_pixheight	g_canvas.h	/^    int gl_pixheight;$/;"	m	struct:_glist
gl_pixwidth	g_canvas.h	/^    int gl_pixwidth;            \/* width in pixels (on parent, if a graph) *\/$/;"	m	struct:_glist
gl_private	g_canvas.h	/^    unsigned int gl_private:1;      \/* private flag used in x_scalar.c *\/$/;"	m	struct:_glist
gl_screenx1	g_canvas.h	/^    int gl_screenx1;            \/* screen coordinates when toplevel *\/$/;"	m	struct:_glist
gl_screenx2	g_canvas.h	/^    int gl_screenx2;$/;"	m	struct:_glist
gl_screeny1	g_canvas.h	/^    int gl_screeny1;$/;"	m	struct:_glist
gl_screeny2	g_canvas.h	/^    int gl_screeny2;$/;"	m	struct:_glist
gl_stub	g_canvas.h	/^    struct _gstub *gl_stub;     \/* safe pointer handler *\/$/;"	m	struct:_glist	typeref:struct:_glist::_gstub
gl_valid	g_canvas.h	/^    int gl_valid;               \/* incremented when pointers might be stale *\/$/;"	m	struct:_glist
gl_willvis	g_canvas.h	/^    unsigned int gl_willvis:1;      \/* make me visible after loading *\/ $/;"	m	struct:_glist
gl_x1	g_canvas.h	/^    t_float gl_x1;                \/* bounding rectangle in our own coordinates *\/$/;"	m	struct:_glist
gl_x2	g_canvas.h	/^    t_float gl_x2;$/;"	m	struct:_glist
gl_xlabel	g_canvas.h	/^    t_symbol **gl_xlabel;           \/* ... an array to hold them *\/$/;"	m	struct:_glist
gl_xlabely	g_canvas.h	/^    t_float gl_xlabely;               \/* ... and their Y coordinates *\/$/;"	m	struct:_glist
gl_xmargin	g_canvas.h	/^    int gl_xmargin;                \/* origin for GOP rectangle *\/$/;"	m	struct:_glist
gl_xtick	g_canvas.h	/^    t_tick gl_xtick;            \/* ticks marking X values *\/    $/;"	m	struct:_glist
gl_y1	g_canvas.h	/^    t_float gl_y1;$/;"	m	struct:_glist
gl_y2	g_canvas.h	/^    t_float gl_y2;$/;"	m	struct:_glist
gl_ylabel	g_canvas.h	/^    t_symbol **gl_ylabel;$/;"	m	struct:_glist
gl_ylabelx	g_canvas.h	/^    t_float gl_ylabelx;$/;"	m	struct:_glist
gl_ymargin	g_canvas.h	/^    int gl_ymargin;$/;"	m	struct:_glist
gl_ytick	g_canvas.h	/^    t_tick gl_ytick;            \/* same as above for Y ticks and labels *\/$/;"	m	struct:_glist
glist_add	g_graph.c	/^void glist_add(t_glist *x, t_gobj *y)$/;"	f
glist_addglist	g_canvas.c	/^t_glist *glist_addglist(t_glist *g, t_symbol *sym,$/;"	f
glist_amreloadingabstractions	g_editor.c	/^int glist_amreloadingabstractions = 0;$/;"	v
glist_arraydialog	g_array.c	/^void glist_arraydialog(t_glist *parent, t_symbol *name, t_floatarg size,$/;"	f
glist_checkanddeselectall	g_editor.c	/^static void glist_checkanddeselectall(t_glist *gl, t_gobj *g)$/;"	f	file:
glist_clear	g_graph.c	/^void glist_clear(t_glist *x)$/;"	f
glist_delete	g_graph.c	/^void glist_delete(t_glist *x, t_gobj *y)$/;"	f
glist_deselect	g_editor.c	/^void glist_deselect(t_glist *x, t_gobj *y)$/;"	f
glist_deselectline	g_editor.c	/^void glist_deselectline(t_glist *x)$/;"	f
glist_dofinderror	g_editor.c	/^static int glist_dofinderror(t_glist *gl, void *error_object)$/;"	f	file:
glist_donewloadbangs	g_editor.c	/^static void glist_donewloadbangs(t_glist *x)$/;"	f	file:
glist_doread	g_readwrite.c	/^static void glist_doread(t_glist *x, t_symbol *filename, t_symbol *format,$/;"	f	file:
glist_doreload	g_editor.c	/^static void glist_doreload(t_glist *gl, t_symbol *name, t_symbol *dir,$/;"	f	file:
glist_dosort	g_graph.c	/^static t_gobj *glist_dosort(t_glist *x,$/;"	f	file:
glist_dpixtodx	g_graph.c	/^t_float glist_dpixtodx(t_glist *x, t_float dxpix)$/;"	f
glist_dpixtody	g_graph.c	/^t_float glist_dpixtody(t_glist *x, t_float dypix)$/;"	f
glist_drawiofor	g_text.c	/^void glist_drawiofor(t_glist *glist, t_object *ob, int firsttime,$/;"	f
glist_eraseiofor	g_text.c	/^void glist_eraseiofor(t_glist *glist, t_object *ob, char *tag)$/;"	f
glist_finddirty	g_editor.c	/^static t_glist *glist_finddirty(t_glist *x)$/;"	f	file:
glist_findgraph	g_graph.c	/^t_glist *glist_findgraph(t_glist *x)$/;"	f
glist_findrtext	g_rtext.c	/^t_rtext *glist_findrtext(t_glist *gl, t_text *who)$/;"	f
glist_getcanvas	g_graph.c	/^t_canvas *glist_getcanvas(t_glist *x)$/;"	f
glist_getfont	g_canvas.c	/^int glist_getfont(t_glist *x)$/;"	f
glist_getindex	g_editor.c	/^int glist_getindex(t_glist *x, t_gobj *y)$/;"	f
glist_getnextxy	g_editor.c	/^void glist_getnextxy(t_glist *gl, int *xpix, int *ypix)$/;"	f
glist_glist	g_canvas.c	/^void glist_glist(t_glist *g, t_symbol *s, int argc, t_atom *argv)$/;"	f
glist_grab	g_graph.c	/^void glist_grab(t_glist *x, t_gobj *y, t_glistmotionfn motionfn,$/;"	f
glist_init	g_canvas.c	/^void glist_init(t_glist *x)$/;"	f
glist_isgraph	g_canvas.c	/^int glist_isgraph(t_glist *x)$/;"	f
glist_isselected	g_editor.c	/^int glist_isselected(t_glist *x, t_gobj *y)$/;"	f
glist_istoplevel	g_canvas.c	/^int glist_istoplevel(t_glist *x)$/;"	f
glist_isvisible	g_canvas.c	/^int glist_isvisible(t_glist *x)$/;"	f
glist_menu_open	g_canvas.c	/^void glist_menu_open(t_glist *x)$/;"	f
glist_merge	g_graph.c	/^static t_gobj *glist_merge(t_glist *x, t_gobj *g1, t_gobj *g2)$/;"	f	file:
glist_mergefile	g_readwrite.c	/^void glist_mergefile(t_glist *x, t_symbol *filename, t_symbol *format)$/;"	f
glist_noselect	g_editor.c	/^void glist_noselect(t_glist *x)$/;"	f
glist_nth	g_editor.c	/^static t_gobj *glist_nth(t_glist *x, int n)$/;"	f	file:
glist_pixelstox	g_graph.c	/^t_float glist_pixelstox(t_glist *x, t_float xpix)$/;"	f
glist_pixelstoy	g_graph.c	/^t_float glist_pixelstoy(t_glist *x, t_float ypix)$/;"	f
glist_read	g_readwrite.c	/^void glist_read(t_glist *x, t_symbol *filename, t_symbol *format)$/;"	f
glist_readatoms	g_readwrite.c	/^static void glist_readatoms(t_glist *x, int natoms, t_atom *vec,$/;"	f	file:
glist_readfrombinbuf	g_readwrite.c	/^void glist_readfrombinbuf(t_glist *x, t_binbuf *b, char *filename, int selectem)$/;"	f
glist_redraw	g_graph.c	/^void glist_redraw(t_glist *x)$/;"	f
glist_redrawall	g_canvas.c	/^static void glist_redrawall(t_glist *gl, int action)$/;"	f	file:
glist_retext	g_graph.c	/^void glist_retext(t_glist *glist, t_text *y)$/;"	f
glist_scalar	g_scalar.c	/^void glist_scalar(t_glist *glist,$/;"	f
glist_select	g_editor.c	/^void glist_select(t_glist *x, t_gobj *y)$/;"	f
glist_selectall	g_editor.c	/^void glist_selectall(t_glist *x)$/;"	f
glist_selectionindex	g_editor.c	/^int glist_selectionindex(t_glist *x, t_gobj *y, int selected)$/;"	f
glist_selectline	g_editor.c	/^void glist_selectline(t_glist *x, t_outconnect *oc, int index1,$/;"	f
glist_setlastxy	g_editor.c	/^static void glist_setlastxy(t_glist *gl, int xval, int yval)$/;"	f	file:
glist_sort	g_graph.c	/^void glist_sort(t_glist *x)$/;"	f
glist_text	g_text.c	/^void glist_text(t_glist *gl, t_symbol *s, int argc, t_atom *argv)$/;"	f
glist_valid	g_canvas.c	/^int glist_valid = 10000;$/;"	v
glist_write	g_readwrite.c	/^static void glist_write(t_glist *x, t_symbol *filename, t_symbol *format)$/;"	f	file:
glist_writelist	g_readwrite.c	/^static void glist_writelist(t_gobj *y, t_binbuf *b)$/;"	f	file:
glist_writetobinbuf	g_readwrite.c	/^t_binbuf *glist_writetobinbuf(t_glist *x, int wholething)$/;"	f
glist_xtopixels	g_graph.c	/^t_float glist_xtopixels(t_glist *x, t_float xval)$/;"	f
glist_ytopixels	g_graph.c	/^t_float glist_ytopixels(t_glist *x, t_float yval)$/;"	f
glob_audio_dialog	s_audio.c	/^void glob_audio_dialog(t_pd *dummy, t_symbol *s, int argc, t_atom *argv)$/;"	f
glob_audio_properties	s_audio.c	/^void glob_audio_properties(t_pd *dummy, t_floatarg flongform)$/;"	f
glob_audio_setapi	s_audio.c	/^void glob_audio_setapi(void *dummy, t_floatarg f)$/;"	f
glob_audiostatus	m_sched.c	/^void glob_audiostatus(void)$/;"	f
glob_compatibility	m_glob.c	/^static void glob_compatibility(t_pd *dummy, t_floatarg level)$/;"	f	file:
glob_dsp	g_canvas.c	/^void glob_dsp(void *dummy, t_symbol *s, int argc, t_atom *argv)$/;"	f
glob_evalfile	m_binbuf.c	/^t_pd *glob_evalfile(t_pd *ignore, t_symbol *name, t_symbol *dir)$/;"	f
glob_finderror	s_print.c	/^void glob_finderror(t_pd *dummy)$/;"	f
glob_findinstance	s_print.c	/^void glob_findinstance(t_pd *dummy, t_symbol*s)$/;"	f
glob_foo	m_glob.c	/^void glob_foo(void *dummy, t_symbol *s, int argc, t_atom *argv)$/;"	f
glob_foo	m_memory.c	/^void glob_foo(void *dummy, t_symbol *s, int argc, t_atom *argv)$/;"	f
glob_init	m_glob.c	/^void glob_init(void)$/;"	f
glob_initfromgui	s_main.c	/^void glob_initfromgui(void *dummy, t_symbol *s, int argc, t_atom *argv)$/;"	f
glob_key	g_editor.c	/^void glob_key(void *dummy, t_symbol *s, int ac, t_atom *av)$/;"	f
glob_menunew	g_canvas.c	/^void glob_menunew(void *dummy, t_symbol *filesym, t_symbol *dirsym)$/;"	f
glob_meters	m_sched.c	/^void glob_meters(void *dummy, t_float f)$/;"	f
glob_midi_dialog	s_midi.c	/^void glob_midi_dialog(t_pd *dummy, t_symbol *s, int argc, t_atom *argv)$/;"	f
glob_midi_properties	s_midi.c	/^void glob_midi_properties(t_pd *dummy, t_floatarg flongform)$/;"	f
glob_midi_setapi	s_midi.c	/^void glob_midi_setapi(void *dummy, t_floatarg f)$/;"	f
glob_path_dialog	s_path.c	/^void glob_path_dialog(t_pd *dummy, t_symbol *s, int argc, t_atom *argv)$/;"	f
glob_pdobject	m_glob.c	/^t_class *glob_pdobject;$/;"	v
glob_perf	m_glob.c	/^static void glob_perf(t_pd *dummy, float f)$/;"	f	file:
glob_ping	s_inter.c	/^void glob_ping(t_pd *dummy)$/;"	f
glob_plugindispatch	m_glob.c	/^void glob_plugindispatch(t_pd *dummy, t_symbol *s, int argc, t_atom *argv)$/;"	f
glob_quit	s_inter.c	/^void glob_quit(void *dummy)$/;"	f
glob_savepreferences	s_file.c	/^void glob_savepreferences(t_pd *dummy)$/;"	f
glob_setfilename	g_canvas.c	/^void glob_setfilename(void *dummy, t_symbol *filesym, t_symbol *dirsym)$/;"	f
glob_start_path_dialog	s_path.c	/^void glob_start_path_dialog(t_pd *dummy)$/;"	f
glob_start_startup_dialog	s_path.c	/^void glob_start_startup_dialog(t_pd *dummy)$/;"	f
glob_startup_dialog	s_path.c	/^void glob_startup_dialog(t_pd *dummy, t_symbol *s, int argc, t_atom *argv)$/;"	f
glob_verifyquit	g_editor.c	/^void glob_verifyquit(void *dummy, t_floatarg f)$/;"	f
glob_version	m_glob.c	/^static void glob_version(t_pd *dummy, float f)$/;"	f	file:
glob_watchdog	s_inter.c	/^void glob_watchdog(t_pd *dummy)$/;"	f
gobj_activate	g_editor.c	/^void gobj_activate(t_gobj *x, t_glist *glist, int state)$/;"	f
gobj_click	g_editor.c	/^int gobj_click(t_gobj *x, struct _glist *glist,$/;"	f
gobj_delete	g_editor.c	/^void gobj_delete(t_gobj *x, t_glist *glist)$/;"	f
gobj_displace	g_editor.c	/^void gobj_displace(t_gobj *x, t_glist *glist, int dx, int dy)$/;"	f
gobj_getrect	g_editor.c	/^void gobj_getrect(t_gobj *x, t_glist *glist, int *x1, int *y1,$/;"	f
gobj_getxforsort	g_graph.c	/^static t_float gobj_getxforsort(t_gobj *g)$/;"	f	file:
gobj_save	m_pd.c	/^void gobj_save(t_gobj *x, t_binbuf *b)$/;"	f
gobj_select	g_editor.c	/^void gobj_select(t_gobj *x, t_glist *glist, int state)$/;"	f
gobj_shouldvis	g_editor.c	/^int gobj_shouldvis(t_gobj *x, struct _glist *glist)$/;"	f
gobj_vis	g_editor.c	/^void gobj_vis(t_gobj *x, struct _glist *glist, int flag)$/;"	f
gp_scalar	m_pd.h	/^        struct _scalar *gp_scalar;  \/* scalar we're in (if glist) *\/$/;"	m	union:_gpointer::__anon6	typeref:struct:_gpointer::__anon6::_scalar
gp_stub	m_pd.h	/^    t_gstub *gp_stub;               \/* stub which points to glist\/array *\/$/;"	m	struct:_gpointer
gp_un	m_pd.h	/^    } gp_un;$/;"	m	struct:_gpointer	typeref:union:_gpointer::__anon6
gp_valid	m_pd.h	/^    int gp_valid;                   \/* number which must match gpointee *\/$/;"	m	struct:_gpointer
gp_w	m_pd.h	/^        union word *gp_w;           \/* raw data (if array) *\/$/;"	m	union:_gpointer::__anon6	typeref:union:_gpointer::__anon6::word
gpointer_check	g_traversal.c	/^int gpointer_check(const t_gpointer *gp, int headok)$/;"	f
gpointer_copy	g_traversal.c	/^void gpointer_copy(const t_gpointer *gpfrom, t_gpointer *gpto)$/;"	f
gpointer_gettemplatesym	g_traversal.c	/^static t_symbol *gpointer_gettemplatesym(const t_gpointer *gp)$/;"	f	file:
gpointer_init	g_traversal.c	/^void gpointer_init(t_gpointer *gp)$/;"	f
gpointer_setarray	g_traversal.c	/^void gpointer_setarray(t_gpointer *gp, t_array *array, t_word *w)$/;"	f
gpointer_setglist	g_traversal.c	/^void gpointer_setglist(t_gpointer *gp, t_glist *glist, t_scalar *x)$/;"	f
gpointer_unset	g_traversal.c	/^void gpointer_unset(t_gpointer *gp)$/;"	f
gq_client	s_inter.c	/^    void *gq_client;$/;"	m	struct:_guiqueue	file:
gq_fn	s_inter.c	/^    t_guicallbackfn gq_fn;$/;"	m	struct:_guiqueue	file:
gq_glist	s_inter.c	/^    t_glist *gq_glist;$/;"	m	struct:_guiqueue	file:
gq_next	s_inter.c	/^    struct _guiqueue *gq_next;$/;"	m	struct:_guiqueue	typeref:struct:_guiqueue::_guiqueue	file:
graph_activate	g_graph.c	/^static void graph_activate(t_gobj *z, t_glist *glist, int state)$/;"	f	file:
graph_array	g_array.c	/^t_garray *graph_array(t_glist *gl, t_symbol *s, t_symbol *templateargsym,$/;"	f
graph_bounds	g_graph.c	/^static void graph_bounds(t_glist *x, t_floatarg x1, t_floatarg y1,$/;"	f	file:
graph_click	g_graph.c	/^static int graph_click(t_gobj *z, struct _glist *glist,$/;"	f	file:
graph_delete	g_graph.c	/^static void graph_delete(t_gobj *z, t_glist *glist)$/;"	f	file:
graph_displace	g_graph.c	/^static void graph_displace(t_gobj *z, t_glist *glist, int dx, int dy)$/;"	f	file:
graph_getrect	g_graph.c	/^static void graph_getrect(t_gobj *z, t_glist *glist,$/;"	f	file:
graph_graphrect	g_graph.c	/^static void graph_graphrect(t_gobj *z, t_glist *glist,$/;"	f	file:
graph_lastxpix	g_graph.c	/^static t_float graph_lastxpix, graph_lastypix;$/;"	v	file:
graph_lastypix	g_graph.c	/^static t_float graph_lastxpix, graph_lastypix;$/;"	v	file:
graph_motion	g_graph.c	/^static void graph_motion(void *z, t_floatarg dx, t_floatarg dy)$/;"	f	file:
graph_scalar	g_array.c	/^static t_garray *graph_scalar(t_glist *gl, t_symbol *s, t_symbol *templatesym,$/;"	f	file:
graph_select	g_graph.c	/^static void graph_select(t_gobj *z, t_glist *glist, int state)$/;"	f	file:
graph_vis	g_graph.c	/^static void graph_vis(t_gobj *gr, t_glist *parent_glist, int vis)$/;"	f	file:
graph_widgetbehavior	g_graph.c	/^t_widgetbehavior graph_widgetbehavior =$/;"	v
graph_xlabel	g_graph.c	/^static void graph_xlabel(t_glist *x, t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
graph_xticks	g_graph.c	/^static void graph_xticks(t_glist *x,$/;"	f	file:
graph_ylabel	g_graph.c	/^static void graph_ylabel(t_glist *x, t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
graph_yticks	g_graph.c	/^static void graph_yticks(t_glist *x,$/;"	f	file:
gs_array	m_pd.h	/^        struct _array *gs_array;    \/* array we're in *\/$/;"	m	union:_gstub::__anon5	typeref:struct:_gstub::__anon5::_array
gs_glist	m_pd.h	/^        struct _glist *gs_glist;    \/* glist we're in *\/$/;"	m	union:_gstub::__anon5	typeref:struct:_gstub::__anon5::_glist
gs_refcount	m_pd.h	/^    int gs_refcount;                \/* number of gpointers pointing here *\/$/;"	m	struct:_gstub
gs_un	m_pd.h	/^    } gs_un;$/;"	m	struct:_gstub	typeref:union:_gstub::__anon5
gs_which	m_pd.h	/^    int gs_which;                   \/* GP_GLIST\/GP_ARRAY *\/$/;"	m	struct:_gstub
gstack_head	m_pd.c	/^static t_gstack *gstack_head = 0;$/;"	v	file:
gstub_cutoff	g_traversal.c	/^void gstub_cutoff(t_gstub *gs)$/;"	f
gstub_dis	g_traversal.c	/^static void gstub_dis(t_gstub *gs)$/;"	f	file:
gstub_new	g_traversal.c	/^t_gstub *gstub_new(t_glist *gl, t_array *a)$/;"	f
gtemplate_class	g_template.c	/^static t_class *gtemplate_class;$/;"	v	file:
gtemplate_donew	g_template.c	/^static void *gtemplate_donew(t_symbol *sym, int argc, t_atom *argv)$/;"	f	file:
gtemplate_free	g_template.c	/^static void gtemplate_free(t_gtemplate *x)$/;"	f	file:
gtemplate_get	g_template.c	/^t_template *gtemplate_get(t_gtemplate *x)$/;"	f
gtemplate_new	g_template.c	/^static void *gtemplate_new(t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
gtemplate_new_old	g_template.c	/^static void *gtemplate_new_old(t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
gtemplate_setup	g_template.c	/^static void gtemplate_setup(void)$/;"	f	file:
guiconnect_anything	g_guiconnect.c	/^static void guiconnect_anything(t_guiconnect *x,$/;"	f	file:
guiconnect_class	g_guiconnect.c	/^static t_class *guiconnect_class;$/;"	v	file:
guiconnect_free	g_guiconnect.c	/^static void guiconnect_free(t_guiconnect *x)$/;"	f	file:
guiconnect_new	g_guiconnect.c	/^t_guiconnect *guiconnect_new(t_pd *who, t_symbol *sym)$/;"	f
guiconnect_notarget	g_guiconnect.c	/^void guiconnect_notarget(t_guiconnect *x, double timedelay)$/;"	f
guiconnect_signoff	g_guiconnect.c	/^static void guiconnect_signoff(t_guiconnect *x)$/;"	f	file:
guiconnect_tick	g_guiconnect.c	/^static void guiconnect_tick(t_guiconnect *x)$/;"	f	file:
gv_f	g_traversal.c	/^    t_float gv_f;$/;"	m	struct:_appendvariable	file:
gv_outlet	g_traversal.c	/^    t_outlet *gv_outlet;$/;"	m	struct:_getvariable	file:
gv_sym	g_traversal.c	/^    t_symbol *gv_sym;$/;"	m	struct:_appendvariable	file:
gv_sym	g_traversal.c	/^    t_symbol *gv_sym;$/;"	m	struct:_getvariable	file:
gv_sym	g_traversal.c	/^    t_symbol *gv_sym;$/;"	m	struct:_setvariable	file:
gv_w	g_traversal.c	/^    union word gv_w;$/;"	m	struct:_setvariable	typeref:union:_setvariable::word	file:
hBuffer	s_midi_mmio.c	/^    HANDLE  hBuffer;        \/* buffer handle *\/$/;"	m	struct:circularBuffer_tag	file:
hData	s_audio_mmio.c	/^    HANDLE hData;$/;"	m	struct:_sbuf	file:
hMidiIn	s_midi_mmio.c	/^HMIDIIN hMidiIn[MAXMIDIINDEV];       \/\/ MIDI input device handles$/;"	v
hMidiOut	s_midi_mmio.c	/^static HMIDIOUT hMidiOut[MAXMIDIOUTDEV];    \/* output device *\/$/;"	v	file:
hSelf	s_midi_mmio.c	/^    HANDLE              hSelf;  $/;"	m	struct:callbackInstance_tag	file:
hSelf	s_midi_mmio.c	/^    HANDLE  hSelf;          \/* handle to this structure *\/$/;"	m	struct:circularBuffer_tag	file:
hWaveHdr	s_audio_mmio.c	/^    HANDLE hWaveHdr; $/;"	m	struct:_sbuf	file:
h_clock	x_midi.c	/^    t_clock *h_clock;$/;"	m	struct:_hang	file:
h_clock	x_time.c	/^    t_clock *h_clock;$/;"	m	struct:_hang	file:
h_gp	x_time.c	/^    t_gpointer *h_gp;$/;"	m	struct:_hang	file:
h_next	x_midi.c	/^    struct _hang *h_next;$/;"	m	struct:_hang	typeref:struct:_hang::_hang	file:
h_next	x_time.c	/^    struct _hang *h_next;$/;"	m	struct:_hang	typeref:struct:_hang::_hang	file:
h_owner	x_midi.c	/^    struct _makenote *h_owner;$/;"	m	struct:_hang	typeref:struct:_hang::_makenote	file:
h_owner	x_time.c	/^    struct _pipe *h_owner;$/;"	m	struct:_hang	typeref:struct:_hang::_pipe	file:
h_pitch	x_midi.c	/^    t_float h_pitch;$/;"	m	struct:_hang	file:
h_vec	x_time.c	/^    union word h_vec[1];        \/* not the actual number. *\/$/;"	m	struct:_hang	typeref:union:_hang::word	file:
halsec	d_fft_mayer.c	/^static REAL halsec[20]=$/;"	v	file:
hang_free	x_time.c	/^static void hang_free(t_hang *h)$/;"	f	file:
hang_tick	x_time.c	/^static void hang_tick(t_hang *h)$/;"	f	file:
hdial_new	g_hdial.c	/^static void *hdial_new(t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
hipctl	d_filter.c	/^typedef struct hipctl$/;"	s	file:
hradio_bang	g_hdial.c	/^static void hradio_bang(t_hradio *x)$/;"	f	file:
hradio_class	g_hdial.c	/^static t_class *hradio_class, *hradio_old_class;$/;"	v	file:
hradio_click	g_hdial.c	/^static void hradio_click(t_hradio *x, t_floatarg xpos, t_floatarg ypos, t_floatarg shift, t_floatarg ctrl, t_floatarg alt)$/;"	f	file:
hradio_color	g_hdial.c	/^static void hradio_color(t_hradio *x, t_symbol *s, int ac, t_atom *av)$/;"	f	file:
hradio_delta	g_hdial.c	/^static void hradio_delta(t_hradio *x, t_symbol *s, int ac, t_atom *av)$/;"	f	file:
hradio_dialog	g_hdial.c	/^static void hradio_dialog(t_hradio *x, t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
hradio_donew	g_hdial.c	/^static void *hradio_donew(t_symbol *s, int argc, t_atom *argv, int old)$/;"	f	file:
hradio_double_change	g_hdial.c	/^static void hradio_double_change(t_hradio *x)$/;"	f	file:
hradio_draw	g_hdial.c	/^void hradio_draw(t_hradio *x, t_glist *glist, int mode)$/;"	f
hradio_draw_config	g_hdial.c	/^void hradio_draw_config(t_hradio* x, t_glist* glist)$/;"	f
hradio_draw_erase	g_hdial.c	/^void hradio_draw_erase(t_hradio* x, t_glist* glist)$/;"	f
hradio_draw_io	g_hdial.c	/^void hradio_draw_io(t_hradio* x, t_glist* glist, int old_snd_rcv_flags)$/;"	f
hradio_draw_move	g_hdial.c	/^void hradio_draw_move(t_hradio *x, t_glist *glist)$/;"	f
hradio_draw_new	g_hdial.c	/^void hradio_draw_new(t_hradio *x, t_glist *glist)$/;"	f
hradio_draw_select	g_hdial.c	/^void hradio_draw_select(t_hradio* x, t_glist* glist)$/;"	f
hradio_draw_update	g_hdial.c	/^void hradio_draw_update(t_gobj *client, t_glist *glist)$/;"	f
hradio_ff	g_hdial.c	/^static void hradio_ff(t_hradio *x)$/;"	f	file:
hradio_float	g_hdial.c	/^static void hradio_float(t_hradio *x, t_floatarg f)$/;"	f	file:
hradio_fout	g_hdial.c	/^static void hradio_fout(t_hradio *x, t_floatarg f)$/;"	f	file:
hradio_getrect	g_hdial.c	/^static void hradio_getrect(t_gobj *z, t_glist *glist, int *xp1, int *yp1, int *xp2, int *yp2)$/;"	f	file:
hradio_init	g_hdial.c	/^static void hradio_init(t_hradio *x, t_floatarg f)$/;"	f	file:
hradio_label	g_hdial.c	/^static void hradio_label(t_hradio *x, t_symbol *s)$/;"	f	file:
hradio_label_font	g_hdial.c	/^static void hradio_label_font(t_hradio *x, t_symbol *s, int ac, t_atom *av)$/;"	f	file:
hradio_label_pos	g_hdial.c	/^static void hradio_label_pos(t_hradio *x, t_symbol *s, int ac, t_atom *av)$/;"	f	file:
hradio_loadbang	g_hdial.c	/^static void hradio_loadbang(t_hradio *x)$/;"	f	file:
hradio_new	g_hdial.c	/^static void *hradio_new(t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
hradio_newclick	g_hdial.c	/^static int hradio_newclick(t_gobj *z, struct _glist *glist, int xpix, int ypix, int shift, int alt, int dbl, int doit)$/;"	f	file:
hradio_number	g_hdial.c	/^static void hradio_number(t_hradio *x, t_floatarg num)$/;"	f	file:
hradio_old_class	g_hdial.c	/^static t_class *hradio_class, *hradio_old_class;$/;"	v	file:
hradio_pos	g_hdial.c	/^static void hradio_pos(t_hradio *x, t_symbol *s, int ac, t_atom *av)$/;"	f	file:
hradio_properties	g_hdial.c	/^static void hradio_properties(t_gobj *z, t_glist *owner)$/;"	f	file:
hradio_receive	g_hdial.c	/^static void hradio_receive(t_hradio *x, t_symbol *s)$/;"	f	file:
hradio_save	g_hdial.c	/^static void hradio_save(t_gobj *z, t_binbuf *b)$/;"	f	file:
hradio_send	g_hdial.c	/^static void hradio_send(t_hradio *x, t_symbol *s)$/;"	f	file:
hradio_set	g_hdial.c	/^static void hradio_set(t_hradio *x, t_floatarg f)$/;"	f	file:
hradio_single_change	g_hdial.c	/^static void hradio_single_change(t_hradio *x)$/;"	f	file:
hradio_size	g_hdial.c	/^static void hradio_size(t_hradio *x, t_symbol *s, int ac, t_atom *av)$/;"	f	file:
hradio_widgetbehavior	g_hdial.c	/^t_widgetbehavior hradio_widgetbehavior;$/;"	v
hslider_bang	g_hslider.c	/^static void hslider_bang(t_hslider *x)$/;"	f	file:
hslider_check_minmax	g_hslider.c	/^void hslider_check_minmax(t_hslider *x, double min, double max)$/;"	f
hslider_check_width	g_hslider.c	/^void hslider_check_width(t_hslider *x, int w)$/;"	f
hslider_class	g_hslider.c	/^static t_class *hslider_class;$/;"	v	file:
hslider_click	g_hslider.c	/^static void hslider_click(t_hslider *x, t_floatarg xpos, t_floatarg ypos,$/;"	f	file:
hslider_color	g_hslider.c	/^static void hslider_color(t_hslider *x, t_symbol *s, int ac, t_atom *av)$/;"	f	file:
hslider_delta	g_hslider.c	/^static void hslider_delta(t_hslider *x, t_symbol *s, int ac, t_atom *av)$/;"	f	file:
hslider_dialog	g_hslider.c	/^static void hslider_dialog(t_hslider *x, t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
hslider_draw	g_hslider.c	/^void hslider_draw(t_hslider *x, t_glist *glist, int mode)$/;"	f
hslider_draw_config	g_hslider.c	/^static void hslider_draw_config(t_hslider* x,t_glist* glist)$/;"	f	file:
hslider_draw_erase	g_hslider.c	/^static void hslider_draw_erase(t_hslider* x,t_glist* glist)$/;"	f	file:
hslider_draw_io	g_hslider.c	/^static void hslider_draw_io(t_hslider* x,t_glist* glist, int old_snd_rcv_flags)$/;"	f	file:
hslider_draw_move	g_hslider.c	/^static void hslider_draw_move(t_hslider *x, t_glist *glist)$/;"	f	file:
hslider_draw_new	g_hslider.c	/^static void hslider_draw_new(t_hslider *x, t_glist *glist)$/;"	f	file:
hslider_draw_select	g_hslider.c	/^static void hslider_draw_select(t_hslider* x,t_glist* glist)$/;"	f	file:
hslider_draw_update	g_hslider.c	/^static void hslider_draw_update(t_gobj *client, t_glist *glist)$/;"	f	file:
hslider_float	g_hslider.c	/^static void hslider_float(t_hslider *x, t_floatarg f)$/;"	f	file:
hslider_free	g_hslider.c	/^static void hslider_free(t_hslider *x)$/;"	f	file:
hslider_getrect	g_hslider.c	/^static void hslider_getrect(t_gobj *z, t_glist *glist,$/;"	f	file:
hslider_init	g_hslider.c	/^static void hslider_init(t_hslider *x, t_floatarg f)$/;"	f	file:
hslider_label	g_hslider.c	/^static void hslider_label(t_hslider *x, t_symbol *s)$/;"	f	file:
hslider_label_font	g_hslider.c	/^static void hslider_label_font(t_hslider *x, t_symbol *s, int ac, t_atom *av)$/;"	f	file:
hslider_label_pos	g_hslider.c	/^static void hslider_label_pos(t_hslider *x, t_symbol *s, int ac, t_atom *av)$/;"	f	file:
hslider_lin	g_hslider.c	/^static void hslider_lin(t_hslider *x)$/;"	f	file:
hslider_loadbang	g_hslider.c	/^static void hslider_loadbang(t_hslider *x)$/;"	f	file:
hslider_log	g_hslider.c	/^static void hslider_log(t_hslider *x)$/;"	f	file:
hslider_motion	g_hslider.c	/^static void hslider_motion(t_hslider *x, t_floatarg dx, t_floatarg dy)$/;"	f	file:
hslider_new	g_hslider.c	/^static void *hslider_new(t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
hslider_newclick	g_hslider.c	/^static int hslider_newclick(t_gobj *z, struct _glist *glist,$/;"	f	file:
hslider_pos	g_hslider.c	/^static void hslider_pos(t_hslider *x, t_symbol *s, int ac, t_atom *av)$/;"	f	file:
hslider_properties	g_hslider.c	/^static void hslider_properties(t_gobj *z, t_glist *owner)$/;"	f	file:
hslider_range	g_hslider.c	/^static void hslider_range(t_hslider *x, t_symbol *s, int ac, t_atom *av)$/;"	f	file:
hslider_receive	g_hslider.c	/^static void hslider_receive(t_hslider *x, t_symbol *s)$/;"	f	file:
hslider_save	g_hslider.c	/^static void hslider_save(t_gobj *z, t_binbuf *b)$/;"	f	file:
hslider_send	g_hslider.c	/^static void hslider_send(t_hslider *x, t_symbol *s)$/;"	f	file:
hslider_set	g_hslider.c	/^static void hslider_set(t_hslider *x, t_floatarg f)    \/* bugfix *\/$/;"	f	file:
hslider_size	g_hslider.c	/^static void hslider_size(t_hslider *x, t_symbol *s, int ac, t_atom *av)$/;"	f	file:
hslider_steady	g_hslider.c	/^static void hslider_steady(t_hslider *x, t_floatarg f)$/;"	f	file:
hslider_widgetbehavior	g_hslider.c	/^t_widgetbehavior hslider_widgetbehavior;$/;"	v
i	m_pd.h	/^  PD_FLOATUINTTYPE i;$/;"	m	union:_sampleint_union
i_dest	m_obj.c	/^    t_pd *i_dest;$/;"	m	struct:_inlet	file:
i_floatslot	m_obj.c	33;"	d	file:
i_nconnect	d_ugen.c	/^    int i_nconnect;$/;"	m	struct:_siginlet	file:
i_next	m_obj.c	/^    struct _inlet *i_next;$/;"	m	struct:_inlet	typeref:struct:_inlet::_inlet	file:
i_ngot	d_ugen.c	/^    int i_ngot;$/;"	m	struct:_siginlet	file:
i_owner	m_obj.c	/^    t_object *i_owner;$/;"	m	struct:_inlet	file:
i_pd	m_obj.c	/^    t_pd i_pd;$/;"	m	struct:_inlet	file:
i_pointerslot	m_obj.c	32;"	d	file:
i_signal	d_ugen.c	/^    t_signal *i_signal;$/;"	m	struct:_siginlet	file:
i_symfrom	m_obj.c	/^    t_symbol *i_symfrom;$/;"	m	struct:_inlet	file:
i_symslot	m_obj.c	34;"	d	file:
i_symto	m_obj.c	31;"	d	file:
i_un	m_obj.c	/^    union inletunion i_un;$/;"	m	struct:_inlet	typeref:union:_inlet::inletunion	file:
iem_fstyletoint	g_all_guis.c	/^int iem_fstyletoint(t_iem_fstyle_flags *fstylep)$/;"	f
iem_inttofstyle	g_all_guis.c	/^void iem_inttofstyle(t_iem_fstyle_flags *fstylep, int n)$/;"	f
iem_inttosymargs	g_all_guis.c	/^void iem_inttosymargs(t_iem_init_symargs *symargp, int n)$/;"	f
iem_symargstoint	g_all_guis.c	/^int iem_symargstoint(t_iem_init_symargs *symargp)$/;"	f
iemgui_all_col2save	g_all_guis.c	/^void iemgui_all_col2save(t_iemgui *iemgui, int *bflcol)$/;"	f
iemgui_all_colfromload	g_all_guis.c	/^void iemgui_all_colfromload(t_iemgui *iemgui, int *bflcol)$/;"	f
iemgui_all_dollar2raute	g_all_guis.c	/^void iemgui_all_dollar2raute(t_symbol **srlsym)$/;"	f
iemgui_all_dollararg2sym	g_all_guis.c	/^void iemgui_all_dollararg2sym(t_iemgui *iemgui, t_symbol **srlsym)$/;"	f
iemgui_all_raute2dollar	g_all_guis.c	/^void iemgui_all_raute2dollar(t_symbol **srlsym)$/;"	f
iemgui_all_sym2dollararg	g_all_guis.c	/^void iemgui_all_sym2dollararg(t_iemgui *iemgui, t_symbol **srlsym)$/;"	f
iemgui_clip_font	g_all_guis.c	/^int iemgui_clip_font(int size)$/;"	f
iemgui_clip_size	g_all_guis.c	/^int iemgui_clip_size(int size)$/;"	f
iemgui_color	g_all_guis.c	/^void iemgui_color(void *x, t_iemgui *iemgui, t_symbol *s, int ac, t_atom *av)$/;"	f
iemgui_color_hex	g_all_guis.c	/^int iemgui_color_hex[]=$/;"	v
iemgui_compatible_col	g_all_guis.c	/^int iemgui_compatible_col(int i)$/;"	f
iemgui_delete	g_all_guis.c	/^void iemgui_delete(t_gobj *z, t_glist *glist)$/;"	f
iemgui_delta	g_all_guis.c	/^void iemgui_delta(void *x, t_iemgui *iemgui, t_symbol *s, int ac, t_atom *av)$/;"	f
iemgui_dialog	g_all_guis.c	/^int iemgui_dialog(t_iemgui *iemgui, t_symbol **srl, int argc, t_atom *argv)$/;"	f
iemgui_displace	g_all_guis.c	/^void iemgui_displace(t_gobj *z, t_glist *glist, int dx, int dy)$/;"	f
iemgui_dollar2raute	g_all_guis.c	/^t_symbol *iemgui_dollar2raute(t_symbol *s)$/;"	f
iemgui_first_dollararg2sym	g_all_guis.c	/^void iemgui_first_dollararg2sym(t_iemgui *iemgui, t_symbol **srlsym)$/;"	f
iemgui_init_sym2dollararg	g_all_guis.c	/^static void iemgui_init_sym2dollararg(t_iemgui *iemgui, t_symbol **symp,$/;"	f	file:
iemgui_label	g_all_guis.c	/^void iemgui_label(void *x, t_iemgui *iemgui, t_symbol *s)$/;"	f
iemgui_label_font	g_all_guis.c	/^void iemgui_label_font(void *x, t_iemgui *iemgui, t_symbol *s, int ac, t_atom *av)$/;"	f
iemgui_label_pos	g_all_guis.c	/^void iemgui_label_pos(void *x, t_iemgui *iemgui, t_symbol *s, int ac, t_atom *av)$/;"	f
iemgui_modulo_color	g_all_guis.c	/^int iemgui_modulo_color(int col)$/;"	f
iemgui_new_dogetname	g_all_guis.c	/^t_symbol *iemgui_new_dogetname(t_iemgui *iemgui, int indx, t_atom *argv)$/;"	f
iemgui_new_getnames	g_all_guis.c	/^void iemgui_new_getnames(t_iemgui *iemgui, int indx, t_atom *argv)$/;"	f
iemgui_pos	g_all_guis.c	/^void iemgui_pos(void *x, t_iemgui *iemgui, t_symbol *s, int ac, t_atom *av)$/;"	f
iemgui_properties	g_all_guis.c	/^void iemgui_properties(t_iemgui *iemgui, t_symbol **srl)$/;"	f
iemgui_raute2dollar	g_all_guis.c	/^t_symbol *iemgui_raute2dollar(t_symbol *s)$/;"	f
iemgui_receive	g_all_guis.c	/^void iemgui_receive(void *x, t_iemgui *iemgui, t_symbol *s)$/;"	f
iemgui_save	g_all_guis.c	/^void iemgui_save(t_iemgui *iemgui, t_symbol **srl, int *bflcol)$/;"	f
iemgui_select	g_all_guis.c	/^void iemgui_select(t_gobj *z, t_glist *glist, int selected)$/;"	f
iemgui_send	g_all_guis.c	/^void iemgui_send(void *x, t_iemgui *iemgui, t_symbol *s)$/;"	f
iemgui_size	g_all_guis.c	/^void iemgui_size(void *x, t_iemgui *iemgui)$/;"	f
iemgui_verify_snd_ne_rcv	g_all_guis.c	/^void iemgui_verify_snd_ne_rcv(t_iemgui *iemgui)$/;"	f
iemgui_vis	g_all_guis.c	/^void iemgui_vis(t_gobj *z, t_glist *glist, int vis)$/;"	f
iemgui_vu_col	g_all_guis.c	/^int iemgui_vu_col[]=$/;"	v
iemgui_vu_db2i	g_all_guis.c	/^int iemgui_vu_db2i[]=$/;"	v
iemgui_vu_scale_str	g_all_guis.c	/^char *iemgui_vu_scale_str[]=$/;"	v
ilog2	d_ugen.c	/^int ilog2(int n)$/;"	f
in	d_fft_fftw.c	/^    fftwf_complex *in,*out;$/;"	m	struct:__anon1	file:
in	d_fft_fftw.c	/^    float *in,*out;$/;"	m	struct:__anon2	file:
in_avail	s_audio_alsamm.c	/^ static int in_avail[WATCH_PERIODS];$/;"	v	file:
in_offset	s_audio_alsamm.c	/^ static  int in_offset[WATCH_PERIODS];$/;"	v	file:
inaddr	s_audio_alsamm.c	/^ static  char *inaddr[WATCH_PERIODS];$/;"	v	file:
inaddr2	s_audio_alsamm.c	/^ static  char *inaddr2[WATCH_PERIODS];$/;"	v	file:
inbinbuf	s_inter.c	/^static t_binbuf *inbinbuf;$/;"	v	file:
incomingEvent	s_midi_mmio.c	/^EVENT incomingEvent;                    \/\/ Incoming MIDI event structure$/;"	v
indexpi	d_fftroutine.c	/^        SAMPLE          **indexpi;$/;"	m	struct:Tfft_net	file:
indexpr	d_fftroutine.c	/^        SAMPLE          **indexpr;$/;"	m	struct:Tfft_net	file:
indexqi	d_fftroutine.c	/^        SAMPLE          **indexqi;$/;"	m	struct:Tfft_net	file:
indexqr	d_fftroutine.c	/^        SAMPLE          **indexqr;$/;"	m	struct:Tfft_net	file:
init_rsqrt	d_math.c	/^static void init_rsqrt(void)$/;"	f	file:
initsystime	s_audio_mmio.c	/^static double initsystime = -1;$/;"	v	file:
initsystime	s_midi_mmio.c	/^static double initsystime = -1;$/;"	v	file:
inlet_anything	m_obj.c	/^static void inlet_anything(t_inlet *x, t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
inlet_bang	m_obj.c	/^static void inlet_bang(t_inlet *x)$/;"	f	file:
inlet_class	m_obj.c	/^static t_class *inlet_class, *pointerinlet_class, *floatinlet_class,$/;"	v	file:
inlet_float	m_obj.c	/^static void inlet_float(t_inlet *x, t_float f)$/;"	f	file:
inlet_free	m_obj.c	/^void inlet_free(t_inlet *x)$/;"	f
inlet_getsignalindex	m_obj.c	/^int inlet_getsignalindex(t_inlet *x)$/;"	f
inlet_list	m_obj.c	/^static void inlet_list(t_inlet *x, t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
inlet_new	m_obj.c	/^t_inlet *inlet_new(t_object *owner, t_pd *dest, t_symbol *s1, t_symbol *s2)$/;"	f
inlet_pointer	m_obj.c	/^static void inlet_pointer(t_inlet *x, t_gpointer *gp)$/;"	f	file:
inlet_symbol	m_obj.c	/^static void inlet_symbol(t_inlet *x, t_symbol *s)$/;"	f	file:
inlet_wrong	m_obj.c	/^static void inlet_wrong(t_inlet *x, t_symbol *s)$/;"	f	file:
inletunion	m_obj.c	/^union inletunion$/;"	u	file:
inmidi_aftertouch	x_midi.c	/^void inmidi_aftertouch(int portno, int channel, int value)$/;"	f
inmidi_byte	x_midi.c	/^void inmidi_byte(int portno, int byte)$/;"	f
inmidi_clk	x_midi.c	/^void inmidi_clk(double timing)$/;"	f
inmidi_controlchange	x_midi.c	/^void inmidi_controlchange(int portno, int channel, int ctlnumber, int value)$/;"	f
inmidi_noteon	x_midi.c	/^void inmidi_noteon(int portno, int channel, int pitch, int velo)$/;"	f
inmidi_pitchbend	x_midi.c	/^void inmidi_pitchbend(int portno, int channel, int value)$/;"	f
inmidi_polyaftertouch	x_midi.c	/^void inmidi_polyaftertouch(int portno, int channel, int pitch, int value)$/;"	f
inmidi_programchange	x_midi.c	/^void inmidi_programchange(int portno, int channel, int value)$/;"	f
inmidi_realtimein	x_midi.c	/^void inmidi_realtimein(int portno, int SysMsg)$/;"	f
inmidi_sysex	x_midi.c	/^void inmidi_sysex(int portno, int byte)$/;"	f
input_port	s_audio_jack.c	/^static jack_port_t *input_port[MAX_JACK_PORTS];$/;"	v	file:
int16_t	m_pd.h	/^typedef signed __int16    int16_t;$/;"	t
int32_t	m_pd.h	/^typedef signed __int32    int32_t;$/;"	t
int64_t	m_pd.h	/^typedef signed __int64    int64_t;$/;"	t
int8_t	m_pd.h	/^typedef signed __int8     int8_t;$/;"	t
inv_coeffi	d_fftroutine.c	/^        SAMPLE          *coeffi, *inv_coeffi;$/;"	m	struct:Tfft_net	file:
inv_coeffr	d_fftroutine.c	/^        SAMPLE          *coeffr, *inv_coeffr;$/;"	m	struct:Tfft_net	file:
inv_window	d_fftroutine.c	/^        SAMPLE          *window, *inv_window;$/;"	m	struct:Tfft_net	file:
isutf	s_utf8.h	41;"	d
iu_floatsignalvalue	m_obj.c	/^    t_float iu_floatsignalvalue;$/;"	m	union:inletunion	file:
iu_floatslot	m_obj.c	/^    t_float *iu_floatslot;$/;"	m	union:inletunion	file:
iu_pointerslot	m_obj.c	/^    t_gpointer *iu_pointerslot;$/;"	m	union:inletunion	file:
iu_symslot	m_obj.c	/^    t_symbol **iu_symslot;$/;"	m	union:inletunion	file:
iu_symto	m_obj.c	/^    t_symbol *iu_symto;$/;"	m	union:inletunion	file:
jack_callback	s_audio_jack.c	/^static t_audiocallback jack_callback;$/;"	v	file:
jack_client	s_audio_jack.c	/^static jack_client_t *jack_client = NULL;$/;"	v	file:
jack_client_names	s_audio_jack.c	/^char *jack_client_names[MAX_CLIENTS];$/;"	v
jack_close_audio	s_audio_jack.c	/^void jack_close_audio(void) $/;"	f
jack_connect_ports	s_audio_jack.c	/^static int jack_connect_ports(char* client)$/;"	f	file:
jack_dio_error	s_audio_jack.c	/^static int jack_dio_error;$/;"	v	file:
jack_filled	s_audio_jack.c	/^static jack_nframes_t jack_filled = 0;$/;"	v	file:
jack_get_clients	s_audio_jack.c	/^static char** jack_get_clients(void)$/;"	f	file:
jack_getdevs	s_audio_jack.c	/^void jack_getdevs(char *indevlist, int *nindevs,$/;"	f
jack_inbuf	s_audio_jack.c	/^static t_sample *jack_inbuf;$/;"	v	file:
jack_listdevs	s_audio_jack.c	/^void jack_listdevs( void)$/;"	f
jack_mutex	s_audio_jack.c	/^pthread_mutex_t jack_mutex;$/;"	v
jack_open_audio	s_audio_jack.c	/^jack_open_audio(int inchans, int outchans, int rate, t_audiocallback callback)$/;"	f
jack_out_max	s_audio_jack.c	/^static jack_nframes_t jack_out_max;$/;"	v	file:
jack_outbuf	s_audio_jack.c	/^static t_sample *jack_outbuf;$/;"	v	file:
jack_sem	s_audio_jack.c	/^pthread_cond_t jack_sem;$/;"	v
jack_send_dacs	s_audio_jack.c	/^int jack_send_dacs(void)$/;"	f
jack_shutdown	s_audio_jack.c	/^jack_shutdown (void *arg)$/;"	f	file:
jack_srate	s_audio_jack.c	/^jack_srate (jack_nframes_t srate, void *arg)$/;"	f	file:
jack_started	s_audio_jack.c	/^static int jack_started = 0;$/;"	v	file:
jack_xrun	s_audio_jack.c	/^static int jack_xrun(void* arg) {$/;"	f	file:
k_binop	x_text.c	/^    int k_binop;$/;"	m	struct:_key	file:
k_field	x_text.c	/^    int k_field;$/;"	m	struct:_key	file:
k_inc	g_canvas.h	/^    t_float k_inc;        \/* x or y increment per little tick *\/$/;"	m	struct:_tick
k_lperb	g_canvas.h	/^    int k_lperb;        \/* little ticks per big; 0 if no ticks to draw *\/$/;"	m	struct:_tick
k_point	g_canvas.h	/^    t_float k_point;      \/* one point to draw a big tick at *\/$/;"	m	struct:_tick
key_class	x_gui.c	/^static t_class *key_class, *keyup_class, *keyname_class;$/;"	v	file:
key_float	x_gui.c	/^static void key_float(t_key *x, t_floatarg f)$/;"	f	file:
key_free	x_gui.c	/^static void key_free(t_key *x)$/;"	f	file:
key_new	x_gui.c	/^static void *key_new( void)$/;"	f	file:
key_setup	x_gui.c	/^static void key_setup(void)$/;"	f	file:
key_sym	x_gui.c	/^static t_symbol *key_sym, *keyup_sym, *keyname_sym;$/;"	v	file:
keyname_class	x_gui.c	/^static t_class *key_class, *keyup_class, *keyname_class;$/;"	v	file:
keyname_free	x_gui.c	/^static void keyname_free(t_keyname *x)$/;"	f	file:
keyname_list	x_gui.c	/^static void keyname_list(t_keyname *x, t_symbol *s, int ac, t_atom *av)$/;"	f	file:
keyname_new	x_gui.c	/^static void *keyname_new( void)$/;"	f	file:
keyname_sym	x_gui.c	/^static t_symbol *key_sym, *keyup_sym, *keyname_sym;$/;"	v	file:
keyup_class	x_gui.c	/^static t_class *key_class, *keyup_class, *keyname_class;$/;"	v	file:
keyup_float	x_gui.c	/^static void keyup_float(t_keyup *x, t_floatarg f)$/;"	f	file:
keyup_free	x_gui.c	/^static void keyup_free(t_keyup *x)$/;"	f	file:
keyup_new	x_gui.c	/^static void *keyup_new( void)$/;"	f	file:
keyup_sym	x_gui.c	/^static t_symbol *key_sym, *keyup_sym, *keyname_sym;$/;"	v	file:
l	d_soundfile.c	/^  long     l;$/;"	m	union:_samplelong	file:
l_a	x_list.c	/^    t_atom l_a;$/;"	m	struct:_listelem	file:
l_n	x_list.c	/^    int l_n;            \/* number of items *\/$/;"	m	struct:_alist	file:
l_npointer	x_list.c	/^    int l_npointer;     \/* number of pointers *\/$/;"	m	struct:_alist	file:
l_p	x_list.c	/^    t_gpointer l_p;$/;"	m	struct:_listelem	file:
l_pd	x_list.c	/^    t_pd l_pd;          \/* object to point inlets to *\/$/;"	m	struct:_alist	file:
l_vec	x_list.c	/^    t_listelem *l_vec;  \/* pointer to items *\/$/;"	m	struct:_alist	file:
lastone	g_rtext.c	/^static int lastone(char *s, int c, int n)$/;"	f	file:
lastpopped	m_pd.c	/^static t_pd *lastpopped;$/;"	v	file:
line_class	x_time.c	/^static t_class *line_class;$/;"	v	file:
line_float	x_time.c	/^static void line_float(t_line *x, t_float f)$/;"	f	file:
line_free	x_time.c	/^static void line_free(t_line *x)$/;"	f	file:
line_ft1	x_time.c	/^static void line_ft1(t_line *x, t_floatarg g)$/;"	f	file:
line_new	x_time.c	/^static void *line_new(t_floatarg f, t_floatarg grain)$/;"	f	file:
line_set	x_time.c	/^static void line_set(t_line *x, t_floatarg f)$/;"	f	file:
line_setup	x_time.c	/^static void line_setup(void)$/;"	f	file:
line_stop	x_time.c	/^static void line_stop(t_line *x)$/;"	f	file:
line_tick	x_time.c	/^static void line_tick(t_line *x)$/;"	f	file:
line_tilde_class	d_ctl.c	/^static t_class *line_tilde_class;$/;"	v	file:
line_tilde_dsp	d_ctl.c	/^static void line_tilde_dsp(t_line *x, t_signal **sp)$/;"	f	file:
line_tilde_float	d_ctl.c	/^static void line_tilde_float(t_line *x, t_float f)$/;"	f	file:
line_tilde_new	d_ctl.c	/^static void *line_tilde_new(void)$/;"	f	file:
line_tilde_perf8	d_ctl.c	/^static t_int *line_tilde_perf8(t_int *w)$/;"	f	file:
line_tilde_perform	d_ctl.c	/^static t_int *line_tilde_perform(t_int *w)$/;"	f	file:
line_tilde_setup	d_ctl.c	/^static void line_tilde_setup(void)$/;"	f	file:
line_tilde_stop	d_ctl.c	/^static void line_tilde_stop(t_line *x)$/;"	f	file:
linetraverser_next	g_canvas.c	/^t_outconnect *linetraverser_next(t_linetraverser *t)$/;"	f
linetraverser_skipobject	g_canvas.c	/^void linetraverser_skipobject(t_linetraverser *t)$/;"	f
linetraverser_start	g_canvas.c	/^void linetraverser_start(t_linetraverser *t, t_canvas *x)$/;"	f
linux_adcs	s_audio_oss.c	/^static t_oss_dev linux_adcs[OSS_MAXDEV];$/;"	v	file:
linux_adcs_read	s_audio_oss.c	/^static int linux_adcs_read(int fd,void*  buf,long bytes)$/;"	f	file:
linux_audiostatus	s_audio_oss.c	/^void linux_audiostatus(void)$/;"	f
linux_dacs	s_audio_oss.c	/^static t_oss_dev linux_dacs[OSS_MAXDEV];$/;"	v	file:
linux_dacs_write	s_audio_oss.c	/^static int linux_dacs_write(int fd,void* buf,long bytes)$/;"	f	file:
linux_fragsize	s_audio_oss.c	/^static int linux_fragsize = 0;  \/* for block mode; block size (sample frames) *\/$/;"	v	file:
linux_inmax	s_audio_oss.c	/^static t_sample linux_inmax;       \/* max input amplitude *\/$/;"	v	file:
linux_meters	s_audio_oss.c	/^static int linux_meters;        \/* true if we're metering *\/$/;"	v	file:
linux_nindevs	s_audio_oss.c	/^static int linux_nindevs = 0;$/;"	v	file:
linux_noutdevs	s_audio_oss.c	/^static int linux_noutdevs = 0;$/;"	v	file:
linux_outmax	s_audio_oss.c	/^static t_sample linux_outmax;      \/* max output amplitude *\/$/;"	v	file:
list_append_anything	x_list.c	/^static void list_append_anything(t_list_append *x, t_symbol *s,$/;"	f	file:
list_append_class	x_list.c	/^t_class *list_append_class;$/;"	v
list_append_free	x_list.c	/^static void list_append_free(t_list_append *x)$/;"	f	file:
list_append_list	x_list.c	/^static void list_append_list(t_list_append *x, t_symbol *s,$/;"	f	file:
list_append_new	x_list.c	/^static void *list_append_new(t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
list_append_setup	x_list.c	/^static void list_append_setup(void)$/;"	f	file:
list_fromsymbol_class	x_list.c	/^t_class *list_fromsymbol_class;$/;"	v
list_fromsymbol_new	x_list.c	/^static void *list_fromsymbol_new( void)$/;"	f	file:
list_fromsymbol_setup	x_list.c	/^static void list_fromsymbol_setup(void)$/;"	f	file:
list_fromsymbol_symbol	x_list.c	/^static void list_fromsymbol_symbol(t_list_append *x, t_symbol *s)$/;"	f	file:
list_length_anything	x_list.c	/^static void list_length_anything(t_list_length *x, t_symbol *s,$/;"	f	file:
list_length_class	x_list.c	/^t_class *list_length_class;$/;"	v
list_length_list	x_list.c	/^static void list_length_list(t_list_length *x, t_symbol *s,$/;"	f	file:
list_length_new	x_list.c	/^static void *list_length_new( void)$/;"	f	file:
list_length_setup	x_list.c	/^static void list_length_setup(void)$/;"	f	file:
list_new	x_list.c	/^static void *list_new(t_pd *dummy, t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
list_prepend_anything	x_list.c	/^static void list_prepend_anything(t_list_prepend *x, t_symbol *s,$/;"	f	file:
list_prepend_class	x_list.c	/^t_class *list_prepend_class;$/;"	v
list_prepend_free	x_list.c	/^static void list_prepend_free(t_list_prepend *x)$/;"	f	file:
list_prepend_list	x_list.c	/^static void list_prepend_list(t_list_prepend *x, t_symbol *s,$/;"	f	file:
list_prepend_new	x_list.c	/^static void *list_prepend_new(t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
list_prepend_setup	x_list.c	/^static void list_prepend_setup(void)$/;"	f	file:
list_split_anything	x_list.c	/^static void list_split_anything(t_list_split *x, t_symbol *s,$/;"	f	file:
list_split_class	x_list.c	/^t_class *list_split_class;$/;"	v
list_split_list	x_list.c	/^static void list_split_list(t_list_split *x, t_symbol *s,$/;"	f	file:
list_split_new	x_list.c	/^static void *list_split_new(t_floatarg f)$/;"	f	file:
list_split_setup	x_list.c	/^static void list_split_setup(void)$/;"	f	file:
list_tosymbol_class	x_list.c	/^t_class *list_tosymbol_class;$/;"	v
list_tosymbol_list	x_list.c	/^static void list_tosymbol_list(t_list_append *x, t_symbol *s,$/;"	f	file:
list_tosymbol_new	x_list.c	/^static void *list_tosymbol_new( void)$/;"	f	file:
list_tosymbol_setup	x_list.c	/^static void list_tosymbol_setup(void)$/;"	f	file:
list_trim_anything	x_list.c	/^static void list_trim_anything(t_list_trim *x, t_symbol *s,$/;"	f	file:
list_trim_class	x_list.c	/^t_class *list_trim_class;$/;"	v
list_trim_list	x_list.c	/^static void list_trim_list(t_list_trim *x, t_symbol *s,$/;"	f	file:
list_trim_new	x_list.c	/^static void *list_trim_new( void)$/;"	f	file:
list_trim_setup	x_list.c	/^static void list_trim_setup(void)$/;"	f	file:
ll_name	s_loader.c	/^    t_symbol *ll_name;$/;"	m	struct:_loadedlist	file:
ll_next	s_loader.c	/^    struct _loadedlist *ll_next;$/;"	m	struct:_loadedlist	typeref:struct:_loadedlist::_loadedlist	file:
load_index	d_fftroutine.c	/^        int             *load_index;$/;"	m	struct:Tfft_net	file:
load_registers	d_fftroutine.c	/^void load_registers(FFT_NET *fft_net, SAMPLE *buf, int buf_form,$/;"	f
loadbang_class	x_misc.c	/^static t_class *loadbang_class;$/;"	v	file:
loadbang_loadbang	x_misc.c	/^static void loadbang_loadbang(t_loadbang *x)$/;"	f	file:
loadbang_new	x_misc.c	/^static void *loadbang_new(void)$/;"	f	file:
loadbang_setup	x_misc.c	/^static void loadbang_setup(void)$/;"	f	file:
loader	s_loader.c	/^    loader_t loader;$/;"	m	struct:loader_queue	file:
loader_queue	s_loader.c	/^typedef struct loader_queue {$/;"	s	file:
loader_queue_t	s_loader.c	/^} loader_queue_t;$/;"	t	typeref:struct:loader_queue	file:
loader_t	s_stuff.h	/^typedef int (*loader_t)(t_canvas *canvas, char *classname); \/* callback type *\/$/;"	t
loaders	s_loader.c	/^static loader_queue_t loaders = {sys_do_load_lib, NULL};$/;"	v	file:
log_class	x_arithmetic.c	/^static t_class *log_class;      \/* ----------- log --------------- *\/$/;"	v	file:
log_float	x_arithmetic.c	/^static void log_float(t_object *x, t_float f)$/;"	f	file:
log_new	x_arithmetic.c	/^static void *log_new(void)$/;"	f	file:
log_tilde_class	d_math.c	/^static t_class *log_tilde_class;$/;"	v	file:
log_tilde_dsp	d_math.c	/^static void log_tilde_dsp(t_log_tilde *x, t_signal **sp)$/;"	f	file:
log_tilde_new	d_math.c	/^static void *log_tilde_new(t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
log_tilde_perform	d_math.c	/^t_int *log_tilde_perform(t_int *w)$/;"	f
log_tilde_setup	d_math.c	/^static void log_tilde_setup(void)$/;"	f	file:
logpost	s_print.c	/^void logpost(const void *object, const int level, const char *fmt, ...)$/;"	f
lopctl	d_filter.c	/^typedef struct lopctl$/;"	s	file:
lpBuf	s_midi_mmio.c	/^    LPCIRCULARBUFFER    lpBuf;$/;"	m	struct:callbackInstance_tag	file:
lpCallbackInstanceData	s_midi_mmio.c	/^LPCALLBACKINSTANCEDATA lpCallbackInstanceData[MAXMIDIINDEV];$/;"	v
lpData	s_audio_mmio.c	/^    HPSTR  lpData;      \/\/ pointer to waveform data memory $/;"	m	struct:_sbuf	file:
lpEnd	s_midi_mmio.c	/^    LPEVENT lpEnd;          \/* ptr to end of buffer (last byte + 1) *\/$/;"	m	struct:circularBuffer_tag	file:
lpHead	s_midi_mmio.c	/^    LPEVENT lpHead;         \/* ptr to head (next location to fill) *\/$/;"	m	struct:circularBuffer_tag	file:
lpInputBuffer	s_midi_mmio.c	/^LPCIRCULARBUFFER lpInputBuffer;         \/\/ Input buffer structure$/;"	v
lpStart	s_midi_mmio.c	/^    LPEVENT lpStart;        \/* ptr to start of buffer *\/$/;"	m	struct:circularBuffer_tag	file:
lpTail	s_midi_mmio.c	/^    LPEVENT lpTail;         \/* ptr to tail (next location to empty) *\/$/;"	m	struct:circularBuffer_tag	file:
lpWaveHdr	s_audio_mmio.c	/^    WAVEHDR   *lpWaveHdr;   \/\/ pointer to header structure$/;"	m	struct:_sbuf	file:
lseek	d_soundfile.c	33;"	d	file:
lseek	s_path.c	45;"	d	file:
m_batchmain	m_sched.c	/^int m_batchmain(void)$/;"	f
m_callbackscheduler	m_sched.c	/^static void m_callbackscheduler(void)$/;"	f	file:
m_clock	g_text.c	/^    t_clock *m_clock;$/;"	m	struct:_message	file:
m_glist	g_text.c	/^    t_glist *m_glist;$/;"	m	struct:_message	file:
m_mainloop	m_sched.c	/^int m_mainloop(void)$/;"	f
m_messresponder	g_text.c	/^    t_messresponder m_messresponder;$/;"	m	struct:_message	file:
m_pd_setup	m_pd.c	/^void m_pd_setup(void)$/;"	f
m_pollingscheduler	m_sched.c	/^static void m_pollingscheduler( void)$/;"	f	file:
m_text	g_text.c	/^    t_text m_text;$/;"	m	struct:_message	file:
mac_midiindevlist	s_midi_pm.c	/^static PmStream *mac_midiindevlist[MAXMIDIINDEV];$/;"	v	file:
mac_midioutdevlist	s_midi_pm.c	/^static PmStream *mac_midioutdevlist[MAXMIDIOUTDEV];$/;"	v	file:
mac_nmidiindev	s_midi_pm.c	/^static int mac_nmidiindev;$/;"	v	file:
mac_nmidioutdev	s_midi_pm.c	/^static int mac_nmidioutdev;$/;"	v	file:
main	s_entry.c	/^int main(int argc, char **argv)$/;"	f
main	s_watchdog.c	/^int main(int argc, char **argv)$/;"	f
main	u_pdreceive.c	/^int main(int argc, char **argv)$/;"	f
main	u_pdsend.c	/^int main(int argc, char **argv)$/;"	f
makeaiffsamprate	d_soundfile.c	/^static void makeaiffsamprate(double sr, unsigned char *shit)$/;"	f	file:
makect	d_fft_fftsg.c	/^void makect(int nc, int *ip, double *c)$/;"	f
makefilename_class	x_connective.c	/^static t_class *makefilename_class;$/;"	v	file:
makefilename_float	x_connective.c	/^static void makefilename_float(t_makefilename *x, t_floatarg f)$/;"	f	file:
makefilename_new	x_connective.c	/^static void *makefilename_new(t_symbol *s)$/;"	f	file:
makefilename_scanformat	x_connective.c	/^static void makefilename_scanformat(t_makefilename *x)$/;"	f	file:
makefilename_set	x_connective.c	/^static void makefilename_set(t_makefilename *x, t_symbol *s)$/;"	f	file:
makefilename_setup	x_connective.c	/^static void makefilename_setup(void)$/;"	f	file:
makefilename_symbol	x_connective.c	/^static void makefilename_symbol(t_makefilename *x, t_symbol *s)$/;"	f	file:
makeipt	d_fft_fftsg.c	/^void makeipt(int nw, int *ip)$/;"	f
makenote_class	x_midi.c	/^static t_class *makenote_class;$/;"	v	file:
makenote_clear	x_midi.c	/^static void makenote_clear(t_makenote *x)$/;"	f	file:
makenote_float	x_midi.c	/^static void makenote_float(t_makenote *x, t_float f)$/;"	f	file:
makenote_new	x_midi.c	/^static void *makenote_new(t_floatarg velo, t_floatarg dur)$/;"	f	file:
makenote_setup	x_midi.c	/^static void makenote_setup(void)$/;"	f	file:
makenote_stop	x_midi.c	/^static void makenote_stop(t_makenote *x)$/;"	f	file:
makenote_tick	x_midi.c	/^static void makenote_tick(t_hang *hang)$/;"	f	file:
makeoutput	u_pdreceive.c	/^static void makeoutput(char *buf, int len)$/;"	f	file:
makeseed	x_misc.c	/^static int makeseed(void)$/;"	f	file:
makewt	d_fft_fftsg.c	/^void makewt(int nw, int *ip, double *w)$/;"	f
max_class	d_arithmetic.c	/^static t_class *max_class, *scalarmax_class;$/;"	v	file:
max_default	m_glob.c	/^void max_default(t_pd *x, t_symbol *s, int argc, t_atom *argv)$/;"	f
max_dsp	d_arithmetic.c	/^static void max_dsp(t_max *x, t_signal **sp)$/;"	f	file:
max_new	d_arithmetic.c	/^static void *max_new(t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
max_perf8	d_arithmetic.c	/^t_int *max_perf8(t_int *w)$/;"	f
max_perform	d_arithmetic.c	/^t_int *max_perform(t_int *w)$/;"	f
max_setup	d_arithmetic.c	/^static void max_setup(void)$/;"	f	file:
maxclass	m_glob.c	/^static t_class *maxclass;$/;"	v	file:
maxfd	u_pdreceive.c	/^static int maxfd;$/;"	v	file:
mayer_do_cfft	d_fft_fftw.c	/^static void mayer_do_cfft(int n, float *fz1, float *fz2, int fwd)$/;"	f	file:
mayer_dofft	d_fft_fftsg.c	/^EXTERN void mayer_dofft(t_sample *fz1, t_sample *fz2, int n, int sgn)$/;"	f
mayer_fft	d_fft_fftsg.c	/^EXTERN void mayer_fft(int n, t_sample *fz1, t_sample *fz2)$/;"	f
mayer_fft	d_fft_fftw.c	/^EXTERN void mayer_fft(int n, float *fz1, float *fz2)$/;"	f
mayer_fft	d_fft_mayer.c	/^void mayer_fft(int n, REAL *real, REAL *imag)$/;"	f
mayer_fht	d_fft_fftsg.c	/^EXTERN void mayer_fht(t_sample *fz, int n)$/;"	f
mayer_fht	d_fft_fftw.c	/^EXTERN void mayer_fht(float *fz, int n)$/;"	f
mayer_fht	d_fft_mayer.c	/^void mayer_fht(REAL *fz, int n)$/;"	f
mayer_ifft	d_fft_fftsg.c	/^EXTERN void mayer_ifft(int n, t_sample *fz1, t_sample *fz2)$/;"	f
mayer_ifft	d_fft_fftw.c	/^EXTERN void mayer_ifft(int n, float *fz1, float *fz2)$/;"	f
mayer_ifft	d_fft_mayer.c	/^void mayer_ifft(int n, REAL *real, REAL *imag)$/;"	f
mayer_realfft	d_fft_fftsg.c	/^EXTERN void mayer_realfft(int n, t_sample *fz)$/;"	f
mayer_realfft	d_fft_fftw.c	/^EXTERN void mayer_realfft(int n, float *fz)$/;"	f
mayer_realfft	d_fft_mayer.c	/^void mayer_realfft(int n, REAL *real)$/;"	f
mayer_realifft	d_fft_fftsg.c	/^EXTERN void mayer_realifft(int n, t_sample *fz)$/;"	f
mayer_realifft	d_fft_fftw.c	/^EXTERN void mayer_realifft(int n, float *fz)$/;"	f
mayer_realifft	d_fft_mayer.c	/^void mayer_realifft(int n, REAL *real)$/;"	f
md_msglen	s_midi_alsa.c	116;"	d	file:
md_msglen	s_midi_oss.c	111;"	d	file:
me_arg	m_imp.h	/^    t_atomtype me_arg[MAXPDARG+1];$/;"	m	struct:_methodentry
me_fun	m_imp.h	/^    t_gotfn me_fun;$/;"	m	struct:_methodentry
me_name	m_imp.h	/^    t_symbol *me_name;$/;"	m	struct:_methodentry
mess0	m_pd.h	291;"	d
mess1	m_pd.h	293;"	d
mess2	m_pd.h	295;"	d
mess3	m_pd.h	297;"	d
mess4	m_pd.h	300;"	d
mess5	m_pd.h	304;"	d
mess_init	m_class.c	/^void mess_init(void)$/;"	f
message_add	g_text.c	/^static void message_add(t_message *x, t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
message_add2	g_text.c	/^static void message_add2(t_message *x, t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
message_addcomma	g_text.c	/^static void message_addcomma(t_message *x)$/;"	f	file:
message_adddollar	g_text.c	/^static void message_adddollar(t_message *x, t_floatarg f)$/;"	f	file:
message_adddollsym	g_text.c	/^static void message_adddollsym(t_message *x, t_symbol *s)$/;"	f	file:
message_addsemi	g_text.c	/^static void message_addsemi(t_message *x)$/;"	f	file:
message_bang	g_text.c	/^static void message_bang(t_message *x)$/;"	f	file:
message_class	g_text.c	/^static t_class *message_class, *messresponder_class;$/;"	v	file:
message_class	g_text.c	/^static t_class *message_class;$/;"	v	file:
message_click	g_text.c	/^static void message_click(t_message *x,$/;"	f	file:
message_float	g_text.c	/^static void message_float(t_message *x, t_float f)$/;"	f	file:
message_free	g_text.c	/^static void message_free(t_message *x)$/;"	f	file:
message_list	g_text.c	/^static void message_list(t_message *x, t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
message_set	g_text.c	/^static void message_set(t_message *x, t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
message_symbol	g_text.c	/^static void message_symbol(t_message *x, t_symbol *s)$/;"	f	file:
message_tick	g_text.c	/^static void message_tick(t_message *x)$/;"	f	file:
messresponder_anything	g_text.c	/^static void messresponder_anything(t_messresponder *x,$/;"	f	file:
messresponder_bang	g_text.c	/^static void messresponder_bang(t_messresponder *x)$/;"	f	file:
messresponder_class	g_text.c	/^static t_class *message_class, *messresponder_class;$/;"	v	file:
messresponder_float	g_text.c	/^static void messresponder_float(t_messresponder *x, t_float f)$/;"	f	file:
messresponder_list	g_text.c	/^static void messresponder_list(t_messresponder *x, $/;"	f	file:
messresponder_symbol	g_text.c	/^static void messresponder_symbol(t_messresponder *x, t_symbol *s)$/;"	f	file:
method	m_pd.h	/^  int method;       \/* up\/downsampling method ID *\/$/;"	m	struct:_resample
metro_bang	x_time.c	/^static void metro_bang(t_metro *x)$/;"	f	file:
metro_class	x_time.c	/^static t_class *metro_class;$/;"	v	file:
metro_float	x_time.c	/^static void metro_float(t_metro *x, t_float f)$/;"	f	file:
metro_free	x_time.c	/^static void metro_free(t_metro *x)$/;"	f	file:
metro_ft1	x_time.c	/^static void metro_ft1(t_metro *x, t_floatarg g)$/;"	f	file:
metro_new	x_time.c	/^static void *metro_new(t_symbol *unitname, t_floatarg f, t_floatarg tempo)$/;"	f	file:
metro_setup	x_time.c	/^static void metro_setup(void)$/;"	f	file:
metro_stop	x_time.c	/^static void metro_stop(t_metro *x)$/;"	f	file:
metro_tempo	x_time.c	/^static void metro_tempo(t_metro *x, t_symbol *unitname, t_floatarg tempo)$/;"	f	file:
metro_tick	x_time.c	/^static void metro_tick(t_metro *x)$/;"	f	file:
midiInCaps	s_midi_mmio.c	/^MIDIINCAPS midiInCaps[MAXMIDIINDEV]; \/\/ Device capabilities structures$/;"	v
midiInputHandler	s_midi_mmio.c	/^void FAR PASCAL midiInputHandler($/;"	f
midi_alsa_getdevs	s_midi_alsa.c	/^void midi_alsa_getdevs(char *indevlist, int *nindevs,$/;"	f
midi_alsa_init	s_midi_alsa.c	/^void midi_alsa_init(void)     $/;"	f
midi_gensym	m_pd.c	/^static t_symbol *midi_gensym(const char *prefix, const char *name)$/;"	f	file:
midi_getdevs	s_midi_dummy.c	/^void midi_getdevs(char *indevlist, int *nindevs,$/;"	f
midi_getdevs	s_midi_mmio.c	/^void midi_getdevs(char *indevlist, int *nindevs,$/;"	f
midi_getdevs	s_midi_oss.c	/^void midi_getdevs(char *indevlist, int *nindevs,$/;"	f
midi_getdevs	s_midi_pm.c	/^void midi_getdevs(char *indevlist, int *nindevs,$/;"	f
midi_handle	s_midi_alsa.c	/^static snd_seq_t *midi_handle;$/;"	v	file:
midi_inhead	s_midi.c	/^int midi_inhead, midi_intail;$/;"	v
midi_inqueue	s_midi.c	/^t_midiqelem midi_inqueue[MIDIQSIZE];$/;"	v
midi_intail	s_midi.c	/^int midi_inhead, midi_intail;$/;"	v
midi_midiindev	s_midi.c	/^static int midi_midiindev[MAXMIDIINDEV];$/;"	v	file:
midi_midioutdev	s_midi.c	/^static int midi_midioutdev[MAXMIDIOUTDEV];$/;"	v	file:
midi_nmidiindev	s_midi.c	/^static int midi_nmidiindev;$/;"	v	file:
midi_nmidioutdev	s_midi.c	/^static int midi_nmidioutdev;$/;"	v	file:
midi_oss_init	s_midi_oss.c	/^void midi_oss_init(void)     $/;"	f
midi_outhead	s_midi.c	/^int midi_outhead, midi_outtail;$/;"	v
midi_outqueue	s_midi.c	/^t_midiqelem midi_outqueue[MIDIQSIZE];$/;"	v
midi_outtail	s_midi.c	/^int midi_outhead, midi_outtail;$/;"	v
midiclkin_class	x_midi.c	/^static t_class *midiclkin_class;$/;"	v	file:
midiclkin_free	x_midi.c	/^static void midiclkin_free(t_midiclkin *x)$/;"	f	file:
midiclkin_list	x_midi.c	/^static void midiclkin_list(t_midiclkin *x, t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
midiclkin_new	x_midi.c	/^static void *midiclkin_new(t_floatarg f)$/;"	f	file:
midiclkin_setup	x_midi.c	/^static void midiclkin_setup(void)$/;"	f	file:
midiev	s_midi_alsa.c	/^static snd_midi_event_t *midiev;$/;"	v	file:
midiin_class	x_midi.c	/^static t_class *midiin_class, *sysexin_class;$/;"	v	file:
midiin_free	x_midi.c	/^static void midiin_free(t_midiin *x)$/;"	f	file:
midiin_list	x_midi.c	/^static void midiin_list(t_midiin *x, t_symbol *s, int ac, t_atom *av)$/;"	f	file:
midiin_new	x_midi.c	/^static void *midiin_new( void)$/;"	f	file:
midiin_setup	x_midi.c	/^static void midiin_setup(void)$/;"	f	file:
midiout_class	x_midi.c	/^static t_class *midiout_class;$/;"	v	file:
midiout_float	x_midi.c	/^static void midiout_float(t_midiout *x, t_floatarg f)$/;"	f	file:
midiout_new	x_midi.c	/^static void *midiout_new(t_floatarg portno)$/;"	f	file:
midiout_setup	x_midi.c	/^static void midiout_setup(void)$/;"	f	file:
midiparser	s_midi.c	/^typedef struct midiparser$/;"	s	file:
midirealtimein_class	x_midi.c	/^static t_class *midirealtimein_class;$/;"	v	file:
midirealtimein_free	x_midi.c	/^static void midirealtimein_free(t_midirealtimein *x)$/;"	f	file:
midirealtimein_list	x_midi.c	/^static void midirealtimein_list(t_midirealtimein *x, t_symbol *s,$/;"	f	file:
midirealtimein_new	x_midi.c	/^static void *midirealtimein_new( void)$/;"	f	file:
midirealtimein_setup	x_midi.c	/^static void midirealtimein_setup(void)$/;"	f	file:
min_class	d_arithmetic.c	/^static t_class *min_class, *scalarmin_class;$/;"	v	file:
min_dsp	d_arithmetic.c	/^static void min_dsp(t_min *x, t_signal **sp)$/;"	f	file:
min_new	d_arithmetic.c	/^static void *min_new(t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
min_perf8	d_arithmetic.c	/^t_int *min_perf8(t_int *w)$/;"	f
min_perform	d_arithmetic.c	/^t_int *min_perform(t_int *w)$/;"	f
min_setup	d_arithmetic.c	/^static void min_setup(void)$/;"	f	file:
minus_class	d_arithmetic.c	/^static t_class *minus_class, *scalarminus_class;$/;"	v	file:
minus_dsp	d_arithmetic.c	/^static void minus_dsp(t_minus *x, t_signal **sp)$/;"	f	file:
minus_new	d_arithmetic.c	/^static void *minus_new(t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
minus_perf8	d_arithmetic.c	/^t_int *minus_perf8(t_int *w)$/;"	f
minus_perform	d_arithmetic.c	/^t_int *minus_perform(t_int *w)$/;"	f
minus_setup	d_arithmetic.c	/^static void minus_setup(void)$/;"	f	file:
mmio_close_audio	s_audio_mmio.c	/^void mmio_close_audio( void)$/;"	f
mmio_do_open_audio	s_audio_mmio.c	/^int mmio_do_open_audio(void)$/;"	f
mmio_getdevs	s_audio_mmio.c	/^void mmio_getdevs(char *indevlist, int *nindevs,$/;"	f
mmio_open_audio	s_audio_mmio.c	/^int mmio_open_audio(int naudioindev, int *audioindev,$/;"	f
mmio_reportidle	s_audio_mmio.c	/^void mmio_reportidle(void)$/;"	f
mmio_send_dacs	s_audio_mmio.c	/^int mmio_send_dacs(void)$/;"	f
moses_class	x_connective.c	/^static t_class *moses_class;$/;"	v	file:
moses_float	x_connective.c	/^static void moses_float(t_moses *x, t_float f)$/;"	f	file:
moses_new	x_connective.c	/^static void *moses_new(t_floatarg f)$/;"	f	file:
moses_setup	x_connective.c	/^static void moses_setup(void)$/;"	f	file:
mp_byte1	s_midi.c	/^    int mp_byte1;$/;"	m	struct:midiparser	file:
mp_gotbyte1	s_midi.c	/^    int mp_gotbyte1;$/;"	m	struct:midiparser	file:
mp_status	s_midi.c	/^    int mp_status;$/;"	m	struct:midiparser	file:
mr_outlet	g_text.c	/^    t_outlet *mr_outlet;$/;"	m	struct:_messresponder	file:
mr_pd	g_text.c	/^    t_pd mr_pd;$/;"	m	struct:_messresponder	file:
msw_close_midiin	s_midi_mmio.c	/^static void msw_close_midiin(void)$/;"	f	file:
msw_close_midiout	s_midi_mmio.c	/^static void msw_close_midiout(void)$/;"	f	file:
msw_hibuftime	s_midi_mmio.c	/^static double msw_hibuftime;$/;"	v	file:
msw_midigettimefor	s_midi_mmio.c	/^static double msw_midigettimefor(LARGE_INTEGER timestamp)$/;"	f	file:
msw_midiinerror	s_midi_mmio.c	/^static void msw_midiinerror(char *s, int err)$/;"	f	file:
msw_midiouterror	s_midi_mmio.c	/^static void msw_midiouterror(char *s, int err)$/;"	f	file:
msw_midisync	s_midi_mmio.c	/^static void msw_midisync(void)$/;"	f	file:
msw_nmidiout	s_midi_mmio.c	/^static int msw_nmidiout;                            \/* number of devices *\/$/;"	v	file:
msw_open_midiin	s_midi_mmio.c	/^void msw_open_midiin(int nmidiin, int *midiinvec)$/;"	f
msw_open_midiout	s_midi_mmio.c	/^static void msw_open_midiout(int nmidiout, int *midioutvec)$/;"	f	file:
msw_resetmidisync	s_midi_mmio.c	/^static void msw_resetmidisync(void)$/;"	f	file:
mtof	x_acoustics.c	/^t_float mtof(t_float f)$/;"	f
mtof_class	x_acoustics.c	/^static t_class *mtof_class;$/;"	v	file:
mtof_float	x_acoustics.c	/^static void mtof_float(t_object *x, t_float f)$/;"	f	file:
mtof_new	x_acoustics.c	/^static void *mtof_new(void)$/;"	f	file:
mtof_tilde	d_math.c	/^typedef struct mtof_tilde$/;"	s	file:
mtof_tilde_class	d_math.c	/^t_class *mtof_tilde_class;$/;"	v
mtof_tilde_dsp	d_math.c	/^static void mtof_tilde_dsp(t_mtof_tilde *x, t_signal **sp)$/;"	f	file:
mtof_tilde_new	d_math.c	/^static void *mtof_tilde_new(void)$/;"	f	file:
mtof_tilde_perform	d_math.c	/^static t_int *mtof_tilde_perform(t_int *w)$/;"	f	file:
mtof_tilde_setup	d_math.c	/^void mtof_tilde_setup(void)$/;"	f
my_canvas_class	g_mycanvas.c	/^static t_class *my_canvas_class;$/;"	v	file:
my_canvas_color	g_mycanvas.c	/^static void my_canvas_color(t_my_canvas *x, t_symbol *s, int ac, t_atom *av)$/;"	f	file:
my_canvas_delta	g_mycanvas.c	/^static void my_canvas_delta(t_my_canvas *x, t_symbol *s, int ac, t_atom *av)$/;"	f	file:
my_canvas_dialog	g_mycanvas.c	/^static void my_canvas_dialog(t_my_canvas *x, t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
my_canvas_draw	g_mycanvas.c	/^void my_canvas_draw(t_my_canvas *x, t_glist *glist, int mode)$/;"	f
my_canvas_draw_config	g_mycanvas.c	/^void my_canvas_draw_config(t_my_canvas* x, t_glist* glist)$/;"	f
my_canvas_draw_erase	g_mycanvas.c	/^void my_canvas_draw_erase(t_my_canvas* x, t_glist* glist)$/;"	f
my_canvas_draw_move	g_mycanvas.c	/^void my_canvas_draw_move(t_my_canvas *x, t_glist *glist)$/;"	f
my_canvas_draw_new	g_mycanvas.c	/^void my_canvas_draw_new(t_my_canvas *x, t_glist *glist)$/;"	f
my_canvas_draw_select	g_mycanvas.c	/^void my_canvas_draw_select(t_my_canvas* x, t_glist* glist)$/;"	f
my_canvas_ff	g_mycanvas.c	/^static void my_canvas_ff(t_my_canvas *x)$/;"	f	file:
my_canvas_get_pos	g_mycanvas.c	/^static void my_canvas_get_pos(t_my_canvas *x)$/;"	f	file:
my_canvas_getrect	g_mycanvas.c	/^static void my_canvas_getrect(t_gobj *z, t_glist *glist, int *xp1, int *yp1, int *xp2, int *yp2)$/;"	f	file:
my_canvas_label	g_mycanvas.c	/^static void my_canvas_label(t_my_canvas *x, t_symbol *s)$/;"	f	file:
my_canvas_label_font	g_mycanvas.c	/^static void my_canvas_label_font(t_my_canvas *x, t_symbol *s, int ac, t_atom *av)$/;"	f	file:
my_canvas_label_pos	g_mycanvas.c	/^static void my_canvas_label_pos(t_my_canvas *x, t_symbol *s, int ac, t_atom *av)$/;"	f	file:
my_canvas_new	g_mycanvas.c	/^static void *my_canvas_new(t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
my_canvas_pos	g_mycanvas.c	/^static void my_canvas_pos(t_my_canvas *x, t_symbol *s, int ac, t_atom *av)$/;"	f	file:
my_canvas_properties	g_mycanvas.c	/^static void my_canvas_properties(t_gobj *z, t_glist *owner)$/;"	f	file:
my_canvas_receive	g_mycanvas.c	/^static void my_canvas_receive(t_my_canvas *x, t_symbol *s)$/;"	f	file:
my_canvas_save	g_mycanvas.c	/^static void my_canvas_save(t_gobj *z, t_binbuf *b)$/;"	f	file:
my_canvas_send	g_mycanvas.c	/^static void my_canvas_send(t_my_canvas *x, t_symbol *s)$/;"	f	file:
my_canvas_size	g_mycanvas.c	/^static void my_canvas_size(t_my_canvas *x, t_symbol *s, int ac, t_atom *av)$/;"	f	file:
my_canvas_vis_size	g_mycanvas.c	/^static void my_canvas_vis_size(t_my_canvas *x, t_symbol *s, int ac, t_atom *av)$/;"	f	file:
my_canvas_widgetbehavior	g_mycanvas.c	/^t_widgetbehavior my_canvas_widgetbehavior;$/;"	v
my_numbox_bang	g_numbox.c	/^static void my_numbox_bang(t_my_numbox *x)$/;"	f	file:
my_numbox_calc_fontwidth	g_numbox.c	/^void my_numbox_calc_fontwidth(t_my_numbox *x)$/;"	f
my_numbox_check_minmax	g_numbox.c	/^int my_numbox_check_minmax(t_my_numbox *x, double min, double max)$/;"	f
my_numbox_class	g_numbox.c	/^static t_class *my_numbox_class;$/;"	v	file:
my_numbox_click	g_numbox.c	/^static void my_numbox_click(t_my_numbox *x, t_floatarg xpos, t_floatarg ypos,$/;"	f	file:
my_numbox_clip	g_numbox.c	/^void my_numbox_clip(t_my_numbox *x)$/;"	f
my_numbox_color	g_numbox.c	/^static void my_numbox_color(t_my_numbox *x, t_symbol *s, int ac, t_atom *av)$/;"	f	file:
my_numbox_delta	g_numbox.c	/^static void my_numbox_delta(t_my_numbox *x, t_symbol *s, int ac, t_atom *av)$/;"	f	file:
my_numbox_dialog	g_numbox.c	/^static void my_numbox_dialog(t_my_numbox *x, t_symbol *s, int argc,$/;"	f	file:
my_numbox_draw	g_numbox.c	/^void my_numbox_draw(t_my_numbox *x, t_glist *glist, int mode)$/;"	f
my_numbox_draw_config	g_numbox.c	/^static void my_numbox_draw_config(t_my_numbox* x,t_glist* glist)$/;"	f	file:
my_numbox_draw_erase	g_numbox.c	/^static void my_numbox_draw_erase(t_my_numbox* x,t_glist* glist)$/;"	f	file:
my_numbox_draw_io	g_numbox.c	/^static void my_numbox_draw_io(t_my_numbox* x,t_glist* glist, int old_snd_rcv_flags)$/;"	f	file:
my_numbox_draw_move	g_numbox.c	/^static void my_numbox_draw_move(t_my_numbox *x, t_glist *glist)$/;"	f	file:
my_numbox_draw_new	g_numbox.c	/^static void my_numbox_draw_new(t_my_numbox *x, t_glist *glist)$/;"	f	file:
my_numbox_draw_select	g_numbox.c	/^static void my_numbox_draw_select(t_my_numbox *x, t_glist *glist)$/;"	f	file:
my_numbox_draw_update	g_numbox.c	/^static void my_numbox_draw_update(t_gobj *client, t_glist *glist)$/;"	f	file:
my_numbox_float	g_numbox.c	/^static void my_numbox_float(t_my_numbox *x, t_floatarg f)$/;"	f	file:
my_numbox_free	g_numbox.c	/^static void my_numbox_free(t_my_numbox *x)$/;"	f	file:
my_numbox_ftoa	g_numbox.c	/^void my_numbox_ftoa(t_my_numbox *x)$/;"	f
my_numbox_getrect	g_numbox.c	/^static void my_numbox_getrect(t_gobj *z, t_glist *glist,$/;"	f	file:
my_numbox_init	g_numbox.c	/^static void my_numbox_init(t_my_numbox *x, t_floatarg f)$/;"	f	file:
my_numbox_key	g_numbox.c	/^static void my_numbox_key(void *z, t_floatarg fkey)$/;"	f	file:
my_numbox_label	g_numbox.c	/^static void my_numbox_label(t_my_numbox *x, t_symbol *s)$/;"	f	file:
my_numbox_label_font	g_numbox.c	/^static void my_numbox_label_font(t_my_numbox *x,$/;"	f	file:
my_numbox_label_pos	g_numbox.c	/^static void my_numbox_label_pos(t_my_numbox *x, t_symbol *s, int ac, t_atom *av)$/;"	f	file:
my_numbox_lin	g_numbox.c	/^static void my_numbox_lin(t_my_numbox *x)$/;"	f	file:
my_numbox_list	g_numbox.c	/^static void my_numbox_list(t_my_numbox *x, t_symbol *s, int ac, t_atom *av)$/;"	f	file:
my_numbox_loadbang	g_numbox.c	/^static void my_numbox_loadbang(t_my_numbox *x)$/;"	f	file:
my_numbox_log	g_numbox.c	/^static void my_numbox_log(t_my_numbox *x)$/;"	f	file:
my_numbox_log_height	g_numbox.c	/^static void my_numbox_log_height(t_my_numbox *x, t_floatarg lh)$/;"	f	file:
my_numbox_motion	g_numbox.c	/^static void my_numbox_motion(t_my_numbox *x, t_floatarg dx, t_floatarg dy)$/;"	f	file:
my_numbox_new	g_numbox.c	/^static void *my_numbox_new(t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
my_numbox_newclick	g_numbox.c	/^static int my_numbox_newclick(t_gobj *z, struct _glist *glist,$/;"	f	file:
my_numbox_pos	g_numbox.c	/^static void my_numbox_pos(t_my_numbox *x, t_symbol *s, int ac, t_atom *av)$/;"	f	file:
my_numbox_properties	g_numbox.c	/^static void my_numbox_properties(t_gobj *z, t_glist *owner)$/;"	f	file:
my_numbox_range	g_numbox.c	/^static void my_numbox_range(t_my_numbox *x, t_symbol *s, int ac, t_atom *av)$/;"	f	file:
my_numbox_receive	g_numbox.c	/^static void my_numbox_receive(t_my_numbox *x, t_symbol *s)$/;"	f	file:
my_numbox_save	g_numbox.c	/^static void my_numbox_save(t_gobj *z, t_binbuf *b)$/;"	f	file:
my_numbox_send	g_numbox.c	/^static void my_numbox_send(t_my_numbox *x, t_symbol *s)$/;"	f	file:
my_numbox_set	g_numbox.c	/^static void my_numbox_set(t_my_numbox *x, t_floatarg f)$/;"	f	file:
my_numbox_size	g_numbox.c	/^static void my_numbox_size(t_my_numbox *x, t_symbol *s, int ac, t_atom *av)$/;"	f	file:
my_numbox_tick_reset	g_numbox.c	/^static void my_numbox_tick_reset(t_my_numbox *x)$/;"	f	file:
my_numbox_tick_wait	g_numbox.c	/^static void my_numbox_tick_wait(t_my_numbox *x)$/;"	f	file:
my_numbox_widgetbehavior	g_numbox.c	/^t_widgetbehavior my_numbox_widgetbehavior;$/;"	v
n	d_fft_fftsg.c	/^    int n;$/;"	m	struct:cdft_arg_st	file:
n	d_fftroutine.c	/^        int             n;$/;"	m	struct:Tfft_net	file:
n	d_fftsg_h.c	/^    int n;$/;"	m	struct:cdft_arg_st	file:
n0	d_fft_fftsg.c	/^    int n0;$/;"	m	struct:cdft_arg_st	file:
n0	d_fftsg_h.c	/^    int n0;$/;"	m	struct:cdft_arg_st	file:
nNumBufferLines	s_midi_mmio.c	/^int  nNumBufferLines = 0;                \/\/ Number of lines in display buffer$/;"	v
namecanvas_class	x_misc.c	/^static t_class *namecanvas_class;$/;"	v	file:
namecanvas_free	x_misc.c	/^static void namecanvas_free(t_namecanvas *x)$/;"	f	file:
namecanvas_new	x_misc.c	/^static void *namecanvas_new(t_symbol *s)$/;"	f	file:
namecanvas_setup	x_misc.c	/^static void namecanvas_setup(void)$/;"	f	file:
namelist_append	s_path.c	/^t_namelist *namelist_append(t_namelist *listwas, const char *s, int allowdup)$/;"	f
namelist_append_files	s_path.c	/^t_namelist *namelist_append_files(t_namelist *listwas, const char *s)$/;"	f
namelist_free	s_path.c	/^void namelist_free(t_namelist *listwas)$/;"	f
namelist_get	s_path.c	/^char *namelist_get(t_namelist *namelist, int n)$/;"	f
nd_sysex_inword	s_midi_pm.c	/^void nd_sysex_inword(int midiindev, int status, int data1, int data2, int data3)$/;"	f
nd_sysex_mode	s_midi_pm.c	/^int nd_sysex_mode=0;$/;"	v
net_alloc	d_fftroutine.c	/^void net_alloc(FFT_NET *fft_net)$/;"	f
net_dealloc	d_fftroutine.c	/^void net_dealloc(FFT_NET *fft_net)$/;"	f
netreceive_class	x_net.c	/^static t_class *netreceive_class;$/;"	v	file:
netreceive_closeall	x_net.c	/^static void netreceive_closeall(t_netreceive *x)$/;"	f	file:
netreceive_connectpoll	x_net.c	/^static void netreceive_connectpoll(t_netreceive *x)$/;"	f	file:
netreceive_listen	x_net.c	/^static void netreceive_listen(t_netreceive *x, t_floatarg fportno)$/;"	f	file:
netreceive_new	x_net.c	/^static void *netreceive_new(t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
netreceive_notify	x_net.c	/^static void netreceive_notify(t_netreceive *x, int fd)$/;"	f	file:
netreceive_send	x_net.c	/^static void netreceive_send(t_netreceive *x, $/;"	f	file:
netreceive_setup	x_net.c	/^static void netreceive_setup(void)$/;"	f	file:
netsend_class	x_net.c	/^static t_class *netsend_class;$/;"	v	file:
netsend_connect	x_net.c	/^static void netsend_connect(t_netsend *x, t_symbol *hostname,$/;"	f	file:
netsend_disconnect	x_net.c	/^static void netsend_disconnect(t_netsend *x)$/;"	f	file:
netsend_doit	x_net.c	/^static void netsend_doit(void *z, t_binbuf *b)$/;"	f	file:
netsend_dosend	x_net.c	/^static int netsend_dosend(t_netsend *x, int sockfd,$/;"	f	file:
netsend_free	x_net.c	/^static void netsend_free(t_netsend *x)$/;"	f	file:
netsend_new	x_net.c	/^static void *netsend_new(t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
netsend_readbin	x_net.c	/^static void netsend_readbin(t_netsend *x, int fd)$/;"	f	file:
netsend_send	x_net.c	/^static void netsend_send(t_netsend *x, t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
netsend_setup	x_net.c	/^static void netsend_setup(void)$/;"	f	file:
new_anything	m_class.c	/^void new_anything(void *dummy, t_symbol *s, int argc, t_atom *argv)$/;"	f
newest	m_class.c	/^t_pd *newest;$/;"	v
next	d_fftroutine.c	/^        struct Tfft_net *next;  $/;"	m	struct:Tfft_net	typeref:struct:Tfft_net::Tfft_net	file:
next	s_loader.c	/^    struct loader_queue *next;$/;"	m	struct:loader_queue	typeref:struct:loader_queue::loader_queue	file:
nfdpoll	u_pdreceive.c	/^static int nfdpoll;$/;"	v	file:
nl_next	s_stuff.h	/^    struct _namelist *nl_next;  \/* next in list *\/$/;"	m	struct:_namelist	typeref:struct:_namelist::_namelist
nl_string	s_stuff.h	/^    char *nl_string;            \/* the string *\/$/;"	m	struct:_namelist
noise_class	d_osc.c	/^static t_class *noise_class;$/;"	v	file:
noise_dsp	d_osc.c	/^static void noise_dsp(t_noise *x, t_signal **sp)$/;"	f	file:
noise_new	d_osc.c	/^static void *noise_new(void)$/;"	f	file:
noise_perform	d_osc.c	/^static t_int *noise_perform(t_int *w)$/;"	f	file:
noise_setup	d_osc.c	/^static void noise_setup(void)$/;"	f	file:
notein_class	x_midi.c	/^static t_class *notein_class;$/;"	v	file:
notein_free	x_midi.c	/^static void notein_free(t_notein *x)$/;"	f	file:
notein_list	x_midi.c	/^static void notein_list(t_notein *x, t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
notein_new	x_midi.c	/^static void *notein_new(t_floatarg f)$/;"	f	file:
notein_setup	x_midi.c	/^static void notein_setup(void)$/;"	f	file:
noteout_class	x_midi.c	/^static t_class *noteout_class;$/;"	v	file:
noteout_float	x_midi.c	/^static void noteout_float(t_noteout *x, t_float f)$/;"	f	file:
noteout_new	x_midi.c	/^static void *noteout_new(t_floatarg channel)$/;"	f	file:
noteout_setup	x_midi.c	/^static void noteout_setup(void)$/;"	f	file:
ns_fileid	d_soundfile.c	/^    char ns_fileid[4];      \/* magic number '.snd' if file is big-endian *\/$/;"	m	struct:_nextstep	file:
ns_format	d_soundfile.c	/^    uint32_t ns_format;     \/* format; see below *\/$/;"	m	struct:_nextstep	file:
ns_info	d_soundfile.c	/^    char ns_info[4];        \/* comment *\/$/;"	m	struct:_nextstep	file:
ns_length	d_soundfile.c	/^    uint32_t ns_length;     \/* length of sound in bytes *\/$/;"	m	struct:_nextstep	file:
ns_nchans	d_soundfile.c	/^    uint32_t ns_nchans;     \/* number of channels *\/$/;"	m	struct:_nextstep	file:
ns_onset	d_soundfile.c	/^    uint32_t ns_onset;      \/* byte offset of first sample *\/$/;"	m	struct:_nextstep	file:
ns_sr	d_soundfile.c	/^    uint32_t ns_sr;         \/* sample rate *\/$/;"	m	struct:_nextstep	file:
nt_adcjitterbufsallowed	s_audio_mmio.c	/^static int nt_adcjitterbufsallowed = ADCJITTER;$/;"	v	file:
nt_dacjitterbufsallowed	s_audio_mmio.c	/^static int nt_dacjitterbufsallowed = DACJITTER;$/;"	v	file:
nt_errorcount	s_audio_mmio.c	/^static int nt_errorcount;$/;"	v	file:
nt_fill	s_audio_mmio.c	/^static int nt_fill = 0;$/;"	v	file:
nt_freq	s_inter.c	/^static double nt_freq = 0;$/;"	v	file:
nt_hibuftime	s_audio_mmio.c	/^static double nt_hibuftime;$/;"	v	file:
nt_inittime	s_inter.c	/^static LARGE_INTEGER nt_inittime;$/;"	v	file:
nt_inmax	s_audio_mmio.c	/^static float nt_inmax;       \/* max input amplitude *\/$/;"	v	file:
nt_logerror	s_audio_mmio.c	/^void nt_logerror(int which)$/;"	f
nt_meters	s_audio_mmio.c	/^static int nt_meters;        \/* true if we're metering *\/$/;"	v	file:
nt_midigettimefor	s_audio_mmio.c	/^static double nt_midigettimefor(LARGE_INTEGER timestamp)$/;"	f	file:
nt_midisync	s_audio_mmio.c	/^static void nt_midisync(void)$/;"	f	file:
nt_naudiobuffer	s_audio_mmio.c	/^static int nt_naudiobuffer = DEFBUFFER;$/;"	v	file:
nt_nextreporttime	s_audio_mmio.c	/^static double nt_nextreporttime = -1;$/;"	v	file:
nt_noresync	s_audio_mmio.c	/^static void nt_noresync( void)$/;"	f	file:
nt_nwavein	s_audio_mmio.c	/^static int nt_nwavein, nt_nwaveout;     \/* number of WAVE devices in and out *\/$/;"	v	file:
nt_nwaveout	s_audio_mmio.c	/^static int nt_nwavein, nt_nwaveout;     \/* number of WAVE devices in and out *\/$/;"	v	file:
nt_outmax	s_audio_mmio.c	/^static float nt_outmax;      \/* max output amplitude *\/$/;"	v	file:
nt_realdacblksize	s_audio_mmio.c	/^int nt_realdacblksize;$/;"	v
nt_resetmidisync	s_audio_mmio.c	/^static void nt_resetmidisync(void)$/;"	f	file:
nt_resync_cancelled	s_audio_mmio.c	/^static int nt_resync_cancelled;$/;"	v	file:
nt_resyncaudio	s_audio_mmio.c	/^static void nt_resyncaudio(void)$/;"	f	file:
nt_resynccount	s_audio_mmio.c	/^static int nt_resynccount;$/;"	v	file:
nt_waveinerror	s_audio_mmio.c	/^static void nt_waveinerror(char *s, int err)$/;"	f	file:
nt_waveouterror	s_audio_mmio.c	/^static void nt_waveouterror(char *s, int err)$/;"	f	file:
nt_whichadc	s_audio_mmio.c	/^static UINT nt_whichdac = WAVE_MAPPER, nt_whichadc = WAVE_MAPPER;$/;"	v	file:
nt_whichapi	s_audio_mmio.c	/^static int nt_whichapi = API_MMIO;$/;"	v	file:
nt_whichdac	s_audio_mmio.c	/^static UINT nt_whichdac = WAVE_MAPPER, nt_whichadc = WAVE_MAPPER;$/;"	v	file:
ntsnd_indev	s_audio_mmio.c	/^HWAVEIN ntsnd_indev[NAPORTS];               \/* input device *\/$/;"	v
ntsnd_inphase	s_audio_mmio.c	/^static int ntsnd_inphase[NAPORTS];          \/* index of next buffer to read *\/$/;"	v	file:
ntsnd_invec	s_audio_mmio.c	/^t_sbuf ntsnd_invec[NAPORTS][MAXBUFFER];     \/* circular buffer array *\/$/;"	v
ntsnd_outdev	s_audio_mmio.c	/^HWAVEOUT ntsnd_outdev[NAPORTS];             \/* output device *\/$/;"	v
ntsnd_outphase	s_audio_mmio.c	/^static int ntsnd_outphase[NAPORTS];         \/* index of next buffer to send *\/$/;"	v	file:
ntsnd_outvec	s_audio_mmio.c	/^t_sbuf ntsnd_outvec[NAPORTS][MAXBUFFER];    \/* circular buffer array *\/$/;"	v
nullfn	m_class.c	/^void nullfn(void) {}$/;"	f
numbertocolor	g_template.c	/^static void numbertocolor(int n, char *s)$/;"	f	file:
nw	d_fft_fftsg.c	/^    int nw;$/;"	m	struct:cdft_arg_st	file:
o_connections	d_ugen.c	/^    t_sigoutconnect *o_connections;$/;"	m	struct:_sigoutlet	file:
o_connections	m_obj.c	/^    t_outconnect *o_connections;$/;"	m	struct:_outlet	file:
o_nconnect	d_ugen.c	/^    int o_nconnect;$/;"	m	struct:_sigoutlet	file:
o_next	m_obj.c	/^    struct _outlet *o_next;$/;"	m	struct:_outlet	typeref:struct:_outlet::_outlet	file:
o_nsent	d_ugen.c	/^    int o_nsent;$/;"	m	struct:_sigoutlet	file:
o_owner	m_obj.c	/^    t_object *o_owner;$/;"	m	struct:_outlet	file:
o_signal	d_ugen.c	/^    t_signal *o_signal;$/;"	m	struct:_sigoutlet	file:
o_sym	m_obj.c	/^    t_symbol *o_sym;$/;"	m	struct:_outlet	file:
ob_binbuf	m_pd.h	244;"	d
ob_g	m_pd.h	246;"	d
ob_inlet	m_pd.h	243;"	d
ob_outlet	m_pd.h	242;"	d
ob_pd	m_pd.h	245;"	d
obj_connect	m_obj.c	/^t_outconnect *obj_connect(t_object *source, int outno,$/;"	f
obj_disconnect	m_obj.c	/^void obj_disconnect(t_object *source, int outno, t_object *sink, int inno)$/;"	f
obj_findsignalscalar	m_obj.c	/^t_float *obj_findsignalscalar(t_object *x, int m)$/;"	f
obj_init	m_obj.c	/^void obj_init(void)$/;"	f
obj_issignalinlet	m_obj.c	/^int obj_issignalinlet(t_object *x, int m)$/;"	f
obj_issignaloutlet	m_obj.c	/^int obj_issignaloutlet(t_object *x, int m)$/;"	f
obj_list	m_obj.c	/^void obj_list(t_object *x, t_symbol *s, int argc, t_atom *argv)$/;"	f
obj_moveinletfirst	m_obj.c	/^void obj_moveinletfirst(t_object *x, t_inlet *i)$/;"	f
obj_moveoutletfirst	m_obj.c	/^void obj_moveoutletfirst(t_object *x, t_outlet *o)$/;"	f
obj_nexttraverseoutlet	m_obj.c	/^t_outconnect *obj_nexttraverseoutlet(t_outconnect *lastconnect,$/;"	f
obj_ninlets	m_obj.c	/^int obj_ninlets(t_object *x)$/;"	f
obj_noutlets	m_obj.c	/^int obj_noutlets(t_object *x)$/;"	f
obj_nsiginlets	m_obj.c	/^int obj_nsiginlets(t_object *x)$/;"	f
obj_nsigoutlets	m_obj.c	/^int obj_nsigoutlets(t_object *x)$/;"	f
obj_saveformat	m_obj.c	/^void obj_saveformat(t_object *x, t_binbuf *bb)$/;"	f
obj_siginletindex	m_obj.c	/^int obj_siginletindex(t_object *x, int m)$/;"	f
obj_sigoutletindex	m_obj.c	/^int obj_sigoutletindex(t_object *x, int m)$/;"	f
obj_starttraverseoutlet	m_obj.c	/^t_outconnect *obj_starttraverseoutlet(t_object *x, t_outlet **op, int nout)$/;"	f
oc_inno	d_ugen.c	/^    int oc_inno;$/;"	m	struct:_sigoutconnect	file:
oc_next	d_ugen.c	/^    struct _sigoutconnect *oc_next;$/;"	m	struct:_sigoutconnect	typeref:struct:_sigoutconnect::_sigoutconnect	file:
oc_next	m_obj.c	/^    struct _outconnect *oc_next;$/;"	m	struct:_outconnect	typeref:struct:_outconnect::_outconnect	file:
oc_to	m_obj.c	/^    t_pd *oc_to;$/;"	m	struct:_outconnect	file:
oc_who	d_ugen.c	/^    t_ugenbox *oc_who;$/;"	m	struct:_sigoutconnect	file:
off_t	d_soundfile.c	34;"	d	file:
off_t	d_soundfile.c	39;"	d	file:
offsetsFromUTF8	s_utf8.c	/^static const uint32_t offsetsFromUTF8[6] = {$/;"	v	file:
ooura_bitrev	d_fft_fftsg.c	/^static int *ooura_bitrev;$/;"	v	file:
ooura_bitrevsize	d_fft_fftsg.c	/^static int ooura_bitrevsize;$/;"	v	file:
ooura_costab	d_fft_fftsg.c	/^static FFTFLT *ooura_costab;$/;"	v	file:
ooura_init	d_fft_fftsg.c	/^static int ooura_init( int n)$/;"	f	file:
ooura_maxn	d_fft_fftsg.c	/^static int ooura_maxn;$/;"	v	file:
open	d_soundfile.c	32;"	d	file:
open	s_path.c	44;"	d	file:
open_soundfile	d_soundfile.c	/^int open_soundfile(const char *dirname, const char *filename, int headersize,$/;"	f
open_soundfile_via_canvas	d_soundfile.c	/^int open_soundfile_via_canvas(t_canvas *canvas, const char *filename, int headersize,$/;"	f
open_soundfile_via_fd	d_soundfile.c	/^int open_soundfile_via_fd(int fd, int headersize,$/;"	f
open_via_helppath	s_path.c	/^void open_via_helppath(const char *name, const char *dir)$/;"	f
open_via_path	s_path.c	/^int open_via_path(const char *dir, const char *name, const char *ext,$/;"	f
openit	s_main.c	/^static void openit(const char *dirname, const char *filename)$/;"	f	file:
openpanel_bang	x_gui.c	/^static void openpanel_bang(t_openpanel *x)$/;"	f	file:
openpanel_callback	x_gui.c	/^static void openpanel_callback(t_openpanel *x, t_symbol *s)$/;"	f	file:
openpanel_class	x_gui.c	/^static t_class *openpanel_class;$/;"	v	file:
openpanel_free	x_gui.c	/^static void openpanel_free(t_openpanel *x)$/;"	f	file:
openpanel_new	x_gui.c	/^static void *openpanel_new( void)$/;"	f	file:
openpanel_setup	x_gui.c	/^static void openpanel_setup(void)$/;"	f	file:
openpanel_symbol	x_gui.c	/^static void openpanel_symbol(t_openpanel *x, t_symbol *s)$/;"	f	file:
osc_class	d_osc.c	/^static t_class *osc_class, *scalarosc_class;$/;"	v	file:
osc_dsp	d_osc.c	/^static void osc_dsp(t_osc *x, t_signal **sp)$/;"	f	file:
osc_ft1	d_osc.c	/^static void osc_ft1(t_osc *x, t_float f)$/;"	f	file:
osc_new	d_osc.c	/^static void *osc_new(t_floatarg f)$/;"	f	file:
osc_perform	d_osc.c	/^static t_int *osc_perform(t_int *w)$/;"	f	file:
osc_setup	d_osc.c	/^static void osc_setup(void)$/;"	f	file:
oss_blockmode	s_audio_oss.c	/^static int oss_blockmode = 1;   \/* flag to use "blockmode"  *\/$/;"	v	file:
oss_calcspace	s_audio_oss.c	/^static void oss_calcspace(void)$/;"	f	file:
oss_close_audio	s_audio_oss.c	/^void oss_close_audio( void)$/;"	f
oss_configure	s_audio_oss.c	/^void oss_configure(t_oss_dev *dev, int srate, int dac, int skipblocksize,$/;"	f
oss_doresync	s_audio_oss.c	/^static void oss_doresync( void)$/;"	f	file:
oss_errornames	m_sched.c	/^static char *(oss_errornames[]) = {$/;"	v	file:
oss_getdevs	s_audio_oss.c	/^void oss_getdevs(char *indevlist, int *nindevs,$/;"	f
oss_indevnames	s_midi_oss.c	/^static char oss_indevnames[NSEARCH][4], oss_outdevnames[NSEARCH][4];$/;"	v	file:
oss_init	s_audio_oss.c	/^void oss_init(void)$/;"	f
oss_initted	s_midi_oss.c	/^static int oss_nmidiindevs, oss_nmidioutdevs, oss_initted;$/;"	v	file:
oss_midiinfd	s_midi_oss.c	/^static int oss_midiinfd[MAXMIDIINDEV];$/;"	v	file:
oss_midiout	s_midi_oss.c	/^static void oss_midiout(int fd, int n)$/;"	f	file:
oss_midioutfd	s_midi_oss.c	/^static int oss_midioutfd[MAXMIDIOUTDEV];$/;"	v	file:
oss_ndev	s_audio_oss.c	/^static int oss_ndev = 0; $/;"	v	file:
oss_nmidiin	s_midi_oss.c	/^static int oss_nmidiin;$/;"	v	file:
oss_nmidiindevs	s_midi_oss.c	/^static int oss_nmidiindevs, oss_nmidioutdevs, oss_initted;$/;"	v	file:
oss_nmidiout	s_midi_oss.c	/^static int oss_nmidiout;$/;"	v	file:
oss_nmidioutdevs	s_midi_oss.c	/^static int oss_nmidiindevs, oss_nmidioutdevs, oss_initted;$/;"	v	file:
oss_nresync	m_sched.c	/^static int oss_nresync = 0;$/;"	v	file:
oss_open_audio	s_audio_oss.c	/^int oss_open_audio(int nindev,  int *indev,  int nchin,  int *chin,$/;"	f
oss_outdevnames	s_midi_oss.c	/^static char oss_indevnames[NSEARCH][4], oss_outdevnames[NSEARCH][4];$/;"	v	file:
oss_reset	s_audio_oss.c	/^int oss_reset(int fd) {$/;"	f
oss_resync	m_sched.c	/^static t_resync oss_resync[NRESYNC];$/;"	v	file:
oss_resyncphase	m_sched.c	/^static int oss_resyncphase = 0;$/;"	v	file:
oss_send_dacs	s_audio_oss.c	/^int oss_send_dacs(void)$/;"	f
oss_setchannels	s_audio_oss.c	/^static int oss_setchannels(int fd, int wantchannels, char *devname)$/;"	f	file:
ossdsp	s_audio_oss.c	/^static char ossdsp[] = "\/dev\/dsp%d"; $/;"	v	file:
out	d_fft_fftw.c	/^    fftwf_complex *in,*out;$/;"	m	struct:__anon1	file:
out	d_fft_fftw.c	/^    float *in,*out;$/;"	m	struct:__anon2	file:
out_avail	s_audio_alsamm.c	/^ static  int out_avail[WATCH_PERIODS];$/;"	v	file:
out_cm	s_audio_alsamm.c	/^ static  int out_cm[WATCH_PERIODS];$/;"	v	file:
out_offset	s_audio_alsamm.c	/^ static  int out_offset[WATCH_PERIODS];$/;"	v	file:
outaddr	s_audio_alsamm.c	/^ static  char *outaddr[WATCH_PERIODS];$/;"	v	file:
outaddr2	s_audio_alsamm.c	/^ static  char *outaddr2[WATCH_PERIODS];$/;"	v	file:
outlet_anything	m_obj.c	/^void outlet_anything(t_outlet *x, t_symbol *s, int argc, t_atom *argv)$/;"	f
outlet_bang	m_obj.c	/^void outlet_bang(t_outlet *x)$/;"	f
outlet_eventno	m_obj.c	/^static int outlet_eventno;$/;"	v	file:
outlet_float	m_obj.c	/^void outlet_float(t_outlet *x, t_float f)$/;"	f
outlet_free	m_obj.c	/^void outlet_free(t_outlet *x)$/;"	f
outlet_getsignalindex	m_obj.c	/^int outlet_getsignalindex(t_outlet *x)$/;"	f
outlet_getsymbol	m_obj.c	/^t_symbol *outlet_getsymbol(t_outlet *x)$/;"	f
outlet_list	m_obj.c	/^void outlet_list(t_outlet *x, t_symbol *s, int argc, t_atom *argv)$/;"	f
outlet_new	m_obj.c	/^t_outlet *outlet_new(t_object *owner, t_symbol *s)$/;"	f
outlet_pointer	m_obj.c	/^void outlet_pointer(t_outlet *x, t_gpointer *gp)$/;"	f
outlet_setstacklim	m_obj.c	/^void outlet_setstacklim(void)$/;"	f
outlet_stackerror	m_obj.c	/^static void outlet_stackerror(t_outlet *x)$/;"	f	file:
outlet_symbol	m_obj.c	/^void outlet_symbol(t_outlet *x, t_symbol *s)$/;"	f
outmidi_aftertouch	s_midi.c	/^void outmidi_aftertouch(int portno, int channel, int value)$/;"	f
outmidi_byte	s_midi.c	/^void outmidi_byte(int portno, int value)$/;"	f
outmidi_controlchange	s_midi.c	/^void outmidi_controlchange(int portno, int channel, int ctl, int value)$/;"	f
outmidi_mclk	s_midi.c	/^void outmidi_mclk(int portno)$/;"	f
outmidi_noteon	s_midi.c	/^void outmidi_noteon(int portno, int channel, int pitch, int velo)$/;"	f
outmidi_pitchbend	s_midi.c	/^void outmidi_pitchbend(int portno, int channel, int value)$/;"	f
outmidi_polyaftertouch	s_midi.c	/^void outmidi_polyaftertouch(int portno, int channel, int pitch, int value)$/;"	f
outmidi_programchange	s_midi.c	/^void outmidi_programchange(int portno, int channel, int value)$/;"	f
outport_count	s_audio_jack.c	/^static int outport_count = 0;$/;"	v	file:
output_port	s_audio_jack.c	/^static jack_port_t *output_port[MAX_JACK_PORTS];$/;"	v	file:
over_class	d_arithmetic.c	/^static t_class *over_class, *scalarover_class;$/;"	v	file:
over_dsp	d_arithmetic.c	/^static void over_dsp(t_over *x, t_signal **sp)$/;"	f	file:
over_new	d_arithmetic.c	/^static void *over_new(t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
over_perf8	d_arithmetic.c	/^t_int *over_perf8(t_int *w)$/;"	f
over_perform	d_arithmetic.c	/^t_int *over_perform(t_int *w)$/;"	f
over_setup	d_arithmetic.c	/^static void over_setup(void)$/;"	f	file:
p_atom	x_time.c	/^    t_atom p_atom;$/;"	m	struct:pipeout	file:
p_outlet	x_time.c	/^    t_outlet *p_outlet;$/;"	m	struct:pipeout	file:
pa_callback	s_audio_pa.c	/^static t_audiocallback pa_callback;$/;"	v	file:
pa_close_audio	s_audio_pa.c	/^void pa_close_audio( void)$/;"	f
pa_dio_error	s_audio_pa.c	/^static int pa_dio_error;$/;"	v	file:
pa_fifo_callback	s_audio_pa.c	/^static int pa_fifo_callback(const void *inputBuffer,$/;"	f	file:
pa_getdevs	s_audio_pa.c	/^void pa_getdevs(char *indevlist, int *nindevs,$/;"	f
pa_inbuf	s_audio_pa.c	/^static PA_VOLATILE char *pa_inbuf;$/;"	v	file:
pa_inchans	s_audio_pa.c	/^static int pa_inchans, pa_outchans;$/;"	v	file:
pa_init	s_audio_pa.c	/^static void pa_init(void)        \/* Initialize PortAudio  *\/$/;"	f	file:
pa_inring	s_audio_pa.c	/^static PA_VOLATILE sys_ringbuf pa_inring;$/;"	v	file:
pa_lowlevel_callback	s_audio_pa.c	/^static int pa_lowlevel_callback(const void *inputBuffer,$/;"	f	file:
pa_mutex	s_audio_pa.c	/^pthread_mutex_t pa_mutex;$/;"	v
pa_nbuffers	s_audio_pa.c	/^static int pa_nbuffers;$/;"	v	file:
pa_open_audio	s_audio_pa.c	/^int pa_open_audio(int inchans, int outchans, int rate, t_sample *soundin,$/;"	f
pa_open_callback	s_audio_pa.c	/^PaError pa_open_callback(double sampleRate, int inchannels, int outchannels,$/;"	f
pa_outbuf	s_audio_pa.c	/^static PA_VOLATILE char *pa_outbuf;$/;"	v	file:
pa_outchans	s_audio_pa.c	/^static int pa_inchans, pa_outchans;$/;"	v	file:
pa_outring	s_audio_pa.c	/^static PA_VOLATILE sys_ringbuf pa_outring;$/;"	v	file:
pa_sem	s_audio_pa.c	/^pthread_cond_t pa_sem;$/;"	v
pa_send_dacs	s_audio_pa.c	/^int pa_send_dacs(void)$/;"	f
pa_soundin	s_audio_pa.c	/^static float *pa_soundin, *pa_soundout;$/;"	v	file:
pa_soundout	s_audio_pa.c	/^static float *pa_soundin, *pa_soundout;$/;"	v	file:
pa_started	s_audio_pa.c	/^static int pa_started;$/;"	v	file:
pa_stream	s_audio_pa.c	/^static PaStream *pa_stream;$/;"	v	file:
pack_anything	x_connective.c	/^static void pack_anything(t_pack *x, t_symbol *s, int ac, t_atom *av)$/;"	f	file:
pack_bang	x_connective.c	/^static void pack_bang(t_pack *x)$/;"	f	file:
pack_class	x_connective.c	/^static t_class *pack_class;$/;"	v	file:
pack_float	x_connective.c	/^static void pack_float(t_pack *x, t_float f)$/;"	f	file:
pack_free	x_connective.c	/^static void pack_free(t_pack *x)$/;"	f	file:
pack_list	x_connective.c	/^static void pack_list(t_pack *x, t_symbol *s, int ac, t_atom *av)$/;"	f	file:
pack_new	x_connective.c	/^static void *pack_new(t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
pack_pointer	x_connective.c	/^static void pack_pointer(t_pack *x, t_gpointer *gp)$/;"	f	file:
pack_setup	x_connective.c	/^static void pack_setup(void)$/;"	f	file:
pack_symbol	x_connective.c	/^static void pack_symbol(t_pack *x, t_symbol *s)$/;"	f	file:
parsetimeunits	x_time.c	/^void parsetimeunits(void *x, t_float amount, t_symbol *unitname,$/;"	f
paste_canvas	g_editor.c	/^static t_canvas *paste_canvas;$/;"	v	file:
paste_onset	g_editor.c	/^static int paste_onset;$/;"	v	file:
pd_bang	m_pd.c	/^void pd_bang(t_pd *x)$/;"	f
pd_bendin_sym	m_imp.h	/^    t_symbol *pd_bendin_sym;$/;"	m	struct:_pdinstance
pd_bind	m_pd.c	/^void pd_bind(t_pd *x, t_symbol *s)$/;"	f
pd_canvaslist	m_imp.h	/^    t_canvas *pd_canvaslist;    \/* list of all root canvases *\/$/;"	m	struct:_pdinstance
pd_canvasmaker	m_class.c	/^t_pd pd_canvasmaker;    \/* factory for creating canvases *\/$/;"	v
pd_canvasmaker	m_pd.h	/^EXTERN t_pd pd_canvasmaker;     \/* factory for creating canvases *\/$/;"	v
pd_checkglist	g_canvas.c	/^t_glist *pd_checkglist(t_pd *x)$/;"	f
pd_checkobject	m_obj.c	/^t_object *pd_checkobject(t_pd *x)$/;"	f
pd_class	m_pd.h	403;"	d
pd_clock_setlist	m_imp.h	/^    t_clock *pd_clock_setlist;  \/* list of set clocks *\/$/;"	m	struct:_pdinstance
pd_compatibilitylevel	m_glob.c	/^int pd_compatibilitylevel = 100000;  \/* e.g., 43 for pd 0.43 compatibility *\/$/;"	v
pd_compiledate	s_main.c	/^char pd_compiledate[] = __DATE__;$/;"	v
pd_compiletime	s_main.c	/^char pd_compiletime[] = __TIME__;$/;"	v
pd_ctlin_sym	m_imp.h	/^    t_symbol *pd_ctlin_sym;$/;"	m	struct:_pdinstance
pd_defaultanything	m_class.c	/^static void pd_defaultanything(t_pd *x, t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
pd_defaultbang	m_class.c	/^static void pd_defaultbang(t_pd *x)$/;"	f	file:
pd_defaultfloat	m_class.c	/^static void pd_defaultfloat(t_pd *x, t_float f)$/;"	f	file:
pd_defaultlist	m_class.c	/^static void pd_defaultlist(t_pd *x, t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
pd_defaultpointer	m_class.c	/^static void pd_defaultpointer(t_pd *x, t_gpointer *gp)$/;"	f	file:
pd_defaultsymbol	m_class.c	/^static void pd_defaultsymbol(t_pd *x, t_symbol *s)$/;"	f	file:
pd_doloadbang	m_pd.c	/^void pd_doloadbang(void)$/;"	f
pd_dspchain	m_imp.h	/^    t_int *pd_dspchain;         \/* DSP chain *\/$/;"	m	struct:_pdinstance
pd_dspchainsize	m_imp.h	/^    int pd_dspchainsize;        \/* number of elements in DSP chain *\/$/;"	m	struct:_pdinstance
pd_dspstate	m_imp.h	/^    int pd_dspstate;            \/* whether DSP is on or off *\/$/;"	m	struct:_pdinstance
pd_emptylist	m_class.c	/^void pd_emptylist(t_pd *x)$/;"	f
pd_error	s_print.c	/^void pd_error(void *object, const char *fmt, ...)$/;"	f
pd_fft	d_fftroutine.c	/^void pd_fft(t_float *buf, int npoints, int inverse)$/;"	f
pd_findbyclass	m_pd.c	/^t_pd *pd_findbyclass(t_symbol *s, t_class *c)$/;"	f
pd_float	m_pd.c	/^void pd_float(t_pd *x, t_float f)$/;"	f
pd_floatforsignal	m_class.c	/^static void pd_floatforsignal(t_pd *x, t_float f)$/;"	f	file:
pd_forwardmess	m_class.c	/^void pd_forwardmess(t_pd *x, int argc, t_atom *argv)$/;"	f
pd_free	m_pd.c	/^void pd_free(t_pd *x)$/;"	f
pd_getcanvaslist	m_pd.c	/^EXTERN t_canvas *pd_getcanvaslist(void)$/;"	f
pd_getparentwidget	m_class.c	/^t_parentwidgetbehavior *pd_getparentwidget(t_pd *x)$/;"	f
pd_init	m_pd.c	/^void pd_init(void)$/;"	f
pd_jack_error_callback	s_audio_jack.c	/^static void pd_jack_error_callback(const char *desc) {$/;"	f	file:
pd_list	m_pd.c	/^void pd_list(t_pd *x, t_symbol *s, int argc, t_atom *argv)$/;"	f
pd_loadingabstraction	m_pd.c	/^static t_symbol *pd_loadingabstraction;$/;"	v	file:
pd_midiclkin_sym	m_imp.h	/^    t_symbol *pd_midiclkin_sym;$/;"	m	struct:_pdinstance
pd_midiin_sym	m_imp.h	/^    t_symbol *pd_midiin_sym;    \/* symbols bound to incoming MIDI... *\/$/;"	m	struct:_pdinstance
pd_midirealtimein_sym	m_imp.h	/^    t_symbol *pd_midirealtimein_sym;$/;"	m	struct:_pdinstance
pd_new	m_pd.c	/^t_pd *pd_new(t_class *c)$/;"	f
pd_newest	m_class.c	/^t_pd *pd_newest(void)$/;"	f
pd_notein_sym	m_imp.h	/^    t_symbol *pd_notein_sym;$/;"	m	struct:_pdinstance
pd_objectmaker	m_class.c	/^t_pd pd_objectmaker;    \/* factory for creating "object" boxes *\/$/;"	v
pd_objectmaker	m_pd.h	/^EXTERN t_pd pd_objectmaker;     \/* factory for creating "object" boxes *\/$/;"	v
pd_pgmin_sym	m_imp.h	/^    t_symbol *pd_pgmin_sym;$/;"	m	struct:_pdinstance
pd_pointer	m_pd.c	/^void pd_pointer(t_pd *x, t_gpointer *gp)$/;"	f
pd_polytouchin_sym	m_imp.h	/^    t_symbol *pd_polytouchin_sym;$/;"	m	struct:_pdinstance
pd_popsym	m_pd.c	/^void pd_popsym(t_pd *x)$/;"	f
pd_pushsym	m_pd.c	/^void pd_pushsym(t_pd *x)$/;"	f
pd_setinstance	m_pd.c	/^EXTERN void pd_setinstance(t_pdinstance *x)$/;"	f
pd_setloadingabstraction	m_pd.c	/^int pd_setloadingabstraction(t_symbol *sym)$/;"	f
pd_symbol	m_pd.c	/^void pd_symbol(t_pd *x, t_symbol *s)$/;"	f
pd_sysexin_sym	m_imp.h	/^    t_symbol *pd_sysexin_sym;$/;"	m	struct:_pdinstance
pd_systime	m_imp.h	/^    double pd_systime;          \/* global time in Pd ticks *\/$/;"	m	struct:_pdinstance
pd_this	m_pd.c	/^t_pdinstance *pd_this;$/;"	v
pd_touchin_sym	m_imp.h	/^    t_symbol *pd_touchin_sym;$/;"	m	struct:_pdinstance
pd_typedmess	m_class.c	/^void pd_typedmess(t_pd *x, t_symbol *s, int argc, t_atom *argv)$/;"	f
pd_unbind	m_pd.c	/^void pd_unbind(t_pd *x, t_symbol *s)$/;"	f
pd_version	s_main.c	/^char *pd_version = "Pd-" stringify(PD_MAJOR_VERSION) "." stringify(PD_MINOR_VERSION) "." stringify(PD_BUGFIX_VERSION) " (" stringify(PD_TEST_VERSION) ")";$/;"	v
pd_vmess	m_class.c	/^void pd_vmess(t_pd *x, t_symbol *sel, char *fmt, ...)$/;"	f
pdfloat_bang	x_connective.c	/^static void pdfloat_bang(t_pdfloat *x)$/;"	f	file:
pdfloat_class	x_connective.c	/^static t_class *pdfloat_class;$/;"	v	file:
pdfloat_float	x_connective.c	/^static void pdfloat_float(t_pdfloat *x, t_float f)$/;"	f	file:
pdfloat_new	x_connective.c	/^static void *pdfloat_new(t_pd *dummy, t_float f)$/;"	f	file:
pdfloat_new2	x_connective.c	/^static void *pdfloat_new2(t_floatarg f)$/;"	f	file:
pdfloat_send	x_connective.c	/^static void pdfloat_send(t_pdfloat *x, t_symbol *s)$/;"	f	file:
pdfloat_setup	x_connective.c	/^void pdfloat_setup(void)$/;"	f
pdinstance_donew	m_pd.c	/^static t_pdinstance *pdinstance_donew(int useprefix)$/;"	f	file:
pdinstance_free	m_pd.c	/^EXTERN void pdinstance_free(t_pdinstance *x)$/;"	f
pdinstance_new	m_pd.c	/^EXTERN t_pdinstance *pdinstance_new(void)$/;"	f
pdint_bang	x_connective.c	/^static void pdint_bang(t_pdint *x)$/;"	f	file:
pdint_class	x_connective.c	/^static t_class *pdint_class;$/;"	v	file:
pdint_float	x_connective.c	/^static void pdint_float(t_pdint *x, t_float f)$/;"	f	file:
pdint_new	x_connective.c	/^static void *pdint_new(t_floatarg f)$/;"	f	file:
pdint_send	x_connective.c	/^static void pdint_send(t_pdint *x, t_symbol *s)$/;"	f	file:
pdint_setup	x_connective.c	/^void pdint_setup(void)$/;"	f
pdsymbol_anything	x_connective.c	/^static void pdsymbol_anything(t_pdsymbol *x, t_symbol *s, int ac, t_atom *av)$/;"	f	file:
pdsymbol_bang	x_connective.c	/^static void pdsymbol_bang(t_pdsymbol *x)$/;"	f	file:
pdsymbol_class	x_connective.c	/^static t_class *pdsymbol_class;$/;"	v	file:
pdsymbol_list	x_connective.c	/^static void pdsymbol_list(t_pdsymbol *x, t_symbol *s, int ac, t_atom *av)$/;"	f	file:
pdsymbol_new	x_connective.c	/^static void *pdsymbol_new(t_pd *dummy, t_symbol *s)$/;"	f	file:
pdsymbol_setup	x_connective.c	/^void pdsymbol_setup(void)$/;"	f
pdsymbol_symbol	x_connective.c	/^static void pdsymbol_symbol(t_pdsymbol *x, t_symbol *s)$/;"	f	file:
pgmin_class	x_midi.c	/^static t_class *pgmin_class;$/;"	v	file:
pgmin_free	x_midi.c	/^static void pgmin_free(t_pgmin *x)$/;"	f	file:
pgmin_list	x_midi.c	/^static void pgmin_list(t_pgmin *x, t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
pgmin_new	x_midi.c	/^static void *pgmin_new(t_floatarg f)$/;"	f	file:
pgmin_setup	x_midi.c	/^static void pgmin_setup(void)$/;"	f	file:
pgmout_class	x_midi.c	/^static t_class *pgmout_class;$/;"	v	file:
pgmout_float	x_midi.c	/^static void pgmout_float(t_pgmout *x, t_floatarg f)$/;"	f	file:
pgmout_new	x_midi.c	/^static void *pgmout_new(t_floatarg channel)$/;"	f	file:
pgmout_setup	x_midi.c	/^static void pgmout_setup(void)$/;"	f	file:
phasor_class	d_osc.c	/^static t_class *phasor_class, *scalarphasor_class;$/;"	v	file:
phasor_dsp	d_osc.c	/^static void phasor_dsp(t_phasor *x, t_signal **sp)$/;"	f	file:
phasor_ft1	d_osc.c	/^static void phasor_ft1(t_phasor *x, t_float f)$/;"	f	file:
phasor_new	d_osc.c	/^static void *phasor_new(t_floatarg f)$/;"	f	file:
phasor_perform	d_osc.c	/^static t_int *phasor_perform(t_int *w)$/;"	f	file:
phasor_setup	d_osc.c	/^static void phasor_setup(void)$/;"	f	file:
pipe_class	x_time.c	/^static t_class *pipe_class;$/;"	v	file:
pipe_clear	x_time.c	/^static void pipe_clear(t_pipe *x)$/;"	f	file:
pipe_flush	x_time.c	/^static void pipe_flush(t_pipe *x)$/;"	f	file:
pipe_list	x_time.c	/^static void pipe_list(t_pipe *x, t_symbol *s, int ac, t_atom *av)$/;"	f	file:
pipe_new	x_time.c	/^static void *pipe_new(t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
pipe_setup	x_time.c	/^static void pipe_setup(void)$/;"	f	file:
pipeout	x_time.c	/^typedef struct pipeout$/;"	s	file:
plan	d_fft_fftw.c	/^    fftwf_plan plan;$/;"	m	struct:__anon1	file:
plan	d_fft_fftw.c	/^    fftwf_plan plan;$/;"	m	struct:__anon2	file:
plot_activate	g_template.c	/^static void plot_activate(t_gobj *z, t_glist *glist,$/;"	f	file:
plot_class	g_template.c	/^t_class *plot_class;$/;"	v
plot_click	g_template.c	/^static int plot_click(t_gobj *z, t_glist *glist, $/;"	f	file:
plot_displace	g_template.c	/^static void plot_displace(t_gobj *z, t_glist *glist,$/;"	f	file:
plot_float	g_template.c	/^void plot_float(t_plot *x, t_floatarg f)$/;"	f
plot_getrect	g_template.c	/^static void plot_getrect(t_gobj *z, t_glist *glist,$/;"	f	file:
plot_new	g_template.c	/^static void *plot_new(t_symbol *classsym, int argc, t_atom *argv)$/;"	f	file:
plot_readownertemplate	g_template.c	/^static int plot_readownertemplate(t_plot *x,$/;"	f	file:
plot_select	g_template.c	/^static void plot_select(t_gobj *z, t_glist *glist,$/;"	f	file:
plot_setup	g_template.c	/^static void plot_setup(void)$/;"	f	file:
plot_vis	g_template.c	/^static void plot_vis(t_gobj *z, t_glist *glist, $/;"	f	file:
plot_widgetbehavior	g_template.c	/^t_parentwidgetbehavior plot_widgetbehavior =$/;"	v
plus_class	d_arithmetic.c	/^static t_class *plus_class, *scalarplus_class;$/;"	v	file:
plus_dsp	d_arithmetic.c	/^static void plus_dsp(t_plus *x, t_signal **sp)$/;"	f	file:
plus_new	d_arithmetic.c	/^static void *plus_new(t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
plus_perf8	d_arithmetic.c	/^t_int *plus_perf8(t_int *w)$/;"	f
plus_perform	d_arithmetic.c	/^t_int *plus_perform(t_int *w)$/;"	f
plus_setup	d_arithmetic.c	/^static void plus_setup(void)$/;"	f	file:
pointerinlet_class	m_obj.c	/^static t_class *inlet_class, *pointerinlet_class, *floatinlet_class,$/;"	v	file:
pointerinlet_new	m_obj.c	/^t_inlet *pointerinlet_new(t_object *owner, t_gpointer *gp)$/;"	f
pointerinlet_pointer	m_obj.c	/^static void pointerinlet_pointer(t_inlet *x, t_gpointer *gp)$/;"	f	file:
pointertobinbuf	g_traversal.c	/^t_binbuf *pointertobinbuf(t_pd *x, t_gpointer *gp, t_symbol *s,$/;"	f
pollprocess	s_audio_jack.c	/^static int pollprocess(jack_nframes_t nframes, void *arg)$/;"	f	file:
poly	x_midi.c	/^typedef struct poly$/;"	s	file:
poly_class	x_midi.c	/^static t_class *poly_class;$/;"	v	file:
poly_clear	x_midi.c	/^static void poly_clear(t_poly *x)$/;"	f	file:
poly_float	x_midi.c	/^static void poly_float(t_poly *x, t_float f)$/;"	f	file:
poly_free	x_midi.c	/^static void poly_free(t_poly *x)$/;"	f	file:
poly_new	x_midi.c	/^static void *poly_new(t_float fnvoice, t_float fsteal)$/;"	f	file:
poly_setup	x_midi.c	/^static void poly_setup(void)$/;"	f	file:
poly_stop	x_midi.c	/^static void poly_stop(t_poly *x)$/;"	f	file:
polytouchin_class	x_midi.c	/^static t_class *polytouchin_class;$/;"	v	file:
polytouchin_free	x_midi.c	/^static void polytouchin_free(t_polytouchin *x)$/;"	f	file:
polytouchin_list	x_midi.c	/^static void polytouchin_list(t_polytouchin *x, t_symbol *s, int argc,$/;"	f	file:
polytouchin_new	x_midi.c	/^static void *polytouchin_new(t_floatarg f)$/;"	f	file:
polytouchin_setup	x_midi.c	/^static void polytouchin_setup(void)$/;"	f	file:
polytouchout_class	x_midi.c	/^static t_class *polytouchout_class;$/;"	v	file:
polytouchout_float	x_midi.c	/^static void polytouchout_float(t_polytouchout *x, t_float n)$/;"	f	file:
polytouchout_new	x_midi.c	/^static void *polytouchout_new(t_floatarg channel)$/;"	f	file:
polytouchout_setup	x_midi.c	/^static void polytouchout_setup(void)$/;"	f	file:
post	s_print.c	/^void post(const char *fmt, ...)$/;"	f
postatom	s_print.c	/^void postatom(int argc, t_atom *argv)$/;"	f
postfloat	s_print.c	/^void postfloat(t_float f)$/;"	f
poststring	s_print.c	/^void poststring(const char *s)$/;"	f
pow_tilde_class	d_math.c	/^static t_class *pow_tilde_class;$/;"	v	file:
pow_tilde_dsp	d_math.c	/^static void pow_tilde_dsp(t_pow_tilde *x, t_signal **sp)$/;"	f	file:
pow_tilde_new	d_math.c	/^static void *pow_tilde_new(t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
pow_tilde_perform	d_math.c	/^t_int *pow_tilde_perform(t_int *w)$/;"	f
pow_tilde_setup	d_math.c	/^static void pow_tilde_setup(void)$/;"	f	file:
power_of_two	d_fftroutine.c	/^BOOL power_of_two(n)$/;"	f
powtodb	x_acoustics.c	/^t_float powtodb(t_float f)$/;"	f
powtodb_class	x_acoustics.c	/^static t_class *powtodb_class;$/;"	v	file:
powtodb_float	x_acoustics.c	/^static void powtodb_float(t_object *x, t_float f)$/;"	f	file:
powtodb_new	x_acoustics.c	/^static void *powtodb_new(void)$/;"	f	file:
powtodb_tilde	d_math.c	/^typedef struct powtodb_tilde$/;"	s	file:
powtodb_tilde_class	d_math.c	/^t_class *powtodb_tilde_class;$/;"	v
powtodb_tilde_dsp	d_math.c	/^static void powtodb_tilde_dsp(t_powtodb_tilde *x, t_signal **sp)$/;"	f	file:
powtodb_tilde_new	d_math.c	/^static void *powtodb_tilde_new(void)$/;"	f	file:
powtodb_tilde_perform	d_math.c	/^static t_int *powtodb_tilde_perform(t_int *w)$/;"	f	file:
powtodb_tilde_setup	d_math.c	/^void powtodb_tilde_setup(void)$/;"	f
print_anything	x_interface.c	/^static void print_anything(t_print *x, t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
print_bang	d_misc.c	/^static void print_bang(t_print *x)$/;"	f	file:
print_bang	x_interface.c	/^static void print_bang(t_print *x)$/;"	f	file:
print_class	d_misc.c	/^static t_class *print_class;$/;"	v	file:
print_class	x_interface.c	/^static t_class *print_class;$/;"	v	file:
print_dsp	d_misc.c	/^static void print_dsp(t_print *x, t_signal **sp)$/;"	f	file:
print_float	d_misc.c	/^static void print_float(t_print *x, t_float f)$/;"	f	file:
print_float	x_interface.c	/^static void print_float(t_print *x, t_float f)$/;"	f	file:
print_list	x_interface.c	/^static void print_list(t_print *x, t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
print_new	d_misc.c	/^static void *print_new(t_symbol *s)$/;"	f	file:
print_new	x_interface.c	/^static void *print_new(t_symbol *sel, int argc, t_atom *argv)$/;"	f	file:
print_perform	d_misc.c	/^static t_int *print_perform(t_int *w)$/;"	f	file:
print_pointer	x_interface.c	/^static void print_pointer(t_print *x, t_gpointer *gp)$/;"	f	file:
print_setup	d_misc.c	/^static void print_setup(void)$/;"	f	file:
print_setup	x_interface.c	/^static void print_setup(void)$/;"	f	file:
protocol	u_pdreceive.c	/^static int protocol;$/;"	v	file:
ptrobj_bang	g_traversal.c	/^static void ptrobj_bang(t_ptrobj *x)$/;"	f	file:
ptrobj_class	g_traversal.c	/^static t_class *ptrobj_class;$/;"	v	file:
ptrobj_free	g_traversal.c	/^static void ptrobj_free(t_ptrobj *x)$/;"	f	file:
ptrobj_new	g_traversal.c	/^static void *ptrobj_new(t_symbol *classname, int argc, t_atom *argv)$/;"	f	file:
ptrobj_next	g_traversal.c	/^static void ptrobj_next(t_ptrobj *x)$/;"	f	file:
ptrobj_pointer	g_traversal.c	/^static void ptrobj_pointer(t_ptrobj *x, t_gpointer *gp)$/;"	f	file:
ptrobj_rewind	g_traversal.c	/^static void ptrobj_rewind(t_ptrobj *x)$/;"	f	file:
ptrobj_send	g_traversal.c	/^static void ptrobj_send(t_ptrobj *x, t_symbol *s)$/;"	f	file:
ptrobj_sendwindow	g_traversal.c	/^static void ptrobj_sendwindow(t_ptrobj *x, t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
ptrobj_setup	g_traversal.c	/^static void ptrobj_setup(void)$/;"	f	file:
ptrobj_traverse	g_traversal.c	/^static void ptrobj_traverse(t_ptrobj *x, t_symbol *s)$/;"	f	file:
ptrobj_vnext	g_traversal.c	/^static void ptrobj_vnext(t_ptrobj *x, t_float f)$/;"	f	file:
q8_rsqrt	d_math.c	/^t_float q8_rsqrt(t_float f0)$/;"	f
q8_sqrt	d_math.c	/^t_float q8_sqrt(t_float f0)$/;"	f
q_byte1	s_midi.c	/^    unsigned char q_byte1;$/;"	m	struct:_midiqelem	file:
q_byte2	s_midi.c	/^    unsigned char q_byte2;$/;"	m	struct:_midiqelem	file:
q_byte3	s_midi.c	/^    unsigned char q_byte3;$/;"	m	struct:_midiqelem	file:
q_onebyte	s_midi.c	/^    unsigned char q_onebyte;$/;"	m	struct:_midiqelem	file:
q_portno	s_midi.c	/^    int q_portno;$/;"	m	struct:_midiqelem	file:
q_time	s_midi.c	/^    double q_time;$/;"	m	struct:_midiqelem	file:
qlist_add	x_text.c	/^static void qlist_add(t_qlist *x, t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
qlist_add2	x_text.c	/^static void qlist_add2(t_qlist *x, t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
qlist_bang	x_text.c	/^static void qlist_bang(t_qlist *x)$/;"	f	file:
qlist_class	x_text.c	/^static t_class *qlist_class;$/;"	v	file:
qlist_clear	x_text.c	/^static void qlist_clear(t_qlist *x)$/;"	f	file:
qlist_donext	x_text.c	/^static void qlist_donext(t_qlist *x, int drop, int automatic)$/;"	f	file:
qlist_free	x_text.c	/^static void qlist_free(t_qlist *x)$/;"	f	file:
qlist_new	x_text.c	/^static void *qlist_new( void)$/;"	f	file:
qlist_next	x_text.c	/^static void qlist_next(t_qlist *x, t_floatarg drop)$/;"	f	file:
qlist_print	x_text.c	/^static void qlist_print(t_qlist *x)$/;"	f	file:
qlist_read	x_text.c	/^static void qlist_read(t_qlist *x, t_symbol *filename, t_symbol *format)$/;"	f	file:
qlist_rewind	x_text.c	/^static void qlist_rewind(t_qlist *x)$/;"	f	file:
qlist_set	x_text.c	/^static void qlist_set(t_qlist *x, t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
qlist_tempo	x_text.c	/^static void qlist_tempo(t_qlist *x, t_float f)$/;"	f	file:
qlist_tick	x_text.c	/^static void qlist_tick(t_qlist *x)$/;"	f	file:
qlist_write	x_text.c	/^static void qlist_write(t_qlist *x, t_symbol *filename, t_symbol *format)$/;"	f	file:
qrsqrt	d_math.c	/^t_float qrsqrt(t_float f) {return (q8_rsqrt(f)); }$/;"	f
qsqrt	d_math.c	/^t_float qsqrt(t_float f) {return (q8_sqrt(f)); }$/;"	f
r_error	m_sched.c	/^    int r_error;$/;"	m	struct:_resync	file:
r_ntick	m_sched.c	/^    int r_ntick;$/;"	m	struct:_resync	file:
random_bang	x_misc.c	/^static void random_bang(t_random *x)$/;"	f	file:
random_class	x_misc.c	/^static t_class *random_class;$/;"	v	file:
random_new	x_misc.c	/^static void *random_new(t_floatarg f)$/;"	f	file:
random_seed	x_misc.c	/^static void random_seed(t_random *x, t_float f, t_float glob)$/;"	f	file:
random_setup	x_misc.c	/^static void random_setup(void)$/;"	f	file:
rangecolor	g_template.c	/^static int rangecolor(int n)    \/* 0 to 9 in 5 steps *\/$/;"	f	file:
rdft	d_fft_fftsg.c	/^void rdft(int n, int isgn, double *a, int *ip, double *w)$/;"	f
rdft	d_fftsg_h.c	/^void rdft(int n, int isgn, double *a)$/;"	f
readIndex	s_audio_paring.h	/^    PA_VOLATILE long   readIndex;  \/* Index of next readable byte.$/;"	m	struct:__anon8
readsf_child_main	d_soundfile.c	/^static void *readsf_child_main(void *zz)$/;"	f	file:
readsf_class	d_soundfile.c	/^static t_class *readsf_class;$/;"	v	file:
readsf_dsp	d_soundfile.c	/^static void readsf_dsp(t_readsf *x, t_signal **sp)$/;"	f	file:
readsf_fakewait	d_soundfile.c	/^static void readsf_fakewait(pthread_mutex_t *b)$/;"	f	file:
readsf_float	d_soundfile.c	/^static void readsf_float(t_readsf *x, t_floatarg f)$/;"	f	file:
readsf_free	d_soundfile.c	/^static void readsf_free(t_readsf *x)$/;"	f	file:
readsf_new	d_soundfile.c	/^static void *readsf_new(t_floatarg fnchannels, t_floatarg fbufsize)$/;"	f	file:
readsf_open	d_soundfile.c	/^static void readsf_open(t_readsf *x, t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
readsf_perform	d_soundfile.c	/^static t_int *readsf_perform(t_int *w)$/;"	f	file:
readsf_print	d_soundfile.c	/^static void readsf_print(t_readsf *x)$/;"	f	file:
readsf_setup	d_soundfile.c	/^static void readsf_setup(void)$/;"	f	file:
readsf_start	d_soundfile.c	/^static void readsf_start(t_readsf *x)$/;"	f	file:
readsf_stop	d_soundfile.c	/^static void readsf_stop(t_readsf *x)$/;"	f	file:
readsf_tick	d_soundfile.c	/^static void readsf_tick(t_readsf *x)$/;"	f	file:
realtime_bang	x_misc.c	/^static void realtime_bang(t_realtime *x)$/;"	f	file:
realtime_bang2	x_misc.c	/^static void realtime_bang2(t_realtime *x)$/;"	f	file:
realtime_class	x_misc.c	/^static t_class *realtime_class;$/;"	v	file:
realtime_new	x_misc.c	/^static void *realtime_new(void)$/;"	f	file:
realtime_setup	x_misc.c	/^static void realtime_setup(void)$/;"	f	file:
receive_anything	x_connective.c	/^static void receive_anything(t_receive *x, t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
receive_bang	x_connective.c	/^static void receive_bang(t_receive *x)$/;"	f	file:
receive_class	x_connective.c	/^static t_class *receive_class;$/;"	v	file:
receive_float	x_connective.c	/^static void receive_float(t_receive *x, t_float f)$/;"	f	file:
receive_free	x_connective.c	/^static void receive_free(t_receive *x)$/;"	f	file:
receive_list	x_connective.c	/^static void receive_list(t_receive *x, t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
receive_new	x_connective.c	/^static void *receive_new(t_symbol *s)$/;"	f	file:
receive_pointer	x_connective.c	/^static void receive_pointer(t_receive *x, t_gpointer *gp)$/;"	f	file:
receive_setup	x_connective.c	/^static void receive_setup(void)$/;"	f	file:
receive_symbol	x_connective.c	/^static void receive_symbol(t_receive *x, t_symbol *s)$/;"	f	file:
rectScrollClip	s_midi_mmio.c	/^RECT rectScrollClip;                    \/\/ Clipping rectangle for scrolling$/;"	v
regi	d_fftroutine.c	/^        SAMPLE          *regi;$/;"	m	struct:Tfft_net	file:
regr	d_fftroutine.c	/^        SAMPLE          *regr;$/;"	m	struct:Tfft_net	file:
resample_dsp	d_resample.c	/^void resample_dsp(t_resample *x,$/;"	f
resample_free	d_resample.c	/^void resample_free(t_resample *x)$/;"	f
resample_init	d_resample.c	/^void resample_init(t_resample *x)$/;"	f
resamplefrom_dsp	d_resample.c	/^void resamplefrom_dsp(t_resample *x,$/;"	f
resampleto_dsp	d_resample.c	/^void resampleto_dsp(t_resample *x,$/;"	f
resizebytes	m_memory.c	/^void *resizebytes(void *old, size_t oldsize, size_t newsize)$/;"	f
rfft	d_fft.c	/^typedef struct rfft$/;"	s	file:
rfftw_bwd	d_fft_fftw.c	/^static rfftw_info rfftw_fwd[MAXFFT+1 - MINFFT],rfftw_bwd[MAXFFT+1 - MINFFT];$/;"	v	file:
rfftw_fwd	d_fft_fftw.c	/^static rfftw_info rfftw_fwd[MAXFFT+1 - MINFFT],rfftw_bwd[MAXFFT+1 - MINFFT];$/;"	v	file:
rfftw_getplan	d_fft_fftw.c	/^static rfftw_info *rfftw_getplan(int n,int fwd)$/;"	f	file:
rfftw_info	d_fft_fftw.c	/^} rfftw_info;$/;"	t	typeref:struct:__anon2	file:
rftbsub	d_fft_fftsg.c	/^void rftbsub(int n, double *a, int nc, double *c)$/;"	f
rftbsub	d_fftsg_h.c	/^void rftbsub(int n, double *a)$/;"	f
rftfsub	d_fft_fftsg.c	/^void rftfsub(int n, double *a, int nc, double *c)$/;"	f
rftfsub	d_fftsg_h.c	/^void rftfsub(int n, double *a)$/;"	f
rifft	d_fft.c	/^typedef struct rifft$/;"	s	file:
rmport	u_pdreceive.c	/^static void rmport(t_fdpoll *x)$/;"	f	file:
rmstodb	x_acoustics.c	/^t_float rmstodb(t_float f)$/;"	f
rmstodb_class	x_acoustics.c	/^static t_class *rmstodb_class;$/;"	v	file:
rmstodb_float	x_acoustics.c	/^static void rmstodb_float(t_object *x, t_float f)$/;"	f	file:
rmstodb_new	x_acoustics.c	/^static void *rmstodb_new(void)$/;"	f	file:
rmstodb_tilde	d_math.c	/^typedef struct rmstodb_tilde$/;"	s	file:
rmstodb_tilde_class	d_math.c	/^t_class *rmstodb_tilde_class;$/;"	v
rmstodb_tilde_dsp	d_math.c	/^static void rmstodb_tilde_dsp(t_rmstodb_tilde *x, t_signal **sp)$/;"	f	file:
rmstodb_tilde_new	d_math.c	/^static void *rmstodb_tilde_new(void)$/;"	f	file:
rmstodb_tilde_perform	d_math.c	/^static t_int *rmstodb_tilde_perform(t_int *w)$/;"	f	file:
rmstodb_tilde_setup	d_math.c	/^void rmstodb_tilde_setup(void)$/;"	f
route_anything	x_connective.c	/^static void route_anything(t_route *x, t_symbol *sel, int argc, t_atom *argv)$/;"	f	file:
route_class	x_connective.c	/^static t_class *route_class;$/;"	v	file:
route_free	x_connective.c	/^static void route_free(t_route *x)$/;"	f	file:
route_list	x_connective.c	/^static void route_list(t_route *x, t_symbol *sel, int argc, t_atom *argv)$/;"	f	file:
route_new	x_connective.c	/^static void *route_new(t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
route_setup	x_connective.c	/^void route_setup(void)$/;"	f
rsqrt_exptab	d_math.c	/^static float rsqrt_exptab[DUMTAB1SIZE], rsqrt_mantissatab[DUMTAB2SIZE];$/;"	v	file:
rsqrt_mantissatab	d_math.c	/^static float rsqrt_exptab[DUMTAB1SIZE], rsqrt_mantissatab[DUMTAB2SIZE];$/;"	v	file:
rtext_activate	g_rtext.c	/^void rtext_activate(t_rtext *x, int state)$/;"	f
rtext_displace	g_rtext.c	/^void rtext_displace(t_rtext *x, int dx, int dy)$/;"	f
rtext_draw	g_rtext.c	/^void rtext_draw(t_rtext *x)$/;"	f
rtext_entered	g_rtext.c	/^static t_rtext *rtext_entered;$/;"	v	file:
rtext_erase	g_rtext.c	/^void rtext_erase(t_rtext *x)$/;"	f
rtext_free	g_rtext.c	/^void rtext_free(t_rtext *x)$/;"	f
rtext_getseltext	g_rtext.c	/^void rtext_getseltext(t_rtext *x, char **buf, int *bufsize)$/;"	f
rtext_gettag	g_rtext.c	/^char *rtext_gettag(t_rtext *x)$/;"	f
rtext_gettext	g_rtext.c	/^void rtext_gettext(t_rtext *x, char **buf, int *bufsize)$/;"	f
rtext_gettype	g_rtext.c	/^static t_symbol *rtext_gettype(t_rtext *x)$/;"	f	file:
rtext_height	g_rtext.c	/^int rtext_height(t_rtext *x)$/;"	f
rtext_key	g_rtext.c	/^void rtext_key(t_rtext *x, int keynum, t_symbol *keysym)$/;"	f
rtext_mouse	g_rtext.c	/^void rtext_mouse(t_rtext *x, int xval, int yval, int flag)$/;"	f
rtext_new	g_rtext.c	/^t_rtext *rtext_new(t_glist *glist, t_text *who)$/;"	f
rtext_retext	g_rtext.c	/^void rtext_retext(t_rtext *x)$/;"	f
rtext_select	g_rtext.c	/^void rtext_select(t_rtext *x, int state)$/;"	f
rtext_senditup	g_rtext.c	/^static void rtext_senditup(t_rtext *x, int action, int *widthp, int *heightp,$/;"	f	file:
rtext_width	g_rtext.c	/^int rtext_width(t_rtext *x)$/;"	f
s_	m_class.c	/^t_symbol  s_ =          {"", 0, 0};$/;"	v
s_	m_pd.h	/^EXTERN t_symbol s_;$/;"	v
s__N	m_class.c	/^t_symbol  s__N =        {"#N", 0, 0};$/;"	v
s__N	m_pd.h	/^EXTERN t_symbol s__N;$/;"	v
s__X	m_class.c	/^t_symbol  s__X =        {"#X", 0, 0};$/;"	v
s__X	m_pd.h	/^EXTERN t_symbol s__X;$/;"	v
s_anything	m_class.c	/^t_symbol  s_anything =  {"anything", 0, 0};$/;"	v
s_anything	m_pd.h	/^EXTERN t_symbol s_anything;$/;"	v
s_bang	m_class.c	/^t_symbol  s_bang =      {"bang", 0, 0};$/;"	v
s_bang	m_pd.h	/^EXTERN t_symbol s_bang;$/;"	v
s_borrowedfrom	m_pd.h	/^    struct _signal *s_borrowedfrom;     \/* signal to borrow it from *\/$/;"	m	struct:_signal	typeref:struct:_signal::_signal
s_float	m_class.c	/^t_symbol  s_float =     {"float", 0, 0};$/;"	v
s_float	m_pd.h	/^EXTERN t_symbol s_float;$/;"	v
s_isborrowed	m_pd.h	/^    int s_isborrowed;   \/* whether we're going to borrow our array *\/$/;"	m	struct:_signal
s_list	m_class.c	/^t_symbol  s_list =      {"list", 0, 0};$/;"	v
s_list	m_pd.h	/^EXTERN t_symbol s_list;$/;"	v
s_n	m_pd.h	/^    int s_n;            \/* number of points in the array *\/$/;"	m	struct:_signal
s_n	m_pd.h	/^  int      s_n;$/;"	m	struct:_resample
s_name	m_pd.h	/^    char *s_name;$/;"	m	struct:_symbol
s_next	d_ctl.c	/^    struct _vseg *s_next;$/;"	m	struct:_vseg	typeref:struct:_vseg::_vseg	file:
s_next	m_pd.h	/^    struct _symbol *s_next;$/;"	m	struct:_symbol	typeref:struct:_symbol::_symbol
s_nextfree	m_pd.h	/^    struct _signal *s_nextfree;         \/* next in freelist *\/$/;"	m	struct:_signal	typeref:struct:_signal::_signal
s_nextused	m_pd.h	/^    struct _signal *s_nextused;         \/* next in used list *\/$/;"	m	struct:_signal	typeref:struct:_signal::_signal
s_pointer	m_class.c	/^t_symbol  s_pointer =   {"pointer", 0, 0};$/;"	v
s_pointer	m_pd.h	/^EXTERN t_symbol s_pointer;$/;"	v
s_refcount	m_pd.h	/^    int s_refcount;     \/* number of times used *\/$/;"	m	struct:_signal
s_signal	m_class.c	/^t_symbol  s_signal =    {"signal", 0, 0};$/;"	v
s_signal	m_pd.h	/^EXTERN t_symbol s_signal;$/;"	v
s_sr	m_pd.h	/^    t_float s_sr;         \/* sample rate *\/$/;"	m	struct:_signal
s_starttime	d_ctl.c	/^    double s_starttime;$/;"	m	struct:_vseg	file:
s_symbol	m_class.c	/^t_symbol  s_symbol =    {"symbol", 0, 0};$/;"	v
s_symbol	m_pd.h	/^EXTERN t_symbol s_symbol;$/;"	v
s_target	d_ctl.c	/^    t_sample s_target;$/;"	m	struct:_vseg	file:
s_targettime	d_ctl.c	/^    double s_targettime;$/;"	m	struct:_vseg	file:
s_thing	m_pd.h	/^    struct _class **s_thing;$/;"	m	struct:_symbol	typeref:struct:_symbol::_class
s_vec	m_pd.h	/^    t_sample *s_vec;    \/* the array *\/$/;"	m	struct:_signal
s_vec	m_pd.h	/^  t_sample *s_vec;   \/* here we hold the resampled data *\/$/;"	m	struct:_resample
s_vecsize	m_pd.h	/^    int s_vecsize;      \/* allocated size of array in points *\/$/;"	m	struct:_signal
s_x	m_class.c	/^t_symbol  s_x =         {"x", 0, 0};$/;"	v
s_x	m_pd.h	/^EXTERN t_symbol s_x;$/;"	v
s_y	m_class.c	/^t_symbol  s_y =         {"y", 0, 0};$/;"	v
s_y	m_pd.h	/^EXTERN t_symbol s_y;$/;"	v
samplerate_tilde_bang	d_ugen.c	/^static void samplerate_tilde_bang(t_samplerate *x)$/;"	f	file:
samplerate_tilde_class	d_ugen.c	/^static t_class *samplerate_tilde_class;$/;"	v	file:
samplerate_tilde_new	d_ugen.c	/^static void *samplerate_tilde_new(t_symbol *s)$/;"	f	file:
samplerate_tilde_setup	d_ugen.c	/^static void samplerate_tilde_setup(void)$/;"	f	file:
savepanel_bang	x_gui.c	/^static void savepanel_bang(t_savepanel *x)$/;"	f	file:
savepanel_callback	x_gui.c	/^static void savepanel_callback(t_savepanel *x, t_symbol *s)$/;"	f	file:
savepanel_class	x_gui.c	/^static t_class *savepanel_class;$/;"	v	file:
savepanel_free	x_gui.c	/^static void savepanel_free(t_savepanel *x)$/;"	f	file:
savepanel_new	x_gui.c	/^static void *savepanel_new( void)$/;"	f	file:
savepanel_setup	x_gui.c	/^static void savepanel_setup(void)$/;"	f	file:
savepanel_symbol	x_gui.c	/^static void savepanel_symbol(t_savepanel *x, t_symbol *s)$/;"	f	file:
sc_gobj	m_pd.h	/^    t_gobj sc_gobj;         \/* header for graphical object *\/$/;"	m	struct:_scalar
sc_template	m_pd.h	/^    t_symbol *sc_template;  \/* template name (LATER replace with pointer) *\/$/;"	m	struct:_scalar
sc_vec	m_pd.h	/^    t_word sc_vec[1];       \/* indeterminate-length array of words *\/$/;"	m	struct:_scalar
scalar_activate	g_scalar.c	/^static void scalar_activate(t_gobj *z, t_glist *owner, int state)$/;"	f	file:
scalar_class	g_scalar.c	/^t_class *scalar_class;$/;"	v
scalar_class	m_pd.h	/^EXTERN t_class *scalar_class;$/;"	v
scalar_click	g_scalar.c	/^static int scalar_click(t_gobj *z, struct _glist *owner,$/;"	f	file:
scalar_define_class	x_scalar.c	/^t_class *scalar_define_class;$/;"	v
scalar_define_new	x_scalar.c	/^static void *scalar_define_new(t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
scalar_define_save	x_scalar.c	/^static void scalar_define_save(t_gobj *z, t_binbuf *bb)$/;"	f	file:
scalar_define_send	x_scalar.c	/^static void scalar_define_send(t_glist *x, t_symbol *s)$/;"	f	file:
scalar_define_set	x_scalar.c	/^static void scalar_define_set(t_glist *x, t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
scalar_delete	g_scalar.c	/^static void scalar_delete(t_gobj *z, t_glist *glist)$/;"	f	file:
scalar_displace	g_scalar.c	/^static void scalar_displace(t_gobj *z, t_glist *glist, int dx, int dy)$/;"	f	file:
scalar_doclick	g_scalar.c	/^int scalar_doclick(t_word *data, t_template *template, t_scalar *sc,$/;"	f
scalar_doredraw	g_scalar.c	/^static void scalar_doredraw(t_gobj *client, t_glist *glist)$/;"	f	file:
scalar_drawselectrect	g_scalar.c	/^static void scalar_drawselectrect(t_scalar *x, t_glist *glist, int state)$/;"	f	file:
scalar_free	g_scalar.c	/^static void scalar_free(t_scalar *x)$/;"	f	file:
scalar_getbasexy	g_scalar.c	/^void scalar_getbasexy(t_scalar *x, t_float *basex, t_float *basey)$/;"	f
scalar_getrect	g_scalar.c	/^static void scalar_getrect(t_gobj *z, t_glist *owner,$/;"	f	file:
scalar_new	g_scalar.c	/^t_scalar *scalar_new(t_glist *owner, t_symbol *templatesym)$/;"	f
scalar_properties	g_scalar.c	/^static void scalar_properties(t_gobj *z, struct _glist *owner)$/;"	f	file:
scalar_redraw	g_scalar.c	/^void scalar_redraw(t_scalar *x, t_glist *glist)$/;"	f
scalar_save	g_scalar.c	/^static void scalar_save(t_gobj *z, t_binbuf *b)$/;"	f	file:
scalar_select	g_scalar.c	/^static void scalar_select(t_gobj *z, t_glist *owner, int state)$/;"	f	file:
scalar_vis	g_scalar.c	/^static void scalar_vis(t_gobj *z, t_glist *owner, int vis)$/;"	f	file:
scalar_widgetbehavior	g_scalar.c	/^static t_widgetbehavior scalar_widgetbehavior =$/;"	v	file:
scalarmax_class	d_arithmetic.c	/^static t_class *max_class, *scalarmax_class;$/;"	v	file:
scalarmax_dsp	d_arithmetic.c	/^static void scalarmax_dsp(t_scalarmax *x, t_signal **sp)$/;"	f	file:
scalarmax_perf8	d_arithmetic.c	/^t_int *scalarmax_perf8(t_int *w)$/;"	f
scalarmax_perform	d_arithmetic.c	/^t_int *scalarmax_perform(t_int *w)$/;"	f
scalarmin_class	d_arithmetic.c	/^static t_class *min_class, *scalarmin_class;$/;"	v	file:
scalarmin_dsp	d_arithmetic.c	/^static void scalarmin_dsp(t_scalarmin *x, t_signal **sp)$/;"	f	file:
scalarmin_perf8	d_arithmetic.c	/^t_int *scalarmin_perf8(t_int *w)$/;"	f
scalarmin_perform	d_arithmetic.c	/^t_int *scalarmin_perform(t_int *w)$/;"	f
scalarminus_class	d_arithmetic.c	/^static t_class *minus_class, *scalarminus_class;$/;"	v	file:
scalarminus_dsp	d_arithmetic.c	/^static void scalarminus_dsp(t_scalarminus *x, t_signal **sp)$/;"	f	file:
scalarminus_perf8	d_arithmetic.c	/^t_int *scalarminus_perf8(t_int *w)$/;"	f
scalarminus_perform	d_arithmetic.c	/^t_int *scalarminus_perform(t_int *w)$/;"	f
scalarobj_new	x_scalar.c	/^static void *scalarobj_new(t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
scalarosc_class	d_osc.c	/^static t_class *osc_class, *scalarosc_class;$/;"	v	file:
scalarover_class	d_arithmetic.c	/^static t_class *over_class, *scalarover_class;$/;"	v	file:
scalarover_dsp	d_arithmetic.c	/^static void scalarover_dsp(t_scalarover *x, t_signal **sp)$/;"	f	file:
scalarover_perf8	d_arithmetic.c	/^t_int *scalarover_perf8(t_int *w)$/;"	f
scalarover_perform	d_arithmetic.c	/^t_int *scalarover_perform(t_int *w)$/;"	f
scalarphasor_class	d_osc.c	/^static t_class *phasor_class, *scalarphasor_class;$/;"	v	file:
scalarplus_class	d_arithmetic.c	/^static t_class *plus_class, *scalarplus_class;$/;"	v	file:
scalarplus_dsp	d_arithmetic.c	/^static void scalarplus_dsp(t_scalarplus *x, t_signal **sp)$/;"	f	file:
scalarplus_perf8	d_arithmetic.c	/^t_int *scalarplus_perf8(t_int *w)$/;"	f
scalarplus_perform	d_arithmetic.c	/^t_int *scalarplus_perform(t_int *w)$/;"	f
scalartimes_class	d_arithmetic.c	/^static t_class *times_class, *scalartimes_class;$/;"	v	file:
scalartimes_dsp	d_arithmetic.c	/^static void scalartimes_dsp(t_scalartimes *x, t_signal **sp)$/;"	f	file:
scalartimes_perf8	d_arithmetic.c	/^t_int *scalartimes_perf8(t_int *w)$/;"	f
scalartimes_perform	d_arithmetic.c	/^t_int *scalartimes_perform(t_int *w)$/;"	f
sched_audio_callbackfn	m_sched.c	/^void sched_audio_callbackfn(void)$/;"	f
sched_diddsp	m_sched.c	/^static int sched_diddsp, sched_didpoll, sched_didnothing;$/;"	v	file:
sched_didnothing	m_sched.c	/^static int sched_diddsp, sched_didpoll, sched_didnothing;$/;"	v	file:
sched_didpoll	m_sched.c	/^static int sched_diddsp, sched_didpoll, sched_didnothing;$/;"	v	file:
sched_diored	m_sched.c	/^static int sched_diored;$/;"	v	file:
sched_dioredtime	m_sched.c	/^static int sched_dioredtime;$/;"	v	file:
sched_geteventno	m_obj.c	/^int sched_geteventno( void)$/;"	f
sched_lastinclip	m_sched.c	/^static int sched_lastinclip, sched_lastoutclip,$/;"	v	file:
sched_lastindb	m_sched.c	/^    sched_lastindb, sched_lastoutdb;$/;"	v	file:
sched_lastoutclip	m_sched.c	/^static int sched_lastinclip, sched_lastoutclip,$/;"	v	file:
sched_lastoutdb	m_sched.c	/^    sched_lastindb, sched_lastoutdb;$/;"	v	file:
sched_meterson	m_sched.c	/^static int sched_meterson;$/;"	v	file:
sched_pollformeters	m_sched.c	/^static void sched_pollformeters( void)$/;"	f	file:
sched_referencelogicaltime	m_sched.c	/^static double sched_referencerealtime, sched_referencelogicaltime;$/;"	v	file:
sched_referencerealtime	m_sched.c	/^static double sched_referencerealtime, sched_referencelogicaltime;$/;"	v	file:
sched_reopenmeplease	m_sched.c	/^void sched_reopenmeplease(void)   \/* request from s_audio for deferred reopen *\/$/;"	f
sched_set_using_audio	m_sched.c	/^void sched_set_using_audio(int flag)$/;"	f
sched_tick	m_sched.c	/^void sched_tick( void)$/;"	f
sched_useaudio	m_sched.c	/^static int sched_useaudio = SCHED_AUDIO_NONE;$/;"	v	file:
sel1_class	x_connective.c	/^static t_class *sel1_class;$/;"	v	file:
sel1_float	x_connective.c	/^static void sel1_float(t_sel1 *x, t_float f)$/;"	f	file:
sel1_symbol	x_connective.c	/^static void sel1_symbol(t_sel1 *x, t_symbol *s)$/;"	f	file:
sel2_class	x_connective.c	/^static t_class *sel2_class;$/;"	v	file:
sel2_float	x_connective.c	/^static void sel2_float(t_sel2 *x, t_float f)$/;"	f	file:
sel2_free	x_connective.c	/^static void sel2_free(t_sel2 *x)$/;"	f	file:
sel2_symbol	x_connective.c	/^static void sel2_symbol(t_sel2 *x, t_symbol *s)$/;"	f	file:
sel_next	g_canvas.h	/^    struct _selection *sel_next;$/;"	m	struct:_selection	typeref:struct:_selection::_selection
sel_what	g_canvas.h	/^    t_gobj *sel_what;$/;"	m	struct:_selection
select_new	x_connective.c	/^static void *select_new(t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
select_setup	x_connective.c	/^void select_setup(void)$/;"	f
send_anything	x_connective.c	/^static void send_anything(t_send *x, t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
send_bang	x_connective.c	/^static void send_bang(t_send *x)$/;"	f	file:
send_class	x_connective.c	/^static t_class *send_class;$/;"	v	file:
send_float	x_connective.c	/^static void send_float(t_send *x, t_float f)$/;"	f	file:
send_list	x_connective.c	/^static void send_list(t_send *x, t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
send_new	x_connective.c	/^static void *send_new(t_symbol *s)$/;"	f	file:
send_pointer	x_connective.c	/^static void send_pointer(t_send *x, t_gpointer *gp)$/;"	f	file:
send_setup	x_connective.c	/^static void send_setup(void)$/;"	f	file:
send_symbol	x_connective.c	/^static void send_symbol(t_send *x, t_symbol *s)$/;"	f	file:
serial_class	x_misc.c	/^static t_class *serial_class;$/;"	v	file:
serial_float	x_misc.c	/^static void serial_float(t_serial *x, t_float f)$/;"	f	file:
serial_new	x_misc.c	/^static void *serial_new(t_floatarg fportno)$/;"	f	file:
serial_setup	x_misc.c	/^static void serial_setup(void)$/;"	f	file:
set_bang	g_traversal.c	/^static void set_bang(t_set *x)$/;"	f	file:
set_class	g_traversal.c	/^static t_class *set_class;$/;"	v	file:
set_float	g_traversal.c	/^static void set_float(t_set *x, t_float f)$/;"	f	file:
set_free	g_traversal.c	/^static void set_free(t_set *x)$/;"	f	file:
set_hwparams	s_audio_alsamm.c	/^static int set_hwparams(snd_pcm_t *handle, snd_pcm_hw_params_t *params,int *chs)$/;"	f	file:
set_new	g_traversal.c	/^static void *set_new(t_symbol *why, int argc, t_atom *argv)$/;"	f	file:
set_setup	g_traversal.c	/^static void set_setup(void)$/;"	f	file:
set_swparams	s_audio_alsamm.c	/^static int set_swparams(snd_pcm_t *handle, snd_pcm_sw_params_t *swparams, int playback)$/;"	f	file:
set_symbol	g_traversal.c	/^static void set_symbol(t_set *x, t_symbol *s)$/;"	f	file:
setsize_class	g_traversal.c	/^static t_class *setsize_class;$/;"	v	file:
setsize_float	g_traversal.c	/^static void setsize_float(t_setsize *x, t_float f)$/;"	f	file:
setsize_free	g_traversal.c	/^static void setsize_free(t_setsize *x)$/;"	f	file:
setsize_new	g_traversal.c	/^static void *setsize_new(t_symbol *templatesym, t_symbol *fieldsym,$/;"	f	file:
setsize_setup	g_traversal.c	/^static void setsize_setup(void)$/;"	f	file:
sfread_cond_signal	d_soundfile.c	1592;"	d	file:
sfread_cond_signal	d_soundfile.c	1607;"	d	file:
sfread_cond_wait	d_soundfile.c	1591;"	d	file:
sfread_cond_wait	d_soundfile.c	1606;"	d	file:
short_to_float	d_fftroutine.c	/^void short_to_float(short *short_buf, SAMPLE *float_buf, int n)$/;"	f
show_availist	s_audio_alsamm.c	/^static void show_availist(void)$/;"	f	file:
sig_tilde_class	d_ctl.c	/^static t_class *sig_tilde_class;$/;"	v	file:
sig_tilde_dsp	d_ctl.c	/^static void sig_tilde_dsp(t_sig *x, t_signal **sp)$/;"	f	file:
sig_tilde_float	d_ctl.c	/^static void sig_tilde_float(t_sig *x, t_float f)$/;"	f	file:
sig_tilde_new	d_ctl.c	/^static void *sig_tilde_new(t_floatarg f)$/;"	f	file:
sig_tilde_perf8	d_ctl.c	/^static t_int *sig_tilde_perf8(t_int *w)$/;"	f	file:
sig_tilde_perform	d_ctl.c	/^static t_int *sig_tilde_perform(t_int *w)$/;"	f	file:
sig_tilde_setup	d_ctl.c	/^static void sig_tilde_setup(void)$/;"	f	file:
sigbiquad	d_filter.c	/^typedef struct sigbiquad$/;"	s	file:
sigbiquad_class	d_filter.c	/^t_class *sigbiquad_class;$/;"	v
sigbiquad_dsp	d_filter.c	/^static void sigbiquad_dsp(t_sigbiquad *x, t_signal **sp)$/;"	f	file:
sigbiquad_list	d_filter.c	/^static void sigbiquad_list(t_sigbiquad *x, t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
sigbiquad_new	d_filter.c	/^static void *sigbiquad_new(t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
sigbiquad_perform	d_filter.c	/^static t_int *sigbiquad_perform(t_int *w)$/;"	f	file:
sigbiquad_set	d_filter.c	/^static void sigbiquad_set(t_sigbiquad *x, t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
sigbiquad_setup	d_filter.c	/^void sigbiquad_setup(void)$/;"	f
sigbp	d_filter.c	/^typedef struct sigbp$/;"	s	file:
sigbp_class	d_filter.c	/^t_class *sigbp_class;$/;"	v
sigbp_clear	d_filter.c	/^static void sigbp_clear(t_sigbp *x, t_floatarg q)$/;"	f	file:
sigbp_docoef	d_filter.c	/^static void sigbp_docoef(t_sigbp *x, t_floatarg f, t_floatarg q)$/;"	f	file:
sigbp_dsp	d_filter.c	/^static void sigbp_dsp(t_sigbp *x, t_signal **sp)$/;"	f	file:
sigbp_ft1	d_filter.c	/^static void sigbp_ft1(t_sigbp *x, t_floatarg f)$/;"	f	file:
sigbp_ft2	d_filter.c	/^static void sigbp_ft2(t_sigbp *x, t_floatarg q)$/;"	f	file:
sigbp_new	d_filter.c	/^static void *sigbp_new(t_floatarg f, t_floatarg q)$/;"	f	file:
sigbp_perform	d_filter.c	/^static t_int *sigbp_perform(t_int *w)$/;"	f	file:
sigbp_qcos	d_filter.c	/^static t_float sigbp_qcos(t_float f)$/;"	f	file:
sigbp_setup	d_filter.c	/^void sigbp_setup(void)$/;"	f
sigcatch_class	d_global.c	/^static t_class *sigcatch_class;$/;"	v	file:
sigcatch_dsp	d_global.c	/^static void sigcatch_dsp(t_sigcatch *x, t_signal **sp)$/;"	f	file:
sigcatch_free	d_global.c	/^static void sigcatch_free(t_sigcatch *x)$/;"	f	file:
sigcatch_new	d_global.c	/^static void *sigcatch_new(t_symbol *s)$/;"	f	file:
sigcatch_perf8	d_global.c	/^static t_int *sigcatch_perf8(t_int *w)$/;"	f	file:
sigcatch_perform	d_global.c	/^static t_int *sigcatch_perform(t_int *w)$/;"	f	file:
sigcatch_setup	d_global.c	/^static void sigcatch_setup(void)$/;"	f	file:
sigcpole	d_filter.c	/^typedef struct sigcpole$/;"	s	file:
sigcpole_class	d_filter.c	/^t_class *sigcpole_class;$/;"	v
sigcpole_clear	d_filter.c	/^static void sigcpole_clear(t_sigcpole *x)$/;"	f	file:
sigcpole_dsp	d_filter.c	/^static void sigcpole_dsp(t_sigcpole *x, t_signal **sp)$/;"	f	file:
sigcpole_new	d_filter.c	/^static void *sigcpole_new(t_float re, t_float im)$/;"	f	file:
sigcpole_perform	d_filter.c	/^static t_int *sigcpole_perform(t_int *w)$/;"	f	file:
sigcpole_set	d_filter.c	/^static void sigcpole_set(t_sigcpole *x, t_float re, t_float im)$/;"	f	file:
sigcpole_setup	d_filter.c	/^void sigcpole_setup(void)$/;"	f
sigczero	d_filter.c	/^typedef struct sigczero$/;"	s	file:
sigczero_class	d_filter.c	/^t_class *sigczero_class;$/;"	v
sigczero_clear	d_filter.c	/^static void sigczero_clear(t_sigczero *x)$/;"	f	file:
sigczero_dsp	d_filter.c	/^static void sigczero_dsp(t_sigczero *x, t_signal **sp)$/;"	f	file:
sigczero_new	d_filter.c	/^static void *sigczero_new(t_float re, t_float im)$/;"	f	file:
sigczero_perform	d_filter.c	/^static t_int *sigczero_perform(t_int *w)$/;"	f	file:
sigczero_rev	d_filter.c	/^typedef struct sigczero_rev$/;"	s	file:
sigczero_rev_class	d_filter.c	/^t_class *sigczero_rev_class;$/;"	v
sigczero_rev_clear	d_filter.c	/^static void sigczero_rev_clear(t_sigczero_rev *x)$/;"	f	file:
sigczero_rev_dsp	d_filter.c	/^static void sigczero_rev_dsp(t_sigczero_rev *x, t_signal **sp)$/;"	f	file:
sigczero_rev_new	d_filter.c	/^static void *sigczero_rev_new(t_float re, t_float im)$/;"	f	file:
sigczero_rev_perform	d_filter.c	/^static t_int *sigczero_rev_perform(t_int *w)$/;"	f	file:
sigczero_rev_set	d_filter.c	/^static void sigczero_rev_set(t_sigczero_rev *x, t_float re, t_float im)$/;"	f	file:
sigczero_rev_setup	d_filter.c	/^void sigczero_rev_setup(void)$/;"	f
sigczero_set	d_filter.c	/^static void sigczero_set(t_sigczero *x, t_float re, t_float im)$/;"	f	file:
sigczero_setup	d_filter.c	/^void sigczero_setup(void)$/;"	f
sigdelread_class	d_delay.c	/^static t_class *sigdelread_class;$/;"	v	file:
sigdelread_dsp	d_delay.c	/^static void sigdelread_dsp(t_sigdelread *x, t_signal **sp)$/;"	f	file:
sigdelread_float	d_delay.c	/^static void sigdelread_float(t_sigdelread *x, t_float f)$/;"	f	file:
sigdelread_new	d_delay.c	/^static void *sigdelread_new(t_symbol *s, t_floatarg f)$/;"	f	file:
sigdelread_perform	d_delay.c	/^static t_int *sigdelread_perform(t_int *w)$/;"	f	file:
sigdelread_setup	d_delay.c	/^static void sigdelread_setup(void)$/;"	f	file:
sigdelwrite_checkvecsize	d_delay.c	/^static void sigdelwrite_checkvecsize(t_sigdelwrite *x, int vecsize)$/;"	f	file:
sigdelwrite_class	d_delay.c	/^static t_class *sigdelwrite_class;$/;"	v	file:
sigdelwrite_dsp	d_delay.c	/^static void sigdelwrite_dsp(t_sigdelwrite *x, t_signal **sp)$/;"	f	file:
sigdelwrite_free	d_delay.c	/^static void sigdelwrite_free(t_sigdelwrite *x)$/;"	f	file:
sigdelwrite_new	d_delay.c	/^static void *sigdelwrite_new(t_symbol *s, t_floatarg msec)$/;"	f	file:
sigdelwrite_perform	d_delay.c	/^static t_int *sigdelwrite_perform(t_int *w)$/;"	f	file:
sigdelwrite_setup	d_delay.c	/^static void sigdelwrite_setup(void)$/;"	f	file:
sigdelwrite_updatesr	d_delay.c	/^static void sigdelwrite_updatesr (t_sigdelwrite *x, t_float sr) \/* added by Mathieu Bouchard *\/$/;"	f	file:
sigenv	d_ctl.c	/^typedef struct sigenv$/;"	s	file:
sigfft_class	d_fft.c	/^static t_class *sigfft_class, *sigifft_class;$/;"	v	file:
sigfft_dsp	d_fft.c	/^static void sigfft_dsp(t_sigfft *x, t_signal **sp)$/;"	f	file:
sigfft_dspx	d_fft.c	/^static void sigfft_dspx(t_sigfft *x, t_signal **sp, t_int *(*f)(t_int *w))$/;"	f	file:
sigfft_new	d_fft.c	/^static void *sigfft_new(void)$/;"	f	file:
sigfft_perform	d_fft.c	/^static t_int *sigfft_perform(t_int *w)$/;"	f	file:
sigfft_setup	d_fft.c	/^static void sigfft_setup(void)$/;"	f	file:
sigfft_swap	d_fft.c	/^static t_int *sigfft_swap(t_int *w)$/;"	f	file:
sigframp_class	d_fft.c	/^static t_class *sigframp_class;$/;"	v	file:
sigframp_dsp	d_fft.c	/^static void sigframp_dsp(t_sigframp *x, t_signal **sp)$/;"	f	file:
sigframp_new	d_fft.c	/^static void *sigframp_new(void)$/;"	f	file:
sigframp_perform	d_fft.c	/^static t_int *sigframp_perform(t_int *w)$/;"	f	file:
sigframp_setup	d_fft.c	/^static void sigframp_setup(void)$/;"	f	file:
sighip	d_filter.c	/^typedef struct sighip$/;"	s	file:
sighip_class	d_filter.c	/^t_class *sighip_class;$/;"	v
sighip_clear	d_filter.c	/^static void sighip_clear(t_sighip *x, t_floatarg q)$/;"	f	file:
sighip_dsp	d_filter.c	/^static void sighip_dsp(t_sighip *x, t_signal **sp)$/;"	f	file:
sighip_ft1	d_filter.c	/^static void sighip_ft1(t_sighip *x, t_floatarg f)$/;"	f	file:
sighip_new	d_filter.c	/^static void *sighip_new(t_floatarg f)$/;"	f	file:
sighip_perform	d_filter.c	/^static t_int *sighip_perform(t_int *w)$/;"	f	file:
sighip_perform_old	d_filter.c	/^static t_int *sighip_perform_old(t_int *w)$/;"	f	file:
sighip_setup	d_filter.c	/^void sighip_setup(void)$/;"	f
sigifft_class	d_fft.c	/^static t_class *sigfft_class, *sigifft_class;$/;"	v	file:
sigifft_dsp	d_fft.c	/^static void sigifft_dsp(t_sigfft *x, t_signal **sp)$/;"	f	file:
sigifft_new	d_fft.c	/^static void *sigifft_new(void)$/;"	f	file:
sigifft_perform	d_fft.c	/^static t_int *sigifft_perform(t_int *w)$/;"	f	file:
siglop	d_filter.c	/^typedef struct siglop$/;"	s	file:
siglop_class	d_filter.c	/^t_class *siglop_class;$/;"	v
siglop_clear	d_filter.c	/^static void siglop_clear(t_siglop *x, t_floatarg q)$/;"	f	file:
siglop_dsp	d_filter.c	/^static void siglop_dsp(t_siglop *x, t_signal **sp)$/;"	f	file:
siglop_ft1	d_filter.c	/^static void siglop_ft1(t_siglop *x, t_floatarg f)$/;"	f	file:
siglop_new	d_filter.c	/^static void *siglop_new(t_floatarg f)$/;"	f	file:
siglop_perform	d_filter.c	/^static t_int *siglop_perform(t_int *w)$/;"	f	file:
siglop_setup	d_filter.c	/^void siglop_setup(void)$/;"	f
signal_cleanup	d_ugen.c	/^void signal_cleanup(void)$/;"	f
signal_compatible	d_ugen.c	/^int signal_compatible(t_signal *s1, t_signal *s2)$/;"	f
signal_freeborrowed	d_ugen.c	/^static t_signal *signal_freeborrowed;$/;"	v	file:
signal_freelist	d_ugen.c	/^static t_signal *signal_freelist[MAXLOGSIG+1];$/;"	v	file:
signal_makereusable	d_ugen.c	/^void signal_makereusable(t_signal *sig)$/;"	f
signal_new	d_ugen.c	/^t_signal *signal_new(int n, t_float sr)$/;"	f
signal_newlike	d_ugen.c	/^static t_signal *signal_newlike(const t_signal *sig)$/;"	f	file:
signal_setborrowed	d_ugen.c	/^void signal_setborrowed(t_signal *sig, t_signal *sig2)$/;"	f
signal_usedlist	d_ugen.c	/^static t_signal *signal_usedlist;$/;"	v	file:
signalinlet_new	m_obj.c	/^t_inlet *signalinlet_new(t_object *owner, t_float f)$/;"	f
sigreceive_class	d_global.c	/^static t_class *sigreceive_class;$/;"	v	file:
sigreceive_dsp	d_global.c	/^static void sigreceive_dsp(t_sigreceive *x, t_signal **sp)$/;"	f	file:
sigreceive_new	d_global.c	/^static void *sigreceive_new(t_symbol *s)$/;"	f	file:
sigreceive_perf8	d_global.c	/^static t_int *sigreceive_perf8(t_int *w)$/;"	f	file:
sigreceive_perform	d_global.c	/^static t_int *sigreceive_perform(t_int *w)$/;"	f	file:
sigreceive_set	d_global.c	/^static void sigreceive_set(t_sigreceive *x, t_symbol *s)$/;"	f	file:
sigreceive_setup	d_global.c	/^static void sigreceive_setup(void)$/;"	f	file:
sigrfft_class	d_fft.c	/^static t_class *sigrfft_class;$/;"	v	file:
sigrfft_dsp	d_fft.c	/^static void sigrfft_dsp(t_sigrfft *x, t_signal **sp)$/;"	f	file:
sigrfft_flip	d_fft.c	/^static t_int *sigrfft_flip(t_int *w)$/;"	f	file:
sigrfft_new	d_fft.c	/^static void *sigrfft_new(void)$/;"	f	file:
sigrfft_perform	d_fft.c	/^static t_int *sigrfft_perform(t_int *w)$/;"	f	file:
sigrfft_setup	d_fft.c	/^static void sigrfft_setup(void)$/;"	f	file:
sigrifft_class	d_fft.c	/^static t_class *sigrifft_class;$/;"	v	file:
sigrifft_dsp	d_fft.c	/^static void sigrifft_dsp(t_sigrifft *x, t_signal **sp)$/;"	f	file:
sigrifft_new	d_fft.c	/^static void *sigrifft_new(void)$/;"	f	file:
sigrifft_perform	d_fft.c	/^static t_int *sigrifft_perform(t_int *w)$/;"	f	file:
sigrifft_setup	d_fft.c	/^static void sigrifft_setup(void)$/;"	f	file:
sigrpole	d_filter.c	/^typedef struct sigrpole$/;"	s	file:
sigrpole_class	d_filter.c	/^t_class *sigrpole_class;$/;"	v
sigrpole_clear	d_filter.c	/^static void sigrpole_clear(t_sigrpole *x)$/;"	f	file:
sigrpole_dsp	d_filter.c	/^static void sigrpole_dsp(t_sigrpole *x, t_signal **sp)$/;"	f	file:
sigrpole_new	d_filter.c	/^static void *sigrpole_new(t_float f)$/;"	f	file:
sigrpole_perform	d_filter.c	/^static t_int *sigrpole_perform(t_int *w)$/;"	f	file:
sigrpole_set	d_filter.c	/^static void sigrpole_set(t_sigrpole *x, t_float f)$/;"	f	file:
sigrpole_setup	d_filter.c	/^void sigrpole_setup(void)$/;"	f
sigrsqrt	d_math.c	/^typedef struct sigrsqrt$/;"	s	file:
sigrsqrt_class	d_math.c	/^static t_class *sigrsqrt_class;$/;"	v	file:
sigrsqrt_dsp	d_math.c	/^static void sigrsqrt_dsp(t_sigrsqrt *x, t_signal **sp)$/;"	f	file:
sigrsqrt_new	d_math.c	/^static void *sigrsqrt_new(void)$/;"	f	file:
sigrsqrt_perform	d_math.c	/^static t_int *sigrsqrt_perform(t_int *w)$/;"	f	file:
sigrsqrt_setup	d_math.c	/^void sigrsqrt_setup(void)$/;"	f
sigrzero	d_filter.c	/^typedef struct sigrzero$/;"	s	file:
sigrzero_class	d_filter.c	/^t_class *sigrzero_class;$/;"	v
sigrzero_clear	d_filter.c	/^static void sigrzero_clear(t_sigrzero *x)$/;"	f	file:
sigrzero_dsp	d_filter.c	/^static void sigrzero_dsp(t_sigrzero *x, t_signal **sp)$/;"	f	file:
sigrzero_new	d_filter.c	/^static void *sigrzero_new(t_float f)$/;"	f	file:
sigrzero_perform	d_filter.c	/^static t_int *sigrzero_perform(t_int *w)$/;"	f	file:
sigrzero_rev	d_filter.c	/^typedef struct sigrzero_rev$/;"	s	file:
sigrzero_rev_class	d_filter.c	/^t_class *sigrzero_rev_class;$/;"	v
sigrzero_rev_clear	d_filter.c	/^static void sigrzero_rev_clear(t_sigrzero_rev *x)$/;"	f	file:
sigrzero_rev_dsp	d_filter.c	/^static void sigrzero_rev_dsp(t_sigrzero_rev *x, t_signal **sp)$/;"	f	file:
sigrzero_rev_new	d_filter.c	/^static void *sigrzero_rev_new(t_float f)$/;"	f	file:
sigrzero_rev_perform	d_filter.c	/^static t_int *sigrzero_rev_perform(t_int *w)$/;"	f	file:
sigrzero_rev_set	d_filter.c	/^static void sigrzero_rev_set(t_sigrzero_rev *x, t_float f)$/;"	f	file:
sigrzero_rev_setup	d_filter.c	/^void sigrzero_rev_setup(void)$/;"	f
sigrzero_set	d_filter.c	/^static void sigrzero_set(t_sigrzero *x, t_float f)$/;"	f	file:
sigrzero_setup	d_filter.c	/^void sigrzero_setup(void)$/;"	f
sigsamphold	d_filter.c	/^typedef struct sigsamphold$/;"	s	file:
sigsamphold_class	d_filter.c	/^t_class *sigsamphold_class;$/;"	v
sigsamphold_dsp	d_filter.c	/^static void sigsamphold_dsp(t_sigsamphold *x, t_signal **sp)$/;"	f	file:
sigsamphold_new	d_filter.c	/^static void *sigsamphold_new(void)$/;"	f	file:
sigsamphold_perform	d_filter.c	/^static t_int *sigsamphold_perform(t_int *w)$/;"	f	file:
sigsamphold_reset	d_filter.c	/^static void sigsamphold_reset(t_sigsamphold *x, t_symbol *s, int argc,$/;"	f	file:
sigsamphold_set	d_filter.c	/^static void sigsamphold_set(t_sigsamphold *x, t_float f)$/;"	f	file:
sigsamphold_setup	d_filter.c	/^void sigsamphold_setup(void)$/;"	f
sigsend_class	d_global.c	/^static t_class *sigsend_class;$/;"	v	file:
sigsend_dsp	d_global.c	/^static void sigsend_dsp(t_sigsend *x, t_signal **sp)$/;"	f	file:
sigsend_free	d_global.c	/^static void sigsend_free(t_sigsend *x)$/;"	f	file:
sigsend_new	d_global.c	/^static void *sigsend_new(t_symbol *s)$/;"	f	file:
sigsend_perform	d_global.c	/^static t_int *sigsend_perform(t_int *w)$/;"	f	file:
sigsend_setup	d_global.c	/^static void sigsend_setup(void)$/;"	f	file:
sigsqrt	d_math.c	/^typedef struct sigsqrt$/;"	s	file:
sigsqrt_class	d_math.c	/^static t_class *sigsqrt_class;$/;"	v	file:
sigsqrt_dsp	d_math.c	/^static void sigsqrt_dsp(t_sigsqrt *x, t_signal **sp)$/;"	f	file:
sigsqrt_new	d_math.c	/^static void *sigsqrt_new(void)$/;"	f	file:
sigsqrt_perform	d_math.c	/^t_int *sigsqrt_perform(t_int *w)    \/* not static; also used in d_fft.c *\/$/;"	f
sigsqrt_setup	d_math.c	/^void sigsqrt_setup(void)$/;"	f
sigthrow_class	d_global.c	/^static t_class *sigthrow_class;$/;"	v	file:
sigthrow_dsp	d_global.c	/^static void sigthrow_dsp(t_sigthrow *x, t_signal **sp)$/;"	f	file:
sigthrow_new	d_global.c	/^static void *sigthrow_new(t_symbol *s)$/;"	f	file:
sigthrow_perform	d_global.c	/^static t_int *sigthrow_perform(t_int *w)$/;"	f	file:
sigthrow_set	d_global.c	/^static void sigthrow_set(t_sigthrow *x, t_symbol *s)$/;"	f	file:
sigthrow_setup	d_global.c	/^static void sigthrow_setup(void)$/;"	f	file:
sigvcf	d_osc.c	/^typedef struct sigvcf$/;"	s	file:
sigvcf_class	d_osc.c	/^t_class *sigvcf_class;$/;"	v
sigvcf_dsp	d_osc.c	/^static void sigvcf_dsp(t_sigvcf *x, t_signal **sp)$/;"	f	file:
sigvcf_ft1	d_osc.c	/^static void sigvcf_ft1(t_sigvcf *x, t_floatarg f)$/;"	f	file:
sigvcf_new	d_osc.c	/^static void *sigvcf_new(t_floatarg q)$/;"	f	file:
sigvcf_perform	d_osc.c	/^static t_int *sigvcf_perform(t_int *w)$/;"	f	file:
sigvcf_setup	d_osc.c	/^void sigvcf_setup(void)$/;"	f
sigvd_class	d_delay.c	/^static t_class *sigvd_class;$/;"	v	file:
sigvd_dsp	d_delay.c	/^static void sigvd_dsp(t_sigvd *x, t_signal **sp)$/;"	f	file:
sigvd_new	d_delay.c	/^static void *sigvd_new(t_symbol *s)$/;"	f	file:
sigvd_perform	d_delay.c	/^static t_int *sigvd_perform(t_int *w)$/;"	f	file:
sigvd_setup	d_delay.c	/^static void sigvd_setup(void)$/;"	f	file:
sigwrap_class	d_math.c	/^t_class *sigwrap_class;$/;"	v
sigwrap_dsp	d_math.c	/^static void sigwrap_dsp(t_sigwrap *x, t_signal **sp)$/;"	f	file:
sigwrap_new	d_math.c	/^static void *sigwrap_new(void)$/;"	f	file:
sigwrap_perform	d_math.c	/^static t_int *sigwrap_perform(t_int *w)$/;"	f	file:
sigwrap_setup	d_math.c	/^void sigwrap_setup(void)$/;"	f
sin_class	x_arithmetic.c	/^static t_class *sin_class;      \/* ----------- sin --------------- *\/$/;"	v	file:
sin_float	x_arithmetic.c	/^static void sin_float(t_object *x, t_float f)$/;"	f	file:
sin_new	x_arithmetic.c	/^static void *sin_new(void)$/;"	f	file:
sintab	d_fft_mayer.c	/^static REAL sintab[20]=$/;"	v	file:
sinwrk	d_fft_mayer.c	/^static REAL sinwrk[20]=$/;"	v	file:
sleep_time	s_audio_alsamm.c	/^static double sleep_time; $/;"	v	file:
snapshot_tilde_bang	d_ctl.c	/^static void snapshot_tilde_bang(t_snapshot *x)$/;"	f	file:
snapshot_tilde_class	d_ctl.c	/^static t_class *snapshot_tilde_class;$/;"	v	file:
snapshot_tilde_dsp	d_ctl.c	/^static void snapshot_tilde_dsp(t_snapshot *x, t_signal **sp)$/;"	f	file:
snapshot_tilde_new	d_ctl.c	/^static void *snapshot_tilde_new(void)$/;"	f	file:
snapshot_tilde_perform	d_ctl.c	/^static t_int *snapshot_tilde_perform(t_int *w)$/;"	f	file:
snapshot_tilde_set	d_ctl.c	/^static void snapshot_tilde_set(t_snapshot *x, t_floatarg f)$/;"	f	file:
snapshot_tilde_setup	d_ctl.c	/^static void snapshot_tilde_setup(void)$/;"	f	file:
snprintf	g_editor.c	14;"	d	file:
snprintf	m_class.c	22;"	d	file:
snprintf	s_audio_pa.c	32;"	d	file:
snprintf	s_file.c	32;"	d	file:
snprintf	s_loader.c	26;"	d	file:
snprintf	s_main.c	25;"	d	file:
snprintf	s_print.c	13;"	d	file:
sockerror	u_pdreceive.c	/^static void sockerror(char *s)$/;"	f	file:
sockerror	u_pdsend.c	/^void sockerror(char *s)$/;"	f
socketreceiver_doread	s_inter.c	/^static int socketreceiver_doread(t_socketreceiver *x)$/;"	f	file:
socketreceiver_free	s_inter.c	/^void socketreceiver_free(t_socketreceiver *x)$/;"	f
socketreceiver_getudp	s_inter.c	/^static void socketreceiver_getudp(t_socketreceiver *x, int fd)$/;"	f	file:
socketreceiver_new	s_inter.c	/^t_socketreceiver *socketreceiver_new(void *owner, t_socketnotifier notifier,$/;"	f
socketreceiver_read	s_inter.c	/^void socketreceiver_read(t_socketreceiver *x, int fd)$/;"	f
sockfd	u_pdreceive.c	/^static int sockfd;$/;"	v	file:
socklen_t	s_inter.c	/^typedef int socklen_t;$/;"	t	file:
soundfile_finishwrite	d_soundfile.c	/^static void soundfile_finishwrite(void *obj, char *filename, int fd,$/;"	f	file:
soundfile_xferin_float	d_soundfile.c	/^static void soundfile_xferin_float(int sfchannels, int nvecs, t_float **vecs,$/;"	f	file:
soundfile_xferin_sample	d_soundfile.c	/^static void soundfile_xferin_sample(int sfchannels, int nvecs, t_sample **vecs,$/;"	f	file:
soundfile_xferout_float	d_soundfile.c	/^static void soundfile_xferout_float(int nchannels, t_float **vecs,$/;"	f	file:
soundfile_xferout_sample	d_soundfile.c	/^static void soundfile_xferout_sample(int nchannels, t_sample **vecs,$/;"	f	file:
soundfiler_class	d_soundfile.c	/^static t_class *soundfiler_class;$/;"	v	file:
soundfiler_dowrite	d_soundfile.c	/^long soundfiler_dowrite(void *obj, t_canvas *canvas,$/;"	f
soundfiler_new	d_soundfile.c	/^static t_soundfiler *soundfiler_new(void)$/;"	f	file:
soundfiler_read	d_soundfile.c	/^static void soundfiler_read(t_soundfiler *x, t_symbol *s,$/;"	f	file:
soundfiler_setup	d_soundfile.c	/^static void soundfiler_setup(void)$/;"	f	file:
soundfiler_write	d_soundfile.c	/^static void soundfiler_write(t_soundfiler *x, t_symbol *s,$/;"	f	file:
soundfiler_writeargparse	d_soundfile.c	/^static int soundfiler_writeargparse(void *obj, int *p_argc, t_atom **p_argv,$/;"	f	file:
spigot_anything	x_connective.c	/^static void spigot_anything(t_spigot *x, t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
spigot_bang	x_connective.c	/^static void spigot_bang(t_spigot *x)$/;"	f	file:
spigot_class	x_connective.c	/^static t_class *spigot_class;$/;"	v	file:
spigot_float	x_connective.c	/^static void spigot_float(t_spigot *x, t_float f)$/;"	f	file:
spigot_list	x_connective.c	/^static void spigot_list(t_spigot *x, t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
spigot_new	x_connective.c	/^static void *spigot_new(t_floatarg f)$/;"	f	file:
spigot_pointer	x_connective.c	/^static void spigot_pointer(t_spigot *x, t_gpointer *gp)$/;"	f	file:
spigot_setup	x_connective.c	/^static void spigot_setup(void)$/;"	f	file:
spigot_symbol	x_connective.c	/^static void spigot_symbol(t_spigot *x, t_symbol *s)$/;"	f	file:
sqrt_class	x_arithmetic.c	/^static t_class *sqrt_class;     \/* ----------- sqrt --------------- *\/$/;"	v	file:
sqrt_float	x_arithmetic.c	/^static void sqrt_float(t_object *x, t_float f)$/;"	f	file:
sqrt_new	x_arithmetic.c	/^static void *sqrt_new(void)$/;"	f	file:
sr_inbuf	s_inter.c	/^    char *sr_inbuf;$/;"	m	struct:_socketreceiver	file:
sr_inhead	s_inter.c	/^    int sr_inhead;$/;"	m	struct:_socketreceiver	file:
sr_intail	s_inter.c	/^    int sr_intail;$/;"	m	struct:_socketreceiver	file:
sr_notifier	s_inter.c	/^    t_socketnotifier sr_notifier;$/;"	m	struct:_socketreceiver	file:
sr_owner	s_inter.c	/^    void *sr_owner;$/;"	m	struct:_socketreceiver	file:
sr_socketreceivefn	s_inter.c	/^    t_socketreceivefn sr_socketreceivefn;$/;"	m	struct:_socketreceiver	file:
sr_udp	s_inter.c	/^    int sr_udp;$/;"	m	struct:_socketreceiver	file:
stackcount	m_obj.c	/^static int stackcount = 0; \/* iteration counter *\/$/;"	v	file:
stages	d_fftroutine.c	/^        int             stages;$/;"	m	struct:Tfft_net	file:
startpost	s_print.c	/^void startpost(const char *fmt, ...)$/;"	f
stat	s_loader.c	27;"	d	file:
stat	s_path.c	47;"	d	file:
store_registers	d_fftroutine.c	/^void store_registers(FFT_NET    *fft_net, SAMPLE *buf, int buf_form,$/;"	f
str	s_main.c	30;"	d	file:
stringify	s_main.c	29;"	d	file:
stripnote_class	x_midi.c	/^static t_class *stripnote_class;$/;"	v	file:
stripnote_float	x_midi.c	/^static void stripnote_float(t_stripnote *x, t_float f)$/;"	f	file:
stripnote_new	x_midi.c	/^static void *stripnote_new(void )$/;"	f	file:
stripnote_setup	x_midi.c	/^static void stripnote_setup(void)$/;"	f	file:
strnescape	s_print.c	/^static char* strnescape(char *dest, const char *src, size_t len)$/;"	f	file:
strnpointerid	s_print.c	/^static char* strnpointerid(char *dest, const void *pointer, size_t len)$/;"	f	file:
strtokcpy	s_path.c	/^static const char *strtokcpy(char *to, size_t to_len, const char *from, char delim)$/;"	f	file:
subcanvas_new	g_canvas.c	/^static void *subcanvas_new(t_symbol *s)$/;"	f	file:
swap2	d_soundfile.c	/^static uint16_t swap2(uint32_t n, int doit)$/;"	f	file:
swap4	d_soundfile.c	/^static uint32_t swap4(uint32_t n, int doit)$/;"	f	file:
swap_bang	x_connective.c	/^static void swap_bang(t_swap *x)$/;"	f	file:
swap_class	x_connective.c	/^static t_class *swap_class;$/;"	v	file:
swap_float	x_connective.c	/^static void swap_float(t_swap *x, t_float f)$/;"	f	file:
swap_new	x_connective.c	/^static void *swap_new(t_floatarg f)$/;"	f	file:
swap_setup	x_connective.c	/^void swap_setup(void)$/;"	f
swapstring	d_soundfile.c	/^static void swapstring(char *foo, int doit)$/;"	f	file:
switch_new	d_ugen.c	/^static void *switch_new(t_floatarg fvecsize, t_floatarg foverlap,$/;"	f	file:
symbolinlet_class	m_obj.c	/^    *symbolinlet_class;$/;"	v	file:
symbolinlet_new	m_obj.c	/^t_inlet *symbolinlet_new(t_object *owner, t_symbol **sp)$/;"	f
symbolinlet_symbol	m_obj.c	/^static void symbolinlet_symbol(t_inlet *x, t_symbol *s)$/;"	f	file:
symhash	m_class.c	/^static t_symbol *symhash[HASHSIZE];$/;"	v	file:
symlist	m_class.c	/^static t_symbol *symlist[] = { &s_pointer, &s_float, &s_symbol, &s_bang,$/;"	v	file:
sys_adctimeminusrealtime	s_midi.c	/^static double sys_adctimeminusrealtime;$/;"	v	file:
sys_addhist	m_sched.c	/^int sys_addhist(int phase)$/;"	f
sys_addpollfn	s_inter.c	/^void sys_addpollfn(int fd, t_fdpollfn fn, void *ptr)$/;"	f
sys_addreferencepath	s_main.c	/^static void sys_addreferencepath(void)$/;"	f	file:
sys_advance_samples	s_audio.c	/^int sys_advance_samples;        \/* scheduler advance in samples *\/$/;"	v
sys_afterargparse	s_main.c	/^static void sys_afterargparse(void)$/;"	f	file:
sys_alarmhandler	s_inter.c	/^static void sys_alarmhandler(int n)$/;"	f	file:
sys_alsa_close_midi	s_midi_alsa.c	/^void sys_alsa_close_midi()$/;"	f
sys_alsa_do_open_midi	s_midi_alsa.c	/^void sys_alsa_do_open_midi(int nmidiin, int *midiinvec,$/;"	f
sys_alsa_poll_midi	s_midi_alsa.c	/^void sys_alsa_poll_midi(void)$/;"	f
sys_alsa_putmidibyte	s_midi_alsa.c	/^void sys_alsa_putmidibyte(int portno, int byte)$/;"	f
sys_alsa_putmidimess	s_midi_alsa.c	/^void sys_alsa_putmidimess(int portno, int a, int b, int c)$/;"	f
sys_argparse	s_main.c	/^int sys_argparse(int argc, char **argv)$/;"	f
sys_audioapi	s_audio.c	/^int sys_audioapi = API_DEFAULT;$/;"	v
sys_audioapi	s_stuff.h	/^EXTERN int sys_audioapi;$/;"	v
sys_audioapiopened	s_audio.c	/^int sys_audioapiopened = -1;    \/* save last API opened for later closing *\/$/;"	v
sys_bail	s_inter.c	/^void sys_bail(int n)$/;"	f
sys_bashfilename	s_path.c	/^void sys_bashfilename(const char *from, char *to)$/;"	f
sys_batch	s_main.c	/^static int sys_batch;$/;"	v	file:
sys_bin	m_sched.c	/^static int sys_bin[] = {0, 2, 5, 10, 20, 30, 50, 100, 1000};$/;"	v	file:
sys_bytessincelastping	s_inter.c	/^static int sys_bytessincelastping;$/;"	v	file:
sys_chinlist	s_main.c	/^static int sys_chinlist[MAXAUDIOINDEV];$/;"	v	file:
sys_choutlist	s_main.c	/^static int sys_choutlist[MAXAUDIOOUTDEV];$/;"	v	file:
sys_clearhist	m_sched.c	/^void sys_clearhist( void)$/;"	f
sys_close	s_path.c	/^int sys_close(int fd)$/;"	f
sys_close_audio	s_audio.c	/^void sys_close_audio(void)$/;"	f
sys_close_midi	s_midi_dummy.c	/^void sys_close_midi( void)$/;"	f
sys_close_midi	s_midi_mmio.c	/^void sys_close_midi( void)$/;"	f
sys_close_midi	s_midi_oss.c	/^void sys_close_midi()$/;"	f
sys_close_midi	s_midi_pm.c	/^void sys_close_midi( void)$/;"	f
sys_closesocket	s_inter.c	/^void sys_closesocket(int fd)$/;"	f
sys_dacsr	s_audio.c	/^t_float sys_dacsr;$/;"	v
sys_dacsr	s_audio_esd.c	/^float sys_dacsr;$/;"	v
sys_dacsr	s_audio_mmio.c	/^float sys_dacsr = DEFAULTSRATE;$/;"	v
sys_dacsr	s_audio_mmio.c	/^float sys_dacsr;$/;"	v
sys_dacsr	s_audio_oss.c	/^t_float sys_dacsr;$/;"	v
sys_dactimeminusrealtime	s_midi.c	/^static double sys_dactimeminusrealtime;$/;"	v	file:
sys_debuglevel	s_main.c	/^int sys_debuglevel;$/;"	v
sys_decodedialog	s_path.c	/^t_symbol *sys_decodedialog(t_symbol *s)$/;"	f
sys_defaultfont	s_main.c	/^int sys_defaultfont;$/;"	v
sys_defeatrt	s_file.c	/^int sys_defeatrt;$/;"	v
sys_dispatchnextmidiin	s_midi.c	/^static void sys_dispatchnextmidiin( void)$/;"	f	file:
sys_dllextent	s_loader.c	/^static char sys_dllextent[] = ".b_i386", sys_dllextent2[] = ".pd_freebsd";$/;"	v	file:
sys_dllextent	s_loader.c	/^static char sys_dllextent[] = ".d_fat", sys_dllextent2[] = ".pd_darwin";$/;"	v	file:
sys_dllextent	s_loader.c	/^static char sys_dllextent[] = ".d_ppc", sys_dllextent2[] = ".pd_darwin";$/;"	v	file:
sys_dllextent	s_loader.c	/^static char sys_dllextent[] = ".l_arm";$/;"	v	file:
sys_dllextent	s_loader.c	/^static char sys_dllextent[] = ".l_i386";$/;"	v	file:
sys_dllextent	s_loader.c	/^static char sys_dllextent[] = ".l_ia64"; \/\/ this should be .l_x86_64 or .l_amd64$/;"	v	file:
sys_dllextent	s_loader.c	/^static char sys_dllextent[] = ".m_i386", sys_dllextent2[] = ".dll";$/;"	v	file:
sys_dllextent	s_loader.c	/^static char sys_dllextent[] = ".so", sys_dllextent2[] = ".so";$/;"	v	file:
sys_dllextent	s_loader.c	/^static char sys_dllextent[] = ".so";$/;"	v	file:
sys_dllextent2	s_loader.c	/^static char sys_dllextent2[] = ".pd_linux";$/;"	v	file:
sys_dllextent2	s_loader.c	/^static char sys_dllextent[] = ".b_i386", sys_dllextent2[] = ".pd_freebsd";$/;"	v	file:
sys_dllextent2	s_loader.c	/^static char sys_dllextent[] = ".d_fat", sys_dllextent2[] = ".pd_darwin";$/;"	v	file:
sys_dllextent2	s_loader.c	/^static char sys_dllextent[] = ".d_ppc", sys_dllextent2[] = ".pd_darwin";$/;"	v	file:
sys_dllextent2	s_loader.c	/^static char sys_dllextent[] = ".m_i386", sys_dllextent2[] = ".dll";$/;"	v	file:
sys_dllextent2	s_loader.c	/^static char sys_dllextent[] = ".so", sys_dllextent2[] = ".so";$/;"	v	file:
sys_do_load_lib	s_loader.c	/^static int sys_do_load_lib(t_canvas *canvas, char *objectname)$/;"	f	file:
sys_do_open_midi	s_midi_dummy.c	/^void sys_do_open_midi(int nmidiin, int *midiinvec,$/;"	f
sys_do_open_midi	s_midi_mmio.c	/^void sys_do_open_midi(int nmidiin, int *midiinvec,$/;"	f
sys_do_open_midi	s_midi_oss.c	/^void sys_do_open_midi(int nmidiin, int *midiinvec,$/;"	f
sys_do_open_midi	s_midi_pm.c	/^void sys_do_open_midi(int nmidiin, int *midiinvec,$/;"	f
sys_doflags	s_path.c	/^void sys_doflags( void)$/;"	f
sys_domicrosleep	s_inter.c	/^static int sys_domicrosleep(int microsec, int pollem)$/;"	f	file:
sys_doneloadpreferences	s_file.c	/^static void sys_doneloadpreferences( void)$/;"	f	file:
sys_donesavepreferences	s_file.c	/^static void sys_donesavepreferences( void)$/;"	f	file:
sys_exit	m_sched.c	/^void sys_exit(void)$/;"	f
sys_exithandler	s_inter.c	/^static void sys_exithandler(int n)$/;"	f	file:
sys_expandpath	s_path.c	/^static void sys_expandpath(const char *from, char *to, int bufsize)$/;"	f	file:
sys_externalschedlib	s_main.c	/^int sys_externalschedlib;$/;"	v
sys_externalschedlib	s_stuff.h	/^EXTERN int sys_externalschedlib;$/;"	v
sys_externalschedlibname	s_main.c	/^char sys_externalschedlibname[MAXPDSTRING];$/;"	v
sys_externlist	s_path.c	/^t_namelist *sys_externlist;$/;"	v
sys_extraflags	s_main.c	/^int sys_extraflags;$/;"	v
sys_extraflagsstring	s_main.c	/^char sys_extraflagsstring[MAXPDSTRING];$/;"	v
sys_fclose	s_path.c	/^int sys_fclose(FILE *stream)$/;"	f
sys_fdpoll	s_inter.c	/^static t_fdpoll *sys_fdpoll;$/;"	v	file:
sys_findfont	s_main.c	/^static t_fontinfo *sys_findfont(int fontsize)$/;"	f	file:
sys_findprogdir	s_main.c	/^void sys_findprogdir(char *progname)$/;"	f
sys_flags	s_file.c	/^t_symbol *sys_flags = &s_;$/;"	v
sys_flushqueue	s_inter.c	/^static int sys_flushqueue(void )$/;"	f	file:
sys_flushtogui	s_inter.c	/^static int sys_flushtogui( void)$/;"	f	file:
sys_font	m_pd.h	/^EXTERN char sys_font[]; \/* default typeface set in s_main.c *\/$/;"	v
sys_font	s_main.c	/^char sys_font[100] = "DejaVu Sans Mono";$/;"	v
sys_font	s_main.c	/^char sys_font[100] = "Monaco";$/;"	v
sys_fontheight	s_main.c	/^int sys_fontheight(int fontsize)$/;"	f
sys_fontlist	s_main.c	/^static t_fontinfo sys_fontlist[] = {$/;"	v	file:
sys_fontweight	m_pd.h	/^EXTERN char sys_fontweight[]; \/* default font weight set in s_main.c *\/$/;"	v
sys_fontweight	s_main.c	/^char sys_fontweight[10] = "bold";$/;"	v
sys_fontweight	s_main.c	/^char sys_fontweight[10] = "normal";$/;"	v
sys_fontwidth	s_main.c	/^int sys_fontwidth(int fontsize)$/;"	f
sys_fopen	s_path.c	/^FILE *sys_fopen(const char *filename, const char *mode)$/;"	f
sys_get_audio_apis	s_audio.c	/^void sys_get_audio_apis(char *buf)$/;"	f
sys_get_audio_devs	s_audio.c	/^void sys_get_audio_devs(char *indevlist, int *nindevs,$/;"	f
sys_get_audio_params	s_audio.c	/^void sys_get_audio_params($/;"	f
sys_get_inchannels	s_audio.c	/^int sys_get_inchannels(void) $/;"	f
sys_get_midi_apis	s_midi.c	/^void sys_get_midi_apis(char *buf)$/;"	f
sys_get_midi_devs	s_midi.c	/^void sys_get_midi_devs(char *indevlist, int *nindevs,$/;"	f
sys_get_midi_params	s_midi.c	/^void sys_get_midi_params(int *pnmidiindev, int *pmidiindev,$/;"	f
sys_get_outchannels	s_audio.c	/^int sys_get_outchannels(void)$/;"	f
sys_getblksize	s_main.c	/^int sys_getblksize(void)$/;"	f
sys_getmeters	s_audio.c	/^void sys_getmeters(t_sample *inmax, t_sample *outmax)$/;"	f
sys_getmidiinrealtime	s_midi.c	/^static double sys_getmidiinrealtime( void)$/;"	f	file:
sys_getmidioutrealtime	s_midi.c	/^static double sys_getmidioutrealtime( void)$/;"	f	file:
sys_getmultidevchannels	s_main.c	/^static int sys_getmultidevchannels(int n, int *devlist)$/;"	f	file:
sys_getpreference	s_file.c	/^static int sys_getpreference(const char *key, char *value, int size)$/;"	f	file:
sys_getrealtime	s_inter.c	/^double sys_getrealtime(void)    $/;"	f
sys_getsr	s_audio.c	/^t_float sys_getsr(void)$/;"	f
sys_getversion	m_glob.c	/^void sys_getversion(int *major, int *minor, int *bugfix)$/;"	f
sys_gui	s_inter.c	/^void sys_gui(char *s)$/;"	f
sys_guibuf	s_inter.c	/^static char *sys_guibuf;$/;"	v	file:
sys_guibufhead	s_inter.c	/^static int sys_guibufhead;$/;"	v	file:
sys_guibufsize	s_inter.c	/^static int sys_guibufsize;$/;"	v	file:
sys_guibuftail	s_inter.c	/^static int sys_guibuftail;$/;"	v	file:
sys_guicmd	s_main.c	/^char *sys_guicmd;$/;"	v
sys_guiqueuehead	s_inter.c	/^static t_guiqueue *sys_guiqueuehead;$/;"	v	file:
sys_guisetportnumber	s_main.c	/^int sys_guisetportnumber;   \/* if started from the GUI, this is the port # *\/$/;"	v
sys_guisock	s_inter.c	/^static int sys_guisock;$/;"	v	file:
sys_helppath	s_path.c	/^t_namelist *sys_helppath;$/;"	v
sys_hipriority	s_main.c	/^int sys_hipriority = -1;    \/* -1 = don't care; 0 = no; 1 = yes *\/$/;"	v
sys_histogram	m_sched.c	/^static int sys_histogram[NHIST][NBIN];$/;"	v	file:
sys_histphase	m_sched.c	/^static int sys_histphase;$/;"	v	file:
sys_histtime	m_sched.c	/^static double sys_histtime;$/;"	v	file:
sys_hostfontsize	s_main.c	/^int sys_hostfontsize(int fontsize)$/;"	f
sys_huphandler	s_inter.c	/^static void sys_huphandler(int n)$/;"	f	file:
sys_idlehook	m_pd.h	/^EXTERN int (*sys_idlehook)(void);   \/* hook to add idle time computation *\/$/;"	v
sys_idlehook	m_sched.c	/^int (*sys_idlehook)(void);$/;"	v
sys_inchannels	s_audio.c	/^int sys_inchannels;$/;"	v
sys_init_fdpoll	s_inter.c	/^void sys_init_fdpoll(void)$/;"	f
sys_initloadpreferences	s_file.c	/^static void sys_initloadpreferences( void)$/;"	f	file:
sys_initmidiqueue	s_midi.c	/^void sys_initmidiqueue( void)$/;"	f
sys_initntclock	s_inter.c	/^static void sys_initntclock(void)$/;"	f	file:
sys_initsavepreferences	s_file.c	/^static void sys_initsavepreferences( void)$/;"	f	file:
sys_inmax	s_audio.c	/^static t_sample sys_inmax;         \/* max input amplitude *\/$/;"	v	file:
sys_isabsolutepath	s_path.c	/^int sys_isabsolutepath(const char *dir)$/;"	f
sys_libdir	s_main.c	/^t_symbol *sys_libdir;$/;"	v
sys_libdir	s_stuff.h	/^EXTERN t_symbol *sys_libdir;    \/* library directory for auxilliary files *\/$/;"	v
sys_listaudiodevs	s_audio.c	/^static void sys_listaudiodevs(void )$/;"	f	file:
sys_listdevs	s_audio.c	/^void sys_listdevs(void )$/;"	f
sys_listmididevs	s_midi.c	/^void sys_listmididevs(void )$/;"	f
sys_listplease	s_main.c	/^static int sys_listplease;$/;"	v	file:
sys_load_lib	s_loader.c	/^int sys_load_lib(t_canvas *canvas, char *classname)$/;"	f
sys_loaded	s_loader.c	/^static t_loadlist *sys_loaded;$/;"	v	file:
sys_loadpreferences	s_file.c	/^void sys_loadpreferences( void)$/;"	f
sys_lock	m_sched.c	/^void sys_lock(void) {}$/;"	f
sys_lock	m_sched.c	/^void sys_lock(void)$/;"	f
sys_log_error	m_sched.c	/^void sys_log_error(int type)$/;"	f
sys_logerror	s_print.c	/^void sys_logerror(const char *object, const char *s)$/;"	f
sys_main	s_main.c	/^int sys_main(int argc, char **argv)$/;"	f
sys_main_advance	s_main.c	/^static int sys_main_advance;$/;"	v	file:
sys_main_blocksize	s_main.c	/^static int sys_main_blocksize;$/;"	v	file:
sys_main_callback	s_main.c	/^static int sys_main_callback;$/;"	v	file:
sys_main_srate	s_main.c	/^static int sys_main_srate;$/;"	v	file:
sys_maxfd	s_inter.c	/^static int sys_maxfd;$/;"	v	file:
sys_messagelist	s_main.c	/^static t_namelist *sys_messagelist;$/;"	v	file:
sys_meters	s_audio.c	/^static int sys_meters;          \/* true if we're metering *\/$/;"	v	file:
sys_microsleep	s_inter.c	/^void sys_microsleep(int microsec)$/;"	f
sys_midiapi	s_midi.c	/^int sys_midiapi = API_DEFAULTMIDI;$/;"	v
sys_midibytein	s_midi.c	/^void sys_midibytein(int portno, int byte)$/;"	f
sys_midiindevlist	s_main.c	/^int sys_midiindevlist[MAXMIDIINDEV] = {1};$/;"	v
sys_midiinittime	s_midi.c	/^static double sys_midiinittime;$/;"	v	file:
sys_midioutdevlist	s_main.c	/^int sys_midioutdevlist[MAXMIDIOUTDEV] = {1};$/;"	v
sys_mmio	s_main.c	/^static int sys_mmio = 0;$/;"	v	file:
sys_mmio	s_main.c	/^static int sys_mmio = 1;$/;"	v	file:
sys_mutex	m_sched.c	/^static pthread_mutex_t sys_mutex = PTHREAD_MUTEX_INITIALIZER;$/;"	v	file:
sys_nchin	s_main.c	/^static int sys_nchin = -1;$/;"	v	file:
sys_nchout	s_main.c	/^static int sys_nchout = -1;$/;"	v	file:
sys_nearestfontsize	s_main.c	/^int sys_nearestfontsize(int fontsize)$/;"	f
sys_newadctimeminusrealtime	s_midi.c	/^static double sys_newadctimeminusrealtime = -1e20;$/;"	v	file:
sys_newdactimeminusrealtime	s_midi.c	/^static double sys_newdactimeminusrealtime = -1e20;$/;"	v	file:
sys_nfdpoll	s_inter.c	/^static int sys_nfdpoll;$/;"	v	file:
sys_nmidiin	s_main.c	/^int sys_nmidiin = -1;$/;"	v
sys_nmidiout	s_main.c	/^int sys_nmidiout = -1;$/;"	v
sys_noautopatch	s_main.c	/^int sys_noautopatch;    \/* temporary hack to defeat new 0.42 editing *\/$/;"	v
sys_nogui	s_main.c	/^int sys_nogui;$/;"	v
sys_noloadbang	s_main.c	/^int sys_noloadbang;$/;"	v
sys_nosleep	s_main.c	/^int sys_nosleep = 0;  \/* skip all "sleep" calls and spin instead *\/$/;"	v
sys_nsoundin	s_main.c	/^static int sys_nsoundin = -1;$/;"	v	file:
sys_nsoundout	s_main.c	/^static int sys_nsoundout = -1;$/;"	v	file:
sys_oldtclversion	s_main.c	/^int sys_oldtclversion;      \/* hack to warn g_rtext.c about old text sel *\/$/;"	v
sys_onloadlist	s_loader.c	/^int sys_onloadlist(char *classname) \/* return true if already loaded *\/$/;"	f
sys_open	s_path.c	/^int sys_open(const char *path, int oflag, ...)$/;"	f
sys_open_absolute	s_path.c	/^int sys_open_absolute(const char *name, const char* ext,$/;"	f
sys_open_midi	s_midi.c	/^void sys_open_midi(int nmidiindev, int *midiindev,$/;"	f
sys_openlist	s_main.c	/^static t_namelist *sys_openlist;$/;"	v	file:
sys_ouch	s_print.c	/^void sys_ouch(void)$/;"	f
sys_outchannels	s_audio.c	/^int sys_outchannels;$/;"	v
sys_outmax	s_audio.c	/^static t_sample sys_outmax;        \/* max output amplitude *\/$/;"	v	file:
sys_parsedevlist	s_main.c	/^static void sys_parsedevlist(int *np, int *vecp, int max, char *str)$/;"	f	file:
sys_perf	m_glob.c	/^int sys_perf;   \/* true if we should query user on close and quit *\/$/;"	v
sys_poll_midi	s_midi_dummy.c	/^void sys_poll_midi(void)$/;"	f
sys_poll_midi	s_midi_mmio.c	/^void sys_poll_midi(void)$/;"	f
sys_poll_midi	s_midi_oss.c	/^void sys_poll_midi(void)$/;"	f
sys_poll_midi	s_midi_pm.c	/^void sys_poll_midi(void)$/;"	f
sys_poll_togui	s_inter.c	/^static int sys_poll_togui(void) \/* returns 1 if did anything *\/$/;"	f	file:
sys_pollgui	s_inter.c	/^int sys_pollgui(void)$/;"	f
sys_pollmidiinqueue	s_midi.c	/^void sys_pollmidiinqueue( void)$/;"	f
sys_pollmidioutqueue	s_midi.c	/^void sys_pollmidioutqueue( void)$/;"	f
sys_pollmidiqueue	s_midi.c	/^void sys_pollmidiqueue( void)$/;"	f
sys_prefbuf	s_file.c	/^static char *sys_prefbuf;$/;"	v	file:
sys_prefbufsize	s_file.c	/^static int sys_prefbufsize;$/;"	v	file:
sys_prefsavefp	s_file.c	/^static FILE *sys_prefsavefp;$/;"	v	file:
sys_pretendguibytes	s_inter.c	/^void sys_pretendguibytes(int n)$/;"	f
sys_printhist	m_sched.c	/^void sys_printhist( void)$/;"	f
sys_printhook	s_print.c	/^t_printhook sys_printhook;$/;"	v
sys_printtostderr	s_print.c	/^int sys_printtostderr;$/;"	v
sys_putmidibyte	s_midi_dummy.c	/^void sys_putmidibyte(int portno, int byte)$/;"	f
sys_putmidibyte	s_midi_mmio.c	/^void sys_putmidibyte(int portno, int byte)$/;"	f
sys_putmidibyte	s_midi_oss.c	/^void sys_putmidibyte(int portno, int byte)$/;"	f
sys_putmidibyte	s_midi_pm.c	/^void sys_putmidibyte(int portno, int byte)$/;"	f
sys_putmidimess	s_midi_dummy.c	/^void sys_putmidimess(int portno, int a, int b, int c)$/;"	f
sys_putmidimess	s_midi_mmio.c	/^void sys_putmidimess(int portno, int a, int b, int c)$/;"	f
sys_putmidimess	s_midi_oss.c	/^void sys_putmidimess(int portno, int a, int b, int c)$/;"	f
sys_putmidimess	s_midi_pm.c	/^void sys_putmidimess(int portno, int a, int b, int c)$/;"	f
sys_putnext	s_midi.c	/^static void sys_putnext( void)$/;"	f	file:
sys_putonloadlist	s_loader.c	/^void sys_putonloadlist(char *classname) \/* add to list of loaded modules *\/$/;"	f
sys_putpreference	s_file.c	/^static void sys_putpreference(const char *key, const char *value)$/;"	f	file:
sys_queuegui	s_inter.c	/^void sys_queuegui(void *client, t_glist *glist, t_guicallbackfn f)$/;"	f
sys_queuemidimess	s_midi.c	/^static void sys_queuemidimess(int portno, int onebyte, int a, int b, int c)$/;"	f	file:
sys_quit	m_sched.c	/^static int sys_quit;$/;"	v	file:
sys_rcfile	s_path.c	/^int sys_rcfile(void)$/;"	f
sys_register_loader	s_loader.c	/^void sys_register_loader(loader_t loader)$/;"	f
sys_reopen_audio	s_audio.c	/^void sys_reopen_audio( void)$/;"	f
sys_reopen_midi	s_midi.c	/^void sys_reopen_midi( void)$/;"	f
sys_reportidle	s_audio.c	/^void sys_reportidle(void)$/;"	f
sys_ringbuf	s_audio_paring.h	/^} sys_ringbuf;$/;"	t	typeref:struct:__anon8
sys_ringbuf_AdvanceReadIndex	s_audio_paring.c	/^static long sys_ringbuf_AdvanceReadIndex(PA_VOLATILE sys_ringbuf *rbuf,$/;"	f	file:
sys_ringbuf_AdvanceWriteIndex	s_audio_paring.c	/^static long sys_ringbuf_AdvanceWriteIndex(PA_VOLATILE sys_ringbuf *rbuf,$/;"	f	file:
sys_ringbuf_Flush	s_audio_paring.c	/^static void sys_ringbuf_Flush(PA_VOLATILE sys_ringbuf *rbuf,$/;"	f	file:
sys_ringbuf_GetReadRegions	s_audio_paring.c	/^static long sys_ringbuf_GetReadRegions(PA_VOLATILE sys_ringbuf *rbuf,$/;"	f	file:
sys_ringbuf_GetWriteRegions	s_audio_paring.c	/^static long sys_ringbuf_GetWriteRegions(PA_VOLATILE  sys_ringbuf *rbuf,$/;"	f	file:
sys_ringbuf_getreadavailable	s_audio_paring.c	/^long sys_ringbuf_getreadavailable(PA_VOLATILE sys_ringbuf *rbuf)$/;"	f
sys_ringbuf_getwriteavailable	s_audio_paring.c	/^long sys_ringbuf_getwriteavailable(PA_VOLATILE sys_ringbuf *rbuf)$/;"	f
sys_ringbuf_init	s_audio_paring.c	/^long sys_ringbuf_init(PA_VOLATILE sys_ringbuf *rbuf, long numBytes, $/;"	f
sys_ringbuf_read	s_audio_paring.c	/^long sys_ringbuf_read(PA_VOLATILE sys_ringbuf *rbuf, void *data, long numBytes,$/;"	f
sys_ringbuf_write	s_audio_paring.c	/^long sys_ringbuf_write(PA_VOLATILE sys_ringbuf *rbuf, const void *data,$/;"	f
sys_rmpollfn	s_inter.c	/^void sys_rmpollfn(int fd)$/;"	f
sys_run_scheduler	s_loader.c	/^int sys_run_scheduler(const char *externalschedlibname,$/;"	f
sys_save_audio_params	s_audio.c	/^void sys_save_audio_params($/;"	f
sys_save_midi_params	s_midi.c	/^static void sys_save_midi_params($/;"	f	file:
sys_schedadvance	s_audio.c	/^int sys_schedadvance;   \/* scheduler advance in microseconds *\/$/;"	v
sys_schedblocksize	m_sched.c	/^int sys_schedblocksize = DEFDACBLKSIZE;$/;"	v
sys_searchpath	s_path.c	/^t_namelist *sys_searchpath;$/;"	v
sys_send_dacs	s_audio.c	/^int sys_send_dacs(void)$/;"	f
sys_set_audio_api	s_audio.c	/^void sys_set_audio_api(int which)$/;"	f
sys_set_audio_settings	s_audio.c	/^void sys_set_audio_settings(int naudioindev, int *audioindev, int nchindev,$/;"	f
sys_set_audio_settings_reopen	s_audio.c	/^void sys_set_audio_settings_reopen(int naudioindev, int *audioindev, int nchindev,$/;"	f
sys_set_audio_state	s_audio.c	/^void sys_set_audio_state(int onoff)$/;"	f
sys_set_extrapath	s_path.c	/^void sys_set_extrapath( void)$/;"	f
sys_set_midi_api	s_midi.c	/^void sys_set_midi_api(int which)$/;"	f
sys_set_priority	s_inter.c	/^void sys_set_priority(int higher) $/;"	f
sys_set_searchpath	s_path.c	/^void sys_set_searchpath( void)$/;"	f
sys_set_startup	s_path.c	/^void sys_set_startup( void)$/;"	f
sys_setalarm	s_inter.c	/^void sys_setalarm(int microsec)$/;"	f
sys_setchsr	s_audio.c	/^void sys_setchsr(int chin, int chout, int sr)$/;"	f
sys_setextrapath	s_path.c	/^void sys_setextrapath(const char *p)$/;"	f
sys_setmidiprefix	x_midi.c	/^void sys_setmidiprefix(const char *prefix)$/;"	f
sys_setmiditimediff	s_midi.c	/^void sys_setmiditimediff(double inbuftime, double outbuftime)$/;"	f
sys_signal	s_inter.c	/^static void sys_signal(int signo, sig_t sigfun)$/;"	f	file:
sys_sleepgrain	m_sched.c	/^int sys_sleepgrain;$/;"	v
sys_sockerror	s_inter.c	/^void sys_sockerror(char *s)$/;"	f
sys_socketreceiver	s_inter.c	/^static t_socketreceiver *sys_socketreceiver;$/;"	v	file:
sys_soundin	s_audio.c	/^t_sample *sys_soundin;$/;"	v
sys_soundin	s_audio_mmio.c	/^t_sample *sys_soundin;$/;"	v
sys_soundin	s_audio_oss.c	/^t_sample *sys_soundin;$/;"	v
sys_soundin	s_stuff.h	/^EXTERN t_sample *sys_soundin;$/;"	v
sys_soundindevlist	s_main.c	/^static int sys_soundindevlist[MAXAUDIOINDEV];$/;"	v	file:
sys_soundout	s_audio.c	/^t_sample *sys_soundout;$/;"	v
sys_soundout	s_audio_mmio.c	/^t_sample *sys_soundout;$/;"	v
sys_soundout	s_audio_oss.c	/^t_sample *sys_soundout;$/;"	v
sys_soundout	s_stuff.h	/^EXTERN t_sample *sys_soundout;$/;"	v
sys_soundoutdevlist	s_main.c	/^static int sys_soundoutdevlist[MAXAUDIOOUTDEV];$/;"	v	file:
sys_startgui	s_inter.c	/^int sys_startgui(const char *libdir)$/;"	f
sys_staticpath	s_path.c	/^t_namelist *sys_staticpath;$/;"	v
sys_time	s_stuff.h	/^EXTERN double sys_time;$/;"	v
sys_time_per_dsp_tick	m_sched.c	/^double sys_time_per_dsp_tick;$/;"	v
sys_time_per_dsp_tick	s_stuff.h	/^EXTERN double sys_time_per_dsp_tick;$/;"	v
sys_trylock	m_sched.c	/^int sys_trylock(void) {return (1);}$/;"	f
sys_trylock	m_sched.c	/^int sys_trylock(void)$/;"	f
sys_trytogetmoreguibuf	s_inter.c	/^static void sys_trytogetmoreguibuf(int newsize)$/;"	f	file:
sys_trytoopenone	s_path.c	/^int sys_trytoopenone(const char *dir, const char *name, const char* ext,$/;"	f
sys_unbashfilename	s_path.c	/^void sys_unbashfilename(const char *from, char *to)$/;"	f
sys_unixerror	s_print.c	/^void sys_unixerror(const char *object)$/;"	f
sys_unlock	m_sched.c	/^void sys_unlock(void) {}$/;"	f
sys_unlock	m_sched.c	/^void sys_unlock(void)$/;"	f
sys_unqueuegui	s_inter.c	/^void sys_unqueuegui(void *client)$/;"	f
sys_usestdpath	s_path.c	/^int sys_usestdpath = 1;$/;"	v
sys_verbose	s_main.c	/^int sys_verbose;$/;"	v
sys_version	s_main.c	/^static int sys_version;$/;"	v	file:
sys_vgui	s_inter.c	/^void sys_vgui(char *fmt, ...)$/;"	f
sys_waitingforping	s_inter.c	/^static int sys_waitingforping;$/;"	v	file:
sys_watchfd	s_inter.c	/^static int sys_watchfd;$/;"	v	file:
sys_whenupdate	s_midi.c	/^static double sys_whenupdate;$/;"	v	file:
sysexin_class	x_midi.c	/^static t_class *midiin_class, *sysexin_class;$/;"	v	file:
sysexin_free	x_midi.c	/^static void sysexin_free(t_midiin *x)$/;"	f	file:
sysexin_new	x_midi.c	/^static void *sysexin_new( void)$/;"	f	file:
t_abs_tilde	d_math.c	/^} t_abs_tilde;$/;"	t	typeref:struct:_abs_tilde	file:
t_activatefn	g_canvas.h	/^typedef void (*t_activatefn)(t_gobj *x, struct _glist *glist, int state);$/;"	t
t_adc	d_dac.c	/^} t_adc;$/;"	t	typeref:struct:_adc	file:
t_aiff	d_soundfile.c	/^} t_aiff;$/;"	t	typeref:struct:_aiff	file:
t_alist	x_list.c	/^} t_alist;$/;"	t	typeref:struct:_alist	file:
t_alsa_dev	s_audio_alsa.h	/^} t_alsa_dev;$/;"	t	typeref:struct:_alsa_dev
t_alsa_sample16	s_audio_alsa.h	/^typedef int16_t t_alsa_sample16;$/;"	t
t_alsa_sample32	s_audio_alsa.h	/^typedef int32_t t_alsa_sample32;$/;"	t
t_anymethod	m_imp.h	/^typedef void (*t_anymethod)(t_pd *x, t_symbol *s, int argc, t_atom *argv);$/;"	t
t_append	g_traversal.c	/^} t_append;$/;"	t	typeref:struct:_append	file:
t_appendvariable	g_traversal.c	/^} t_appendvariable;$/;"	t	typeref:struct:_appendvariable	file:
t_array	m_pd.h	115;"	d
t_array_client	x_array.c	/^} t_array_client;$/;"	t	typeref:struct:_array_client	file:
t_array_get	x_array.c	591;"	d	file:
t_array_max	x_array.c	/^} t_array_max;$/;"	t	typeref:struct:_array_max	file:
t_array_min	x_array.c	/^} t_array_min;$/;"	t	typeref:struct:_array_min	file:
t_array_quantile	x_array.c	649;"	d	file:
t_array_random	x_array.c	/^} t_array_random;$/;"	t	typeref:struct:_array_random	file:
t_array_rangeop	x_array.c	/^} t_array_rangeop;$/;"	t	typeref:struct:_array_rangeop	file:
t_array_set	x_array.c	623;"	d	file:
t_array_size	x_array.c	/^} t_array_size;$/;"	t	typeref:struct:_array_size	file:
t_array_sum	x_array.c	560;"	d	file:
t_arrayvis	g_canvas.h	/^} t_arrayvis;$/;"	t	typeref:struct:_arrayvis
t_atan2	x_arithmetic.c	/^} t_atan2;$/;"	t	typeref:struct:_atan2	file:
t_atom	m_pd.h	/^} t_atom;$/;"	t	typeref:struct:_atom
t_atomtype	m_pd.h	/^}  t_atomtype;$/;"	t	typeref:enum:__anon7
t_audiocallback	s_stuff.h	/^typedef void (*t_audiocallback)(void);$/;"	t
t_bag	x_midi.c	/^} t_bag;$/;"	t	typeref:struct:_bag	file:
t_bagelem	x_midi.c	/^} t_bagelem;$/;"	t	typeref:struct:_bagelem	file:
t_bang	d_misc.c	/^} t_bang;$/;"	t	typeref:struct:_bang	file:
t_bang	x_connective.c	/^} t_bang;$/;"	t	typeref:struct:_bang	file:
t_bangmethod	m_imp.h	/^typedef void (*t_bangmethod)(t_pd *x);$/;"	t
t_bendin	x_midi.c	/^} t_bendin;$/;"	t	typeref:struct:_bendin	file:
t_bendout	x_midi.c	/^} t_bendout;$/;"	t	typeref:struct:_bendout	file:
t_binbuf	m_pd.h	192;"	d
t_bindelem	m_pd.c	/^} t_bindelem;$/;"	t	typeref:struct:_bindelem	file:
t_bindlist	m_pd.c	/^} t_bindlist;$/;"	t	typeref:struct:_bindlist	file:
t_binop	x_arithmetic.c	/^} t_binop;$/;"	t	typeref:struct:_binop	file:
t_biquadctl	d_filter.c	/^} t_biquadctl;$/;"	t	typeref:struct:biquadctl	file:
t_block	d_ugen.c	/^} t_block;$/;"	t	typeref:struct:_block	file:
t_bng	g_all_guis.h	/^} t_bng;$/;"	t	typeref:struct:_bng
t_bpctl	d_filter.c	/^} t_bpctl;$/;"	t	typeref:struct:bpctl	file:
t_canvas	m_pd.h	202;"	d
t_canvasapply	g_canvas.h	/^typedef int (*t_canvasapply)(t_canvas *x, t_int x1, t_int x2, t_int x3);$/;"	t
t_canvasenvironment	g_canvas.h	74;"	d
t_change	x_connective.c	/^} t_change;$/;"	t	typeref:struct:_change	file:
t_class	m_pd.h	183;"	d
t_clickfn	g_canvas.h	/^typedef int (*t_clickfn)(t_gobj *x, struct _glist *glist,$/;"	t
t_clip	d_math.c	/^} t_clip;$/;"	t	typeref:struct:_clip	file:
t_clip	x_arithmetic.c	/^} t_clip;$/;"	t	typeref:struct:_clip	file:
t_clock	m_pd.h	195;"	d
t_clockmethod	m_sched.c	/^typedef void (*t_clockmethod)(void *client);$/;"	t	file:
t_comm	d_soundfile.c	/^} t_comm;$/;"	t	typeref:struct:_comm	file:
t_cos	d_osc.c	/^} t_cos;$/;"	t	typeref:struct:_cos	file:
t_cputime	x_misc.c	/^} t_cputime;$/;"	t	typeref:struct:_cputime	file:
t_ctlin	x_midi.c	/^} t_ctlin;$/;"	t	typeref:struct:_ctlin	file:
t_ctlout	x_midi.c	/^} t_ctlout;$/;"	t	typeref:struct:_ctlout	file:
t_curve	g_template.c	/^} t_curve;$/;"	t	typeref:struct:_curve	file:
t_dac	d_dac.c	/^} t_dac;$/;"	t	typeref:struct:_dac	file:
t_datachunk	d_soundfile.c	/^} t_datachunk;$/;"	t	typeref:struct:_datachunk	file:
t_dataslot	g_canvas.h	/^} t_dataslot;$/;"	t	typeref:struct:_dataslot
t_dbtopow_tilde	d_math.c	/^} t_dbtopow_tilde;$/;"	t	typeref:struct:dbtopow_tilde	file:
t_dbtorms_tilde	d_math.c	/^} t_dbtorms_tilde;$/;"	t	typeref:struct:dbtorms_tilde	file:
t_declare	g_canvas.c	/^} t_declare;$/;"	t	typeref:struct:_declare	file:
t_delay	x_time.c	/^} t_delay;$/;"	t	typeref:struct:_delay	file:
t_deletefn	g_canvas.h	/^typedef void (*t_deletefn)(t_gobj *x, struct _glist *glist);$/;"	t
t_delwritectl	d_delay.c	/^} t_delwritectl;$/;"	t	typeref:struct:delwritectl	file:
t_displacefn	g_canvas.h	/^typedef void (*t_displacefn)(t_gobj *x, struct _glist *glist, int dx, int dy);$/;"	t
t_drawnumber	g_template.c	/^} t_drawnumber;$/;"	t	typeref:struct:_drawnumber	file:
t_dspcontext	d_ugen.c	548;"	d	file:
t_dspcontext	g_canvas.c	1021;"	d	file:
t_editor	g_canvas.h	/^} t_editor;$/;"	t	typeref:struct:_editor
t_elem	g_traversal.c	/^} t_elem;$/;"	t	typeref:struct:_elem	file:
t_exp_tilde	d_math.c	/^} t_exp_tilde;$/;"	t	typeref:struct:_exp_tilde	file:
t_externclass	m_pd.h	/^typedef t_class *t_externclass;$/;"	t
t_fdpoll	s_inter.c	/^} t_fdpoll;$/;"	t	typeref:struct:_fdpoll	file:
t_fdpoll	u_pdreceive.c	/^} t_fdpoll;$/;"	t	typeref:struct:_fdpoll	file:
t_fdpollfn	s_stuff.h	/^typedef void (*t_fdpollfn)(void *ptr, int fd);$/;"	t
t_fielddesc	g_canvas.h	77;"	d
t_float	m_pd.h	/^typedef PD_FLOATTYPE t_float;       \/* a float type at most the same size *\/$/;"	t
t_floatarg	m_pd.h	/^typedef PD_FLOATTYPE t_floatarg;    \/* float type for function calls *\/$/;"	t
t_floatmethod	m_imp.h	/^typedef void (*t_floatmethod)(t_pd *x, t_float f);$/;"	t
t_fmt	d_soundfile.c	/^} t_fmt;$/;"	t	typeref:struct:_fmt	file:
t_fontinfo	s_main.c	/^} t_fontinfo;$/;"	t	typeref:struct:_fontinfo	file:
t_freebytes	m_pd.h	710;"	d
t_ftom_tilde	d_math.c	/^} t_ftom_tilde;$/;"	t	typeref:struct:ftom_tilde	file:
t_fun0	m_class.c	/^typedef t_pd *(*t_fun0)($/;"	t	file:
t_fun1	m_class.c	/^typedef t_pd *(*t_fun1)(t_int i1,$/;"	t	file:
t_fun2	m_class.c	/^typedef t_pd *(*t_fun2)(t_int i1, t_int i2,$/;"	t	file:
t_fun3	m_class.c	/^typedef t_pd *(*t_fun3)(t_int i1, t_int i2, t_int i3,$/;"	t	file:
t_fun4	m_class.c	/^typedef t_pd *(*t_fun4)(t_int i1, t_int i2, t_int i3, t_int i4,$/;"	t	file:
t_fun5	m_class.c	/^typedef t_pd *(*t_fun5)(t_int i1, t_int i2, t_int i3, t_int i4, t_int i5,$/;"	t	file:
t_fun6	m_class.c	/^typedef t_pd *(*t_fun6)(t_int i1, t_int i2, t_int i3, t_int i4, t_int i5, t_int i6,$/;"	t	file:
t_garray	m_pd.h	663;"	d
t_gatom	g_text.c	/^} t_gatom;$/;"	t	typeref:struct:_gatom	file:
t_get	g_traversal.c	/^} t_get;$/;"	t	typeref:struct:_get	file:
t_getbytes	m_pd.h	709;"	d
t_getrectfn	g_canvas.h	/^typedef void (*t_getrectfn)(t_gobj *x, struct _glist *glist,$/;"	t
t_getsize	g_traversal.c	/^} t_getsize;$/;"	t	typeref:struct:_getsize	file:
t_getvariable	g_traversal.c	/^} t_getvariable;$/;"	t	typeref:struct:_getvariable	file:
t_gfxstub	x_gui.c	/^} t_gfxstub;$/;"	t	typeref:struct:_gfxstub	file:
t_glist	m_pd.h	201;"	d
t_glistkeyfn	g_canvas.h	/^typedef void (*t_glistkeyfn)(void *z, t_floatarg key);$/;"	t
t_glistmotionfn	g_canvas.h	/^typedef void (*t_glistmotionfn)(void *z, t_floatarg dx, t_floatarg dy);$/;"	t
t_gobj	m_pd.h	/^} t_gobj;$/;"	t	typeref:struct:_gobj
t_gotfn	m_pd.h	/^typedef void (*t_gotfn)(void *x);$/;"	t
t_gotfn	m_pd.h	/^typedef void (*t_gotfn)(void *x, ...);$/;"	t
t_gotfn1	m_pd.h	/^typedef void (*t_gotfn1)(void *x, void *arg1);$/;"	t
t_gotfn2	m_pd.h	/^typedef void (*t_gotfn2)(void *x, void *arg1, void *arg2);$/;"	t
t_gotfn3	m_pd.h	/^typedef void (*t_gotfn3)(void *x, void *arg1, void *arg2, void *arg3);$/;"	t
t_gotfn4	m_pd.h	/^typedef void (*t_gotfn4)(void *x,$/;"	t
t_gotfn5	m_pd.h	/^typedef void (*t_gotfn5)(void *x,$/;"	t
t_gpointer	m_pd.h	/^} t_gpointer;$/;"	t	typeref:struct:_gpointer
t_gstack	m_pd.c	/^} t_gstack;$/;"	t	typeref:struct:_gstack	file:
t_gstub	m_pd.h	/^} t_gstub;$/;"	t	typeref:struct:_gstub
t_gtemplate	g_canvas.h	65;"	d
t_guicallbackfn	m_pd.h	/^typedef void (*t_guicallbackfn)(t_gobj *client, t_glist *glist);$/;"	t
t_guiconnect	g_canvas.h	68;"	d
t_guiqueue	s_inter.c	/^} t_guiqueue;$/;"	t	typeref:struct:_guiqueue	file:
t_hang	x_midi.c	/^} t_hang;$/;"	t	typeref:struct:_hang	file:
t_hang	x_time.c	/^} t_hang;$/;"	t	typeref:struct:_hang	file:
t_hdial	g_all_guis.h	/^} t_hdial;$/;"	t	typeref:struct:_hdial
t_hipctl	d_filter.c	/^} t_hipctl;$/;"	t	typeref:struct:hipctl	file:
t_hradio	g_all_guis.h	277;"	d
t_hslider	g_all_guis.h	/^} t_hslider;$/;"	t	typeref:struct:_hslider
t_iem_fstyle_flags	g_all_guis.h	/^} t_iem_fstyle_flags;$/;"	t	typeref:struct:_iem_fstyle_flags
t_iem_init_symargs	g_all_guis.h	/^} t_iem_init_symargs;$/;"	t	typeref:struct:_iem_init_symargs
t_iemfunptr	g_all_guis.h	/^typedef void (*t_iemfunptr)(void *x, t_glist *glist, int mode);$/;"	t
t_iemgui	g_all_guis.h	/^} t_iemgui;$/;"	t	typeref:struct:_iemgui
t_iemguidummy	g_all_guis.h	/^} t_iemguidummy;$/;"	t	typeref:struct:_iemguidummy
t_inlet	m_pd.h	189;"	d
t_int	m_pd.h	/^typedef PD_LONGINTTYPE t_int;       \/* pointer-size integer *\/$/;"	t
t_key	x_gui.c	/^} t_key;$/;"	t	typeref:struct:_key	file:
t_key	x_text.c	/^} t_key;$/;"	t	typeref:struct:_key	file:
t_keyname	x_gui.c	/^} t_keyname;$/;"	t	typeref:struct:_keyname	file:
t_keyup	x_gui.c	/^} t_keyup;$/;"	t	typeref:struct:_keyup	file:
t_line	d_ctl.c	/^} t_line;$/;"	t	typeref:struct:_line	file:
t_line	x_time.c	/^} t_line;$/;"	t	typeref:struct:_line	file:
t_linetraverser	g_canvas.h	/^} t_linetraverser;$/;"	t	typeref:struct:_linetraverser
t_list	g_canvas.h	/^    struct _gtemplate *t_list;  \/* list of "struct"\/gtemplate objects *\/$/;"	m	struct:_template	typeref:struct:_template::_gtemplate
t_list_append	x_list.c	/^} t_list_append;$/;"	t	typeref:struct:_list_append	file:
t_list_fromsymbol	x_list.c	/^} t_list_fromsymbol;$/;"	t	typeref:struct:_list_fromsymbol	file:
t_list_length	x_list.c	/^} t_list_length;$/;"	t	typeref:struct:_list_length	file:
t_list_prepend	x_list.c	/^} t_list_prepend;$/;"	t	typeref:struct:_list_prepend	file:
t_list_split	x_list.c	/^} t_list_split;$/;"	t	typeref:struct:_list_split	file:
t_list_tosymbol	x_list.c	/^} t_list_tosymbol;$/;"	t	typeref:struct:_list_tosymbol	file:
t_list_trim	x_list.c	/^} t_list_trim;$/;"	t	typeref:struct:_list_trim	file:
t_listelem	x_list.c	/^} t_listelem;$/;"	t	typeref:struct:_listelem	file:
t_listmethod	m_imp.h	/^typedef void (*t_listmethod)(t_pd *x, t_symbol *s, int argc, t_atom *argv);$/;"	t
t_loadbang	x_misc.c	/^} t_loadbang;$/;"	t	typeref:struct:_loadbang	file:
t_loadlist	s_loader.c	/^} t_loadlist;$/;"	t	typeref:struct:_loadedlist	file:
t_log_tilde	d_math.c	/^} t_log_tilde;$/;"	t	typeref:struct:_log_tilde	file:
t_lopctl	d_filter.c	/^} t_lopctl;$/;"	t	typeref:struct:lopctl	file:
t_makefilename	x_connective.c	/^} t_makefilename;$/;"	t	typeref:struct:_makefilename	file:
t_makenote	x_midi.c	/^} t_makenote;$/;"	t	typeref:struct:_makenote	file:
t_max	d_arithmetic.c	/^} t_max;$/;"	t	typeref:struct:_max	file:
t_message	g_text.c	/^} t_message;$/;"	t	typeref:struct:_message	file:
t_messgimme	m_class.c	/^typedef void(*t_messgimme)(t_pd *x, t_symbol *s, int argc, t_atom *argv);$/;"	t	file:
t_messresponder	g_text.c	/^} t_messresponder;$/;"	t	typeref:struct:_messresponder	file:
t_method	m_pd.h	/^typedef void (*t_method)(void);$/;"	t
t_methodentry	m_imp.h	/^} t_methodentry;$/;"	t	typeref:struct:_methodentry
t_metro	x_time.c	/^} t_metro;$/;"	t	typeref:struct:_metro	file:
t_midiclkin	x_midi.c	/^} t_midiclkin;$/;"	t	typeref:struct:_midiclkin	file:
t_midiin	x_midi.c	/^} t_midiin;$/;"	t	typeref:struct:_midiin	file:
t_midiout	x_midi.c	/^} t_midiout;$/;"	t	typeref:struct:_midiout	file:
t_midiparser	s_midi.c	/^} t_midiparser;$/;"	t	typeref:struct:midiparser	file:
t_midiqelem	s_midi.c	/^} t_midiqelem;$/;"	t	typeref:struct:_midiqelem	file:
t_midirealtimein	x_midi.c	/^} t_midirealtimein;$/;"	t	typeref:struct:_midirealtimein	file:
t_min	d_arithmetic.c	/^} t_min;$/;"	t	typeref:struct:_min	file:
t_minus	d_arithmetic.c	/^} t_minus;$/;"	t	typeref:struct:_minus	file:
t_moses	x_connective.c	/^} t_moses;$/;"	t	typeref:struct:_moses	file:
t_mtof_tilde	d_math.c	/^} t_mtof_tilde;$/;"	t	typeref:struct:mtof_tilde	file:
t_multidev	s_audio_oss.c	/^} t_multidev;$/;"	t	typeref:struct:_multidev	file:
t_my_canvas	g_all_guis.h	/^} t_my_canvas;$/;"	t	typeref:struct:_my_canvas
t_my_numbox	g_all_guis.h	/^} t_my_numbox;$/;"	t	typeref:struct:_my_numbox
t_n	g_canvas.h	/^    int t_n;                    \/* number of dataslots (fields) *\/$/;"	m	struct:_template
t_namecanvas	x_misc.c	/^} t_namecanvas;$/;"	t	typeref:struct:_namecanvas	file:
t_namelist	s_stuff.h	/^} t_namelist;$/;"	t	typeref:struct:_namelist
t_netreceive	x_net.c	/^} t_netreceive;$/;"	t	typeref:struct:_netreceive	file:
t_netsend	x_net.c	/^} t_netsend;$/;"	t	typeref:struct:_netsend	file:
t_newgimme	m_class.c	/^typedef t_pd *(*t_newgimme)(t_symbol *s, int argc, t_atom *argv);$/;"	t	file:
t_newmethod	m_pd.h	/^typedef void *(*t_newmethod)( void);$/;"	t
t_nextstep	d_soundfile.c	/^} t_nextstep;$/;"	t	typeref:struct:_nextstep	file:
t_noise	d_osc.c	/^} t_noise;$/;"	t	typeref:struct:_noise	file:
t_notein	x_midi.c	/^} t_notein;$/;"	t	typeref:struct:_notein	file:
t_noteout	x_midi.c	/^} t_noteout;$/;"	t	typeref:struct:_noteout	file:
t_object	m_pd.h	/^typedef struct _text t_object;$/;"	t	typeref:struct:_text
t_openpanel	x_gui.c	/^} t_openpanel;$/;"	t	typeref:struct:_openpanel	file:
t_osc	d_osc.c	/^} t_osc;$/;"	t	typeref:struct:_osc	file:
t_oss_dev	s_audio_oss.c	/^} t_oss_dev;$/;"	t	typeref:struct:_oss_dev	file:
t_oss_int16	s_audio_oss.c	/^typedef int16_t t_oss_int16;$/;"	t	file:
t_oss_int32	s_audio_oss.c	/^typedef int32_t t_oss_int32;$/;"	t	file:
t_outconnect	m_pd.h	198;"	d
t_outlet	m_pd.h	186;"	d
t_over	d_arithmetic.c	/^} t_over;$/;"	t	typeref:struct:_over	file:
t_pa_sample	s_audio.c	/^typedef long t_pa_sample;$/;"	t	file:
t_pack	x_connective.c	/^} t_pack;$/;"	t	typeref:struct:_pack	file:
t_parentactivatefn	g_canvas.h	/^typedef void (*t_parentactivatefn)(t_gobj *x, struct _glist *glist,$/;"	t
t_parentclickfn	g_canvas.h	/^typedef int (*t_parentclickfn)(t_gobj *x, struct _glist *glist,$/;"	t
t_parentdisplacefn	g_canvas.h	/^typedef void (*t_parentdisplacefn)(t_gobj *x, struct _glist *glist, $/;"	t
t_parentgetrectfn	g_canvas.h	/^typedef void (*t_parentgetrectfn)(t_gobj *x, struct _glist *glist,$/;"	t
t_parentselectfn	g_canvas.h	/^typedef void (*t_parentselectfn)(t_gobj *x, struct _glist *glist,$/;"	t
t_parentvisfn	g_canvas.h	/^typedef void (*t_parentvisfn)(t_gobj *x, struct _glist *glist,$/;"	t
t_parentwidgetbehavior	m_pd.h	457;"	d
t_pd	m_pd.h	/^typedef t_class *t_pd;      \/* pure datum: nothing but a class pointer *\/$/;"	t
t_pdfloat	x_connective.c	/^} t_pdfloat;$/;"	t	typeref:struct:_pdfloat	file:
t_pdinstance	m_pd.h	755;"	d
t_pdint	x_connective.c	/^} t_pdint;$/;"	t	typeref:struct:_pdint	file:
t_pdobj	g_canvas.h	/^    t_pd t_pdobj;               \/* header *\/$/;"	m	struct:_template
t_pdsymbol	x_connective.c	/^} t_pdsymbol;$/;"	t	typeref:struct:_pdsymbol	file:
t_perfroutine	m_pd.h	/^typedef t_int *(*t_perfroutine)(t_int *args);$/;"	t
t_pgmin	x_midi.c	/^} t_pgmin;$/;"	t	typeref:struct:_pgmin	file:
t_pgmout	x_midi.c	/^} t_pgmout;$/;"	t	typeref:struct:_pgmout	file:
t_phasor	d_osc.c	/^} t_phasor;$/;"	t	typeref:struct:_phasor	file:
t_pipe	x_time.c	/^} t_pipe;$/;"	t	typeref:struct:_pipe	file:
t_pipeout	x_time.c	/^} t_pipeout;$/;"	t	typeref:struct:pipeout	file:
t_plot	g_template.c	/^} t_plot;$/;"	t	typeref:struct:_plot	file:
t_plus	d_arithmetic.c	/^} t_plus;$/;"	t	typeref:struct:_plus	file:
t_pointermethod	m_imp.h	/^typedef void (*t_pointermethod)(t_pd *x, t_gpointer *gp);$/;"	t
t_poly	x_midi.c	/^} t_poly;$/;"	t	typeref:struct:poly	file:
t_polytouchin	x_midi.c	/^} t_polytouchin;$/;"	t	typeref:struct:_polytouchin	file:
t_polytouchout	x_midi.c	/^} t_polytouchout;$/;"	t	typeref:struct:_polytouchout	file:
t_pow_tilde	d_math.c	/^} t_pow_tilde;$/;"	t	typeref:struct:_pow_tilde	file:
t_powtodb_tilde	d_math.c	/^} t_powtodb_tilde;$/;"	t	typeref:struct:powtodb_tilde	file:
t_print	d_misc.c	/^} t_print;$/;"	t	typeref:struct:_print	file:
t_print	x_interface.c	/^} t_print;$/;"	t	typeref:struct:_print	file:
t_printhook	s_stuff.h	/^typedef void (*t_printhook)(const char *s);$/;"	t
t_propertiesfn	m_pd.h	/^typedef void (*t_propertiesfn)(t_gobj *x, struct _glist *glist);$/;"	t
t_ptrobj	g_traversal.c	/^} t_ptrobj;$/;"	t	typeref:struct:_ptrobj	file:
t_qlist	x_text.c	/^} t_qlist;$/;"	t	typeref:struct:_qlist	file:
t_random	x_misc.c	/^} t_random;$/;"	t	typeref:struct:_random	file:
t_readsf	d_soundfile.c	/^} t_readsf;$/;"	t	typeref:struct:_readsf	file:
t_realtime	x_misc.c	/^} t_realtime;$/;"	t	typeref:struct:_realtime	file:
t_receive	x_connective.c	/^} t_receive;$/;"	t	typeref:struct:_receive	file:
t_resample	m_pd.h	/^} t_resample;$/;"	t	typeref:struct:_resample
t_resizebytes	m_pd.h	711;"	d
t_resync	m_sched.c	/^} t_resync;$/;"	t	typeref:struct:_resync	file:
t_rmstodb_tilde	d_math.c	/^} t_rmstodb_tilde;$/;"	t	typeref:struct:rmstodb_tilde	file:
t_route	x_connective.c	/^} t_route;$/;"	t	typeref:struct:_route	file:
t_routeelement	x_connective.c	/^} t_routeelement;$/;"	t	typeref:struct:_routeelement	file:
t_rtext	g_canvas.h	62;"	d
t_sample	m_pd.h	/^typedef PD_FLOATTYPE t_sample;$/;"	t
t_sampleint_union	m_pd.h	/^} t_sampleint_union;$/;"	t	typeref:union:_sampleint_union
t_samplerate	d_ugen.c	/^} t_samplerate;$/;"	t	typeref:struct:_samplerate	file:
t_sampleuint	d_soundfile.c	/^} t_sampleuint;$/;"	t	typeref:union:_samplelong	file:
t_savefn	m_pd.h	/^typedef void (*t_savefn)(t_gobj *x, t_binbuf *b);$/;"	t
t_savepanel	x_gui.c	/^} t_savepanel;$/;"	t	typeref:struct:_savepanel	file:
t_sbuf	s_audio_mmio.c	/^} t_sbuf;$/;"	t	typeref:struct:_sbuf	file:
t_scalar	m_pd.h	/^} t_scalar;$/;"	t	typeref:struct:_scalar
t_scalarmax	d_arithmetic.c	/^} t_scalarmax;$/;"	t	typeref:struct:_scalarmax	file:
t_scalarmin	d_arithmetic.c	/^} t_scalarmin;$/;"	t	typeref:struct:_scalarmin	file:
t_scalarminus	d_arithmetic.c	/^} t_scalarminus;$/;"	t	typeref:struct:_scalarminus	file:
t_scalarover	d_arithmetic.c	/^} t_scalarover;$/;"	t	typeref:struct:_scalarover	file:
t_scalarplus	d_arithmetic.c	/^} t_scalarplus;$/;"	t	typeref:struct:_scalarplus	file:
t_scalartimes	d_arithmetic.c	/^} t_scalartimes;$/;"	t	typeref:struct:_scalartimes	file:
t_sel1	x_connective.c	/^} t_sel1;$/;"	t	typeref:struct:_sel1	file:
t_sel2	x_connective.c	/^} t_sel2;$/;"	t	typeref:struct:_sel2	file:
t_selectelement	x_connective.c	/^} t_selectelement;$/;"	t	typeref:struct:_selectelement	file:
t_selectfn	g_canvas.h	/^typedef void (*t_selectfn)(t_gobj *x, struct _glist *glist, int state);$/;"	t
t_selection	g_canvas.h	/^} t_selection;$/;"	t	typeref:struct:_selection
t_send	x_connective.c	/^} t_send;$/;"	t	typeref:struct:_send	file:
t_serial	x_misc.c	/^} t_serial;$/;"	t	typeref:struct:_serial	file:
t_set	g_traversal.c	/^} t_set;$/;"	t	typeref:struct:_set	file:
t_setsize	g_traversal.c	/^} t_setsize;$/;"	t	typeref:struct:_setsize	file:
t_setvariable	g_traversal.c	/^} t_setvariable;$/;"	t	typeref:struct:_setvariable	file:
t_sig	d_ctl.c	/^} t_sig;$/;"	t	typeref:struct:_sig	file:
t_sigbiquad	d_filter.c	/^} t_sigbiquad;$/;"	t	typeref:struct:sigbiquad	file:
t_sigbp	d_filter.c	/^} t_sigbp;$/;"	t	typeref:struct:sigbp	file:
t_sigcatch	d_global.c	/^} t_sigcatch;$/;"	t	typeref:struct:_sigcatch	file:
t_sigcpole	d_filter.c	/^} t_sigcpole;$/;"	t	typeref:struct:sigcpole	file:
t_sigczero	d_filter.c	/^} t_sigczero;$/;"	t	typeref:struct:sigczero	file:
t_sigczero_rev	d_filter.c	/^} t_sigczero_rev;$/;"	t	typeref:struct:sigczero_rev	file:
t_sigdelread	d_delay.c	/^} t_sigdelread;$/;"	t	typeref:struct:_sigdelread	file:
t_sigdelwrite	d_delay.c	/^} t_sigdelwrite;$/;"	t	typeref:struct:_sigdelwrite	file:
t_sigenv	d_ctl.c	/^} t_sigenv;$/;"	t	typeref:struct:sigenv	file:
t_sigfft	d_fft.c	/^} t_sigfft;$/;"	t	typeref:struct:fft	file:
t_sigframp	d_fft.c	/^} t_sigframp;$/;"	t	typeref:struct:framp	file:
t_sighip	d_filter.c	/^} t_sighip;$/;"	t	typeref:struct:sighip	file:
t_siginlet	d_ugen.c	/^} t_siginlet;$/;"	t	typeref:struct:_siginlet	file:
t_siglop	d_filter.c	/^} t_siglop;$/;"	t	typeref:struct:siglop	file:
t_signal	m_pd.h	/^} t_signal;$/;"	t	typeref:struct:_signal
t_sigoutconnect	d_ugen.c	/^} t_sigoutconnect;$/;"	t	typeref:struct:_sigoutconnect	file:
t_sigoutlet	d_ugen.c	/^} t_sigoutlet;$/;"	t	typeref:struct:_sigoutlet	file:
t_sigreceive	d_global.c	/^} t_sigreceive;$/;"	t	typeref:struct:_sigreceive	file:
t_sigrfft	d_fft.c	/^} t_sigrfft;$/;"	t	typeref:struct:rfft	file:
t_sigrifft	d_fft.c	/^} t_sigrifft;$/;"	t	typeref:struct:rifft	file:
t_sigrpole	d_filter.c	/^} t_sigrpole;$/;"	t	typeref:struct:sigrpole	file:
t_sigrsqrt	d_math.c	/^} t_sigrsqrt;$/;"	t	typeref:struct:sigrsqrt	file:
t_sigrzero	d_filter.c	/^} t_sigrzero;$/;"	t	typeref:struct:sigrzero	file:
t_sigrzero_rev	d_filter.c	/^} t_sigrzero_rev;$/;"	t	typeref:struct:sigrzero_rev	file:
t_sigsamphold	d_filter.c	/^} t_sigsamphold;$/;"	t	typeref:struct:sigsamphold	file:
t_sigsend	d_global.c	/^} t_sigsend;$/;"	t	typeref:struct:_sigsend	file:
t_sigsqrt	d_math.c	/^} t_sigsqrt;$/;"	t	typeref:struct:sigsqrt	file:
t_sigthrow	d_global.c	/^} t_sigthrow;$/;"	t	typeref:struct:_sigthrow	file:
t_sigvcf	d_osc.c	/^} t_sigvcf;$/;"	t	typeref:struct:sigvcf	file:
t_sigvd	d_delay.c	/^} t_sigvd;$/;"	t	typeref:struct:_sigvd	file:
t_sigwrap	d_math.c	/^} t_sigwrap;$/;"	t	typeref:struct:wrap	file:
t_snapshot	d_ctl.c	/^} t_snapshot;$/;"	t	typeref:struct:_snapshot	file:
t_socketnotifier	s_stuff.h	/^typedef void (*t_socketnotifier)(void *x, int n);$/;"	t
t_socketreceivefn	s_stuff.h	/^typedef void (*t_socketreceivefn)(void *x, t_binbuf *b);$/;"	t
t_socketreceiver	s_stuff.h	177;"	d
t_soundfiler	d_soundfile.c	/^} t_soundfiler;$/;"	t	typeref:struct:_soundfiler	file:
t_spigot	x_connective.c	/^} t_spigot;$/;"	t	typeref:struct:_spigot	file:
t_stripnote	x_midi.c	/^} t_stripnote;$/;"	t	typeref:struct:_stripnote	file:
t_swap	x_connective.c	/^} t_swap;$/;"	t	typeref:struct:_swap	file:
t_sym	g_canvas.h	/^    t_symbol *t_sym;            \/* name *\/$/;"	m	struct:_template
t_symbol	m_pd.h	/^} t_symbol;$/;"	t	typeref:struct:_symbol
t_symbolmethod	m_imp.h	/^typedef void (*t_symbolmethod)(t_pd *x, t_symbol *s);$/;"	t
t_tabosc4_tilde	d_array.c	/^} t_tabosc4_tilde;$/;"	t	typeref:struct:_tabosc4_tilde	file:
t_tabplay_tilde	d_array.c	/^} t_tabplay_tilde;$/;"	t	typeref:struct:_tabplay_tilde	file:
t_tabread	d_array.c	/^} t_tabread;$/;"	t	typeref:struct:_tabread	file:
t_tabread4	d_array.c	/^} t_tabread4;$/;"	t	typeref:struct:_tabread4	file:
t_tabread4_tilde	d_array.c	/^} t_tabread4_tilde;$/;"	t	typeref:struct:_tabread4_tilde	file:
t_tabread_tilde	d_array.c	/^} t_tabread_tilde;$/;"	t	typeref:struct:_tabread_tilde	file:
t_tabreceive	d_array.c	/^} t_tabreceive;$/;"	t	typeref:struct:_tabreceive	file:
t_tabsend	d_array.c	/^} t_tabsend;$/;"	t	typeref:struct:_tabsend	file:
t_tabwrite	d_array.c	/^} t_tabwrite;$/;"	t	typeref:struct:_tabwrite	file:
t_tabwrite_tilde	d_array.c	/^} t_tabwrite_tilde;$/;"	t	typeref:struct:_tabwrite_tilde	file:
t_template	g_canvas.h	/^} t_template;$/;"	t	typeref:struct:_template
t_text	m_pd.h	/^} t_text;$/;"	t	typeref:struct:_text
t_text_client	x_text.c	/^} t_text_client;$/;"	t	typeref:struct:_text_client	file:
t_text_define	x_text.c	/^} t_text_define;$/;"	t	typeref:struct:_text_define	file:
t_text_fromlist	x_text.c	844;"	d	file:
t_text_get	x_text.c	/^} t_text_get;$/;"	t	typeref:struct:_text_get	file:
t_text_search	x_text.c	/^} t_text_search;$/;"	t	typeref:struct:_text_search	file:
t_text_sequence	x_text.c	/^} t_text_sequence;$/;"	t	typeref:struct:_text_sequence	file:
t_text_set	x_text.c	/^} t_text_set;$/;"	t	typeref:struct:_text_set	file:
t_text_size	x_text.c	/^} t_text_size;$/;"	t	typeref:struct:_text_size	file:
t_text_tolist	x_text.c	810;"	d	file:
t_textbuf	x_text.c	/^} t_textbuf;$/;"	t	typeref:struct:_textbuf	file:
t_threshold_tilde	d_ctl.c	/^} t_threshold_tilde;$/;"	t	typeref:struct:_threshold_tilde	file:
t_tick	g_canvas.h	/^} t_tick;$/;"	t	typeref:struct:_tick
t_timer	x_time.c	/^} t_timer;$/;"	t	typeref:struct:_timer	file:
t_times	d_arithmetic.c	/^} t_times;$/;"	t	typeref:struct:_times	file:
t_toggle	g_all_guis.h	/^} t_toggle;$/;"	t	typeref:struct:_toggle
t_touchin	x_midi.c	/^} t_touchin;$/;"	t	typeref:struct:_touchin	file:
t_touchout	x_midi.c	/^} t_touchout;$/;"	t	typeref:struct:_touchout	file:
t_trigger	x_connective.c	/^} t_trigger;$/;"	t	typeref:struct:_trigger	file:
t_triggerout	x_connective.c	/^} t_triggerout;$/;"	t	typeref:struct:triggerout	file:
t_tscalar	g_canvas.h	71;"	d
t_typedout	g_traversal.c	/^} t_typedout;$/;"	t	typeref:struct:__anon4	file:
t_ugenbox	d_ugen.c	/^} t_ugenbox;$/;"	t	typeref:struct:_ugenbox	file:
t_undo_connect	g_editor.c	/^} t_undo_connect;$/;"	t	typeref:struct:_undo_connect	file:
t_undo_cut	g_editor.c	/^} t_undo_cut;$/;"	t	typeref:struct:_undo_cut	file:
t_undo_move	g_editor.c	/^} t_undo_move;$/;"	t	typeref:struct:_undo_move	file:
t_undo_move_elem	g_editor.c	/^} t_undo_move_elem;$/;"	t	typeref:struct:_undo_move_elem	file:
t_undo_paste	g_editor.c	/^} t_undo_paste;$/;"	t	typeref:struct:_undo_paste	file:
t_undofn	g_canvas.h	/^typedef void (*t_undofn)(t_canvas *canvas, void *buf,$/;"	t
t_unpack	x_connective.c	/^} t_unpack;$/;"	t	typeref:struct:_unpack	file:
t_unpackout	x_connective.c	/^} t_unpackout;$/;"	t	typeref:struct:unpackout	file:
t_until	x_connective.c	/^} t_until;$/;"	t	typeref:struct:_until	file:
t_updateheader	g_canvas.h	/^} t_updateheader;$/;"	t	typeref:struct:_updateheader
t_value	x_connective.c	/^} t_value;$/;"	t	typeref:struct:_value	file:
t_vcfctl	d_osc.c	/^} t_vcfctl;$/;"	t	typeref:struct:vcfctl	file:
t_vcommon	x_connective.c	/^} t_vcommon;$/;"	t	typeref:struct:vcommon	file:
t_vdial	g_all_guis.h	/^} t_vdial;$/;"	t	typeref:struct:_vdial
t_vec	g_canvas.h	/^    t_dataslot *t_vec;          \/* array of dataslots *\/$/;"	m	struct:_template
t_vinlet	g_io.c	/^} t_vinlet;$/;"	t	typeref:struct:_vinlet	file:
t_visfn	g_canvas.h	/^typedef void (*t_visfn)(t_gobj *x, struct _glist *glist, int flag);$/;"	t
t_vline	d_ctl.c	/^} t_vline;$/;"	t	typeref:struct:_vline	file:
t_voice	x_midi.c	/^} t_voice;$/;"	t	typeref:struct:voice	file:
t_voutlet	g_io.c	/^} t_voutlet;$/;"	t	typeref:struct:_voutlet	file:
t_vradio	g_all_guis.h	276;"	d
t_vseg	d_ctl.c	/^} t_vseg;$/;"	t	typeref:struct:_vseg	file:
t_vslider	g_all_guis.h	/^} t_vslider;$/;"	t	typeref:struct:_vslider
t_vsnapshot	d_ctl.c	/^} t_vsnapshot;$/;"	t	typeref:struct:_vsnapshot	file:
t_vu	g_all_guis.h	/^} t_vu;$/;"	t	typeref:struct:_vu
t_wave	d_soundfile.c	/^} t_wave;$/;"	t	typeref:struct:_wave	file:
t_wavechunk	d_soundfile.c	/^} t_wavechunk;$/;"	t	typeref:struct:_wavechunk	file:
t_widgetbehavior	m_pd.h	454;"	d
t_word	m_pd.h	/^} t_word;$/;"	t	typeref:union:word
t_writesf	d_soundfile.c	2164;"	d	file:
t_xxx	s_loader.c	/^typedef void (*t_xxx)(void);$/;"	t	file:
tabcount	x_array.c	/^static int tabcount = 0;$/;"	v	file:
tabfudge	d_array.c	/^union tabfudge$/;"	u	file:
tabfudge	d_osc.c	/^union tabfudge$/;"	u	file:
table_donew	x_array.c	/^static void *table_donew(t_symbol *s, int size, int flags,$/;"	f	file:
table_new	x_array.c	/^static void *table_new(t_symbol *s, t_floatarg f)$/;"	f	file:
tabosc4_tilde_class	d_array.c	/^static t_class *tabosc4_tilde_class;$/;"	v	file:
tabosc4_tilde_dsp	d_array.c	/^static void tabosc4_tilde_dsp(t_tabosc4_tilde *x, t_signal **sp)$/;"	f	file:
tabosc4_tilde_ft1	d_array.c	/^static void tabosc4_tilde_ft1(t_tabosc4_tilde *x, t_float f)$/;"	f	file:
tabosc4_tilde_new	d_array.c	/^static void *tabosc4_tilde_new(t_symbol *s)$/;"	f	file:
tabosc4_tilde_perform	d_array.c	/^static t_int *tabosc4_tilde_perform(t_int *w)$/;"	f	file:
tabosc4_tilde_set	d_array.c	/^static void tabosc4_tilde_set(t_tabosc4_tilde *x, t_symbol *s)$/;"	f	file:
tabosc4_tilde_setup	d_array.c	/^static void tabosc4_tilde_setup(void)$/;"	f	file:
tabplay_tilde_class	d_array.c	/^static t_class *tabplay_tilde_class;$/;"	v	file:
tabplay_tilde_dsp	d_array.c	/^static void tabplay_tilde_dsp(t_tabplay_tilde *x, t_signal **sp)$/;"	f	file:
tabplay_tilde_free	d_array.c	/^static void tabplay_tilde_free(t_tabplay_tilde *x)$/;"	f	file:
tabplay_tilde_list	d_array.c	/^static void tabplay_tilde_list(t_tabplay_tilde *x, t_symbol *s,$/;"	f	file:
tabplay_tilde_new	d_array.c	/^static void *tabplay_tilde_new(t_symbol *s)$/;"	f	file:
tabplay_tilde_perform	d_array.c	/^static t_int *tabplay_tilde_perform(t_int *w)$/;"	f	file:
tabplay_tilde_set	d_array.c	/^static void tabplay_tilde_set(t_tabplay_tilde *x, t_symbol *s)$/;"	f	file:
tabplay_tilde_setup	d_array.c	/^static void tabplay_tilde_setup(void)$/;"	f	file:
tabplay_tilde_stop	d_array.c	/^static void tabplay_tilde_stop(t_tabplay_tilde *x)$/;"	f	file:
tabplay_tilde_tick	d_array.c	/^static void tabplay_tilde_tick(t_tabplay_tilde *x)$/;"	f	file:
tabread4_class	d_array.c	/^static t_class *tabread4_class;$/;"	v	file:
tabread4_float	d_array.c	/^static void tabread4_float(t_tabread4 *x, t_float f)$/;"	f	file:
tabread4_new	d_array.c	/^static void *tabread4_new(t_symbol *s)$/;"	f	file:
tabread4_set	d_array.c	/^static void tabread4_set(t_tabread4 *x, t_symbol *s)$/;"	f	file:
tabread4_setup	d_array.c	/^static void tabread4_setup(void)$/;"	f	file:
tabread4_tilde_class	d_array.c	/^static t_class *tabread4_tilde_class;$/;"	v	file:
tabread4_tilde_dsp	d_array.c	/^static void tabread4_tilde_dsp(t_tabread4_tilde *x, t_signal **sp)$/;"	f	file:
tabread4_tilde_free	d_array.c	/^static void tabread4_tilde_free(t_tabread4_tilde *x)$/;"	f	file:
tabread4_tilde_new	d_array.c	/^static void *tabread4_tilde_new(t_symbol *s)$/;"	f	file:
tabread4_tilde_perform	d_array.c	/^static t_int *tabread4_tilde_perform(t_int *w)$/;"	f	file:
tabread4_tilde_set	d_array.c	/^static void tabread4_tilde_set(t_tabread4_tilde *x, t_symbol *s)$/;"	f	file:
tabread4_tilde_setup	d_array.c	/^static void tabread4_tilde_setup(void)$/;"	f	file:
tabread_class	d_array.c	/^static t_class *tabread_class;$/;"	v	file:
tabread_float	d_array.c	/^static void tabread_float(t_tabread *x, t_float f)$/;"	f	file:
tabread_new	d_array.c	/^static void *tabread_new(t_symbol *s)$/;"	f	file:
tabread_set	d_array.c	/^static void tabread_set(t_tabread *x, t_symbol *s)$/;"	f	file:
tabread_setup	d_array.c	/^static void tabread_setup(void)$/;"	f	file:
tabread_tilde_class	d_array.c	/^static t_class *tabread_tilde_class;$/;"	v	file:
tabread_tilde_dsp	d_array.c	/^static void tabread_tilde_dsp(t_tabread_tilde *x, t_signal **sp)$/;"	f	file:
tabread_tilde_free	d_array.c	/^static void tabread_tilde_free(t_tabread_tilde *x)$/;"	f	file:
tabread_tilde_new	d_array.c	/^static void *tabread_tilde_new(t_symbol *s)$/;"	f	file:
tabread_tilde_perform	d_array.c	/^static t_int *tabread_tilde_perform(t_int *w)$/;"	f	file:
tabread_tilde_set	d_array.c	/^static void tabread_tilde_set(t_tabread_tilde *x, t_symbol *s)$/;"	f	file:
tabread_tilde_setup	d_array.c	/^static void tabread_tilde_setup(void)$/;"	f	file:
tabreceive_class	d_array.c	/^static t_class *tabreceive_class;$/;"	v	file:
tabreceive_dsp	d_array.c	/^static void tabreceive_dsp(t_tabreceive *x, t_signal **sp)$/;"	f	file:
tabreceive_new	d_array.c	/^static void *tabreceive_new(t_symbol *s)$/;"	f	file:
tabreceive_perform	d_array.c	/^static t_int *tabreceive_perform(t_int *w)$/;"	f	file:
tabreceive_set	d_array.c	/^static void tabreceive_set(t_tabreceive *x, t_symbol *s)$/;"	f	file:
tabreceive_setup	d_array.c	/^static void tabreceive_setup(void)$/;"	f	file:
tabsend_class	d_array.c	/^static t_class *tabsend_class;$/;"	v	file:
tabsend_dsp	d_array.c	/^static void tabsend_dsp(t_tabsend *x, t_signal **sp)$/;"	f	file:
tabsend_new	d_array.c	/^static void *tabsend_new(t_symbol *s)$/;"	f	file:
tabsend_perform	d_array.c	/^static t_int *tabsend_perform(t_int *w)$/;"	f	file:
tabsend_set	d_array.c	/^static void tabsend_set(t_tabsend *x, t_symbol *s)$/;"	f	file:
tabsend_setup	d_array.c	/^static void tabsend_setup(void)$/;"	f	file:
tabwrite_class	d_array.c	/^static t_class *tabwrite_class;$/;"	v	file:
tabwrite_float	d_array.c	/^static void tabwrite_float(t_tabwrite *x, t_float f)$/;"	f	file:
tabwrite_new	d_array.c	/^static void *tabwrite_new(t_symbol *s)$/;"	f	file:
tabwrite_set	d_array.c	/^static void tabwrite_set(t_tabwrite *x, t_symbol *s)$/;"	f	file:
tabwrite_setup	d_array.c	/^void tabwrite_setup(void)$/;"	f
tabwrite_tilde_bang	d_array.c	/^static void tabwrite_tilde_bang(t_tabwrite_tilde *x)$/;"	f	file:
tabwrite_tilde_class	d_array.c	/^static t_class *tabwrite_tilde_class;$/;"	v	file:
tabwrite_tilde_dsp	d_array.c	/^static void tabwrite_tilde_dsp(t_tabwrite_tilde *x, t_signal **sp)$/;"	f	file:
tabwrite_tilde_new	d_array.c	/^static void *tabwrite_tilde_new(t_symbol *s)$/;"	f	file:
tabwrite_tilde_perform	d_array.c	/^static t_int *tabwrite_tilde_perform(t_int *w)$/;"	f	file:
tabwrite_tilde_redraw	d_array.c	/^static void tabwrite_tilde_redraw(t_tabwrite_tilde *x)$/;"	f	file:
tabwrite_tilde_set	d_array.c	/^static void tabwrite_tilde_set(t_tabwrite_tilde *x, t_symbol *s)$/;"	f	file:
tabwrite_tilde_setup	d_array.c	/^static void tabwrite_tilde_setup(void)$/;"	f	file:
tabwrite_tilde_start	d_array.c	/^static void tabwrite_tilde_start(t_tabwrite_tilde *x, t_floatarg f)$/;"	f	file:
tabwrite_tilde_stop	d_array.c	/^static void tabwrite_tilde_stop(t_tabwrite_tilde *x)$/;"	f	file:
tan_class	x_arithmetic.c	/^static t_class *tan_class;      \/* ----------- tan --------------- *\/$/;"	v	file:
tan_float	x_arithmetic.c	/^static void tan_float(t_object *x, t_float f)$/;"	f	file:
tan_new	x_arithmetic.c	/^static void *tan_new(void)$/;"	f	file:
tc_canvas	x_array.c	/^    t_canvas *tc_canvas;$/;"	m	struct:_array_client	file:
tc_field	x_array.c	/^    t_symbol *tc_field;$/;"	m	struct:_array_client	file:
tc_field	x_text.c	/^    t_symbol *tc_field;$/;"	m	struct:_text_client	file:
tc_gp	x_array.c	/^    t_gpointer tc_gp;$/;"	m	struct:_array_client	file:
tc_gp	x_text.c	/^    t_gpointer tc_gp;$/;"	m	struct:_text_client	file:
tc_obj	x_array.c	/^    t_object tc_obj;$/;"	m	struct:_array_client	file:
tc_obj	x_text.c	/^    t_object tc_obj;$/;"	m	struct:_text_client	file:
tc_struct	x_array.c	/^    t_symbol *tc_struct;$/;"	m	struct:_array_client	file:
tc_struct	x_text.c	/^    t_symbol *tc_struct;$/;"	m	struct:_text_client	file:
tc_sym	x_array.c	/^    t_symbol *tc_sym;$/;"	m	struct:_array_client	file:
tc_sym	x_text.c	/^    t_symbol *tc_sym;$/;"	m	struct:_text_client	file:
tcpmakeoutput	u_pdreceive.c	/^static int tcpmakeoutput(t_fdpoll *x, char *inbuf, int len)$/;"	f	file:
tcpread	u_pdreceive.c	/^static void tcpread(t_fdpoll *x)$/;"	f	file:
te_binbuf	m_pd.h	/^    t_binbuf *te_binbuf;        \/* holder for the text *\/$/;"	m	struct:_text
te_g	m_pd.h	/^    t_gobj te_g;                \/* header for graphical object *\/$/;"	m	struct:_text
te_inlet	m_pd.h	/^    t_inlet *te_inlet;          \/* linked list of inlets *\/$/;"	m	struct:_text
te_outlet	m_pd.h	/^    t_outlet *te_outlet;        \/* linked list of outlets *\/$/;"	m	struct:_text
te_pd	m_pd.h	236;"	d
te_type	m_pd.h	/^    unsigned int te_type:2;     \/* from defs below *\/$/;"	m	struct:_text
te_width	m_pd.h	/^    short te_width;             \/* requested width in chars, 0 if auto *\/$/;"	m	struct:_text
te_xpix	m_pd.h	/^    short te_xpix;              \/* x&y location (within the toplevel) *\/$/;"	m	struct:_text
te_ypix	m_pd.h	/^    short te_ypix;$/;"	m	struct:_text
template_cancreate	g_scalar.c	/^static int template_cancreate(t_template *template)$/;"	f	file:
template_class	g_template.c	/^static t_class *template_class;$/;"	v	file:
template_conform	g_template.c	/^void template_conform(t_template *tfrom, t_template *tto)$/;"	f
template_conformarray	g_template.c	/^static void template_conformarray(t_template *tfrom, t_template *tto,$/;"	f	file:
template_conformglist	g_template.c	/^static void template_conformglist(t_template *tfrom, t_template *tto,$/;"	f	file:
template_conformscalar	g_template.c	/^static t_scalar *template_conformscalar(t_template *tfrom, t_template *tto,$/;"	f	file:
template_conformwords	g_template.c	/^static void template_conformwords(t_template *tfrom, t_template *tto,$/;"	f	file:
template_find_field	g_template.c	/^int template_find_field(t_template *x, t_symbol *name, int *p_onset,$/;"	f
template_findbyname	g_template.c	/^t_template *template_findbyname(t_symbol *s)$/;"	f
template_findcanvas	g_template.c	/^t_canvas *template_findcanvas(t_template *template)$/;"	f
template_free	g_template.c	/^void template_free(t_template *x)$/;"	f
template_getfloat	g_template.c	/^t_float template_getfloat(t_template *x, t_symbol *fieldname, t_word *wp,$/;"	f
template_getsymbol	g_template.c	/^t_symbol *template_getsymbol(t_template *x, t_symbol *fieldname, t_word *wp,$/;"	f
template_match	g_template.c	/^int template_match(t_template *x1, t_template *x2)$/;"	f
template_new	g_template.c	/^t_template *template_new(t_symbol *templatesym, int argc, t_atom *argv)$/;"	f
template_notify	g_template.c	/^void template_notify(t_template *template, t_symbol *s, int argc, t_atom *argv)$/;"	f
template_notifyforscalar	g_template.c	/^void template_notifyforscalar(t_template *template, t_glist *owner,$/;"	f
template_setfloat	g_template.c	/^void template_setfloat(t_template *x, t_symbol *fieldname, t_word *wp, $/;"	f
template_setsymbol	g_template.c	/^void template_setsymbol(t_template *x, t_symbol *fieldname, t_word *wp, $/;"	f
template_setup	g_template.c	/^static void template_setup(void)$/;"	f	file:
template_size	g_template.c	/^int template_size(t_template *x)$/;"	f
template_usetemplate	g_template.c	/^static void *template_usetemplate(void *dummy, t_symbol *s,$/;"	f	file:
text_activate	g_text.c	/^static void text_activate(t_gobj *z, t_glist *glist, int state)$/;"	f	file:
text_anything	g_text.c	/^static void text_anything(t_text *x, t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
text_class	g_text.c	/^t_class *text_class;$/;"	v
text_click	g_text.c	/^static int text_click(t_gobj *z, struct _glist *glist,$/;"	f	file:
text_client_argparse	x_text.c	/^static void text_client_argparse(t_text_client *x, int *argcp, t_atom **argvp,$/;"	f	file:
text_client_free	x_text.c	/^static void text_client_free(t_text_client *x)$/;"	f	file:
text_client_getbuf	x_text.c	/^static t_binbuf *text_client_getbuf(t_text_client *x)$/;"	f	file:
text_client_senditup	x_text.c	/^static  void text_client_senditup(t_text_client *x)$/;"	f	file:
text_define_bang	x_text.c	/^void text_define_bang(t_text_define *x)$/;"	f
text_define_class	x_text.c	/^static t_class *text_define_class;$/;"	v	file:
text_define_clear	x_text.c	/^static void text_define_clear(t_text_define *x)$/;"	f	file:
text_define_free	x_text.c	/^static void text_define_free(t_text_define *x)$/;"	f	file:
text_define_frompointer	x_text.c	/^static void text_define_frompointer(t_text_define *x, t_gpointer *gp,$/;"	f	file:
text_define_new	x_text.c	/^static void *text_define_new(t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
text_define_save	x_text.c	/^static void text_define_save(t_gobj *z, t_binbuf *bb)$/;"	f	file:
text_define_set	x_text.c	/^void text_define_set(t_text_define *x, t_symbol *s, int argc, t_atom *argv)$/;"	f
text_define_topointer	x_text.c	/^static void text_define_topointer(t_text_define *x, t_gpointer *gp, t_symbol *s)$/;"	f	file:
text_delete	g_text.c	/^static void text_delete(t_gobj *z, t_glist *glist)$/;"	f	file:
text_displace	g_text.c	/^static void text_displace(t_gobj *z, t_glist *glist,$/;"	f	file:
text_drawborder	g_text.c	/^void text_drawborder(t_text *x, t_glist *glist,$/;"	f
text_eraseborder	g_text.c	/^void text_eraseborder(t_text *x, t_glist *glist, char *tag)$/;"	f
text_fromlist_class	x_text.c	/^t_class *text_fromlist_class;$/;"	v
text_fromlist_list	x_text.c	/^static void text_fromlist_list(t_text_fromlist *x,$/;"	f	file:
text_fromlist_new	x_text.c	/^static void *text_fromlist_new(t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
text_get_class	x_text.c	/^t_class *text_get_class;$/;"	v
text_get_float	x_text.c	/^static void text_get_float(t_text_get *x, t_floatarg f)$/;"	f	file:
text_get_new	x_text.c	/^static void *text_get_new(t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
text_getrect	g_text.c	/^static void text_getrect(t_gobj *z, t_glist *glist,$/;"	f	file:
text_new	x_text.c	/^static void *text_new(t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
text_nthline	x_text.c	/^static int text_nthline(int n, t_atom *vec, int line, int *startp, int *endp)$/;"	f	file:
text_save	g_text.c	/^void text_save(t_gobj *z, t_binbuf *b)$/;"	f
text_search_class	x_text.c	/^t_class *text_search_class;$/;"	v
text_search_list	x_text.c	/^static void text_search_list(t_text_search *x,$/;"	f	file:
text_search_new	x_text.c	/^static void *text_search_new(t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
text_select	g_text.c	/^static void text_select(t_gobj *z, t_glist *glist, int state)$/;"	f	file:
text_sequence_args	x_text.c	/^static void text_sequence_args(t_text_sequence *x, t_symbol *s,$/;"	f	file:
text_sequence_auto	x_text.c	/^static void text_sequence_auto(t_text_sequence *x)$/;"	f	file:
text_sequence_class	x_text.c	/^t_class *text_sequence_class;$/;"	v
text_sequence_doit	x_text.c	/^static void text_sequence_doit(t_text_sequence *x, int argc, t_atom *argv)$/;"	f	file:
text_sequence_free	x_text.c	/^static void text_sequence_free(t_text_sequence *x)$/;"	f	file:
text_sequence_line	x_text.c	/^static void text_sequence_line(t_text_sequence *x, t_floatarg f)$/;"	f	file:
text_sequence_list	x_text.c	/^static void text_sequence_list(t_text_sequence *x, t_symbol *s, int argc,$/;"	f	file:
text_sequence_new	x_text.c	/^static void *text_sequence_new(t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
text_sequence_step	x_text.c	/^static void text_sequence_step(t_text_sequence *x)$/;"	f	file:
text_sequence_stop	x_text.c	/^static void text_sequence_stop(t_text_sequence *x)$/;"	f	file:
text_sequence_tempo	x_text.c	/^static void text_sequence_tempo(t_text_sequence *x,$/;"	f	file:
text_sequence_tick	x_text.c	/^static void text_sequence_tick(t_text_sequence *x)  \/* clock callback *\/$/;"	f	file:
text_set_class	x_text.c	/^t_class *text_set_class;$/;"	v
text_set_list	x_text.c	/^static void text_set_list(t_text_set *x,$/;"	f	file:
text_set_new	x_text.c	/^static void *text_set_new(t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
text_setto	g_text.c	/^void text_setto(t_text *x, t_glist *glist, char *buf, int bufsize)$/;"	f
text_size_bang	x_text.c	/^static void text_size_bang(t_text_size *x)$/;"	f	file:
text_size_class	x_text.c	/^t_class *text_size_class;$/;"	v
text_size_float	x_text.c	/^static void text_size_float(t_text_size *x, t_floatarg f)$/;"	f	file:
text_size_new	x_text.c	/^static void *text_size_new(t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
text_template_init	x_text.c	/^static void text_template_init( void)$/;"	f	file:
text_templatecanvas	x_text.c	/^static t_pd *text_templatecanvas;$/;"	v	file:
text_templatefile	x_text.c	/^static char text_templatefile[] = "\\$/;"	v	file:
text_tolist_bang	x_text.c	/^static void text_tolist_bang(t_text_tolist *x)$/;"	f	file:
text_tolist_class	x_text.c	/^t_class *text_tolist_class;$/;"	v
text_tolist_new	x_text.c	/^static void *text_tolist_new(t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
text_vis	g_text.c	/^static void text_vis(t_gobj *z, t_glist *glist, int vis)$/;"	f	file:
text_widgetbehavior	g_text.c	/^t_widgetbehavior text_widgetbehavior =$/;"	v
text_xpix	g_graph.c	/^int text_xpix(t_text *x, t_glist *glist)$/;"	f
text_ypix	g_graph.c	/^int text_ypix(t_text *x, t_glist *glist)$/;"	f
textbuf_addline	x_text.c	/^static void textbuf_addline(t_textbuf *b, t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
textbuf_close	x_text.c	/^static void textbuf_close(t_textbuf *x)$/;"	f	file:
textbuf_free	x_text.c	/^static void textbuf_free(t_textbuf *x)$/;"	f	file:
textbuf_init	x_text.c	/^static void textbuf_init(t_textbuf *x)$/;"	f	file:
textbuf_open	x_text.c	/^static void textbuf_open(t_textbuf *x)$/;"	f	file:
textbuf_read	x_text.c	/^static void textbuf_read(t_textbuf *x, t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
textbuf_senditup	x_text.c	/^static void textbuf_senditup(t_textbuf *x)$/;"	f	file:
textbuf_write	x_text.c	/^static void textbuf_write(t_textbuf *x, t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
textfile_bang	x_text.c	/^static void textfile_bang(t_qlist *x)$/;"	f	file:
textfile_class	x_text.c	/^static t_class *textfile_class;$/;"	v	file:
textfile_new	x_text.c	/^static void *textfile_new( void)$/;"	f	file:
textfile_rewind	x_text.c	/^static void textfile_rewind(t_qlist *x)$/;"	f	file:
tf_d	d_array.c	/^    double tf_d;$/;"	m	union:tabfudge	file:
tf_d	d_osc.c	/^    double tf_d;$/;"	m	union:tabfudge	file:
tf_i	d_array.c	/^    int32_t tf_i[2];$/;"	m	union:tabfudge	file:
tf_i	d_osc.c	/^    int32_t tf_i[2];$/;"	m	union:tabfudge	file:
threshold_tilde_class	d_ctl.c	/^static t_class *threshold_tilde_class;$/;"	v	file:
threshold_tilde_dsp	d_ctl.c	/^void threshold_tilde_dsp(t_threshold_tilde *x, t_signal **sp)$/;"	f
threshold_tilde_ff	d_ctl.c	/^static void threshold_tilde_ff(t_threshold_tilde *x)$/;"	f	file:
threshold_tilde_ft1	d_ctl.c	/^static void threshold_tilde_ft1(t_threshold_tilde *x, t_floatarg f)$/;"	f	file:
threshold_tilde_new	d_ctl.c	/^static t_threshold_tilde *threshold_tilde_new(t_floatarg hithresh,$/;"	f	file:
threshold_tilde_perform	d_ctl.c	/^static t_int *threshold_tilde_perform(t_int *w)$/;"	f	file:
threshold_tilde_set	d_ctl.c	/^static void threshold_tilde_set(t_threshold_tilde *x,$/;"	f	file:
threshold_tilde_setup	d_ctl.c	/^static void threshold_tilde_setup( void)$/;"	f	file:
threshold_tilde_tick	d_ctl.c	/^static void threshold_tilde_tick(t_threshold_tilde *x)  $/;"	f	file:
timer_bang	x_time.c	/^static void timer_bang(t_timer *x)$/;"	f	file:
timer_bang2	x_time.c	/^static void timer_bang2(t_timer *x)$/;"	f	file:
timer_class	x_time.c	/^static t_class *timer_class;$/;"	v	file:
timer_new	x_time.c	/^static void *timer_new(t_symbol *unitname, t_floatarg tempo)$/;"	f	file:
timer_setup	x_time.c	/^static void timer_setup(void)$/;"	f	file:
timer_tempo	x_time.c	/^static void timer_tempo(t_timer *x, t_symbol *unitname, t_floatarg tempo)$/;"	f	file:
times_class	d_arithmetic.c	/^static t_class *times_class, *scalartimes_class;$/;"	v	file:
times_dsp	d_arithmetic.c	/^static void times_dsp(t_times *x, t_signal **sp)$/;"	f	file:
times_new	d_arithmetic.c	/^static void *times_new(t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
times_perf8	d_arithmetic.c	/^t_int *times_perf8(t_int *w)$/;"	f
times_perform	d_arithmetic.c	/^t_int *times_perform(t_int *w)$/;"	f
times_setup	d_arithmetic.c	/^static void times_setup(void)$/;"	f	file:
timestamp	s_midi_mmio.c	/^    LARGE_INTEGER timestamp;$/;"	m	struct:evemsw_tag	file:
to_outlet	g_traversal.c	/^    t_outlet *to_outlet;$/;"	m	struct:__anon4	file:
to_type	g_traversal.c	/^    t_symbol *to_type;$/;"	m	struct:__anon4	file:
toggle_bang	g_toggle.c	/^static void toggle_bang(t_toggle *x)$/;"	f	file:
toggle_class	g_toggle.c	/^static t_class *toggle_class;$/;"	v	file:
toggle_click	g_toggle.c	/^static void toggle_click(t_toggle *x, t_floatarg xpos, t_floatarg ypos, t_floatarg shift, t_floatarg ctrl, t_floatarg alt)$/;"	f	file:
toggle_color	g_toggle.c	/^static void toggle_color(t_toggle *x, t_symbol *s, int ac, t_atom *av)$/;"	f	file:
toggle_delta	g_toggle.c	/^static void toggle_delta(t_toggle *x, t_symbol *s, int ac, t_atom *av)$/;"	f	file:
toggle_dialog	g_toggle.c	/^static void toggle_dialog(t_toggle *x, t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
toggle_draw	g_toggle.c	/^void toggle_draw(t_toggle *x, t_glist *glist, int mode)$/;"	f
toggle_draw_config	g_toggle.c	/^void toggle_draw_config(t_toggle* x, t_glist* glist)$/;"	f
toggle_draw_erase	g_toggle.c	/^void toggle_draw_erase(t_toggle* x, t_glist* glist)$/;"	f
toggle_draw_io	g_toggle.c	/^void toggle_draw_io(t_toggle* x, t_glist* glist, int old_snd_rcv_flags)$/;"	f
toggle_draw_move	g_toggle.c	/^void toggle_draw_move(t_toggle *x, t_glist *glist)$/;"	f
toggle_draw_new	g_toggle.c	/^void toggle_draw_new(t_toggle *x, t_glist *glist)$/;"	f
toggle_draw_select	g_toggle.c	/^void toggle_draw_select(t_toggle* x, t_glist* glist)$/;"	f
toggle_draw_update	g_toggle.c	/^void toggle_draw_update(t_toggle *x, t_glist *glist)$/;"	f
toggle_ff	g_toggle.c	/^static void toggle_ff(t_toggle *x)$/;"	f	file:
toggle_float	g_toggle.c	/^static void toggle_float(t_toggle *x, t_floatarg f)$/;"	f	file:
toggle_fout	g_toggle.c	/^static void toggle_fout(t_toggle *x, t_floatarg f)$/;"	f	file:
toggle_getrect	g_toggle.c	/^static void toggle_getrect(t_gobj *z, t_glist *glist, int *xp1, int *yp1, int *xp2, int *yp2)$/;"	f	file:
toggle_init	g_toggle.c	/^static void toggle_init(t_toggle *x, t_floatarg f)$/;"	f	file:
toggle_label	g_toggle.c	/^static void toggle_label(t_toggle *x, t_symbol *s)$/;"	f	file:
toggle_label_font	g_toggle.c	/^static void toggle_label_font(t_toggle *x, t_symbol *s, int ac, t_atom *av)$/;"	f	file:
toggle_label_pos	g_toggle.c	/^static void toggle_label_pos(t_toggle *x, t_symbol *s, int ac, t_atom *av)$/;"	f	file:
toggle_loadbang	g_toggle.c	/^static void toggle_loadbang(t_toggle *x)$/;"	f	file:
toggle_new	g_toggle.c	/^static void *toggle_new(t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
toggle_newclick	g_toggle.c	/^static int toggle_newclick(t_gobj *z, struct _glist *glist, int xpix, int ypix, int shift, int alt, int dbl, int doit)$/;"	f	file:
toggle_nonzero	g_toggle.c	/^static void toggle_nonzero(t_toggle *x, t_floatarg f)$/;"	f	file:
toggle_pos	g_toggle.c	/^static void toggle_pos(t_toggle *x, t_symbol *s, int ac, t_atom *av)$/;"	f	file:
toggle_properties	g_toggle.c	/^static void toggle_properties(t_gobj *z, t_glist *owner)$/;"	f	file:
toggle_receive	g_toggle.c	/^static void toggle_receive(t_toggle *x, t_symbol *s)$/;"	f	file:
toggle_save	g_toggle.c	/^static void toggle_save(t_gobj *z, t_binbuf *b)$/;"	f	file:
toggle_send	g_toggle.c	/^static void toggle_send(t_toggle *x, t_symbol *s)$/;"	f	file:
toggle_set	g_toggle.c	/^static void toggle_set(t_toggle *x, t_floatarg f)$/;"	f	file:
toggle_size	g_toggle.c	/^static void toggle_size(t_toggle *x, t_symbol *s, int ac, t_atom *av)$/;"	f	file:
toggle_widgetbehavior	g_toggle.c	/^t_widgetbehavior toggle_widgetbehavior;$/;"	v
tot	g_io.c	/^static int tot;$/;"	v	file:
totalmem	m_memory.c	/^static int totalmem = 0;$/;"	v	file:
touchin_class	x_midi.c	/^static t_class *touchin_class;$/;"	v	file:
touchin_free	x_midi.c	/^static void touchin_free(t_touchin *x)$/;"	f	file:
touchin_list	x_midi.c	/^static void touchin_list(t_touchin *x, t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
touchin_new	x_midi.c	/^static void *touchin_new(t_floatarg f)$/;"	f	file:
touchin_setup	x_midi.c	/^static void touchin_setup(void)$/;"	f	file:
touchout_class	x_midi.c	/^static t_class *touchout_class;$/;"	v	file:
touchout_float	x_midi.c	/^static void touchout_float(t_touchout *x, t_float f)$/;"	f	file:
touchout_new	x_midi.c	/^static void *touchout_new(t_floatarg channel)$/;"	f	file:
touchout_setup	x_midi.c	/^static void touchout_setup(void)$/;"	f	file:
tr_inlet	g_canvas.h	/^    t_inlet *tr_inlet;$/;"	m	struct:_linetraverser
tr_inno	g_canvas.h	/^    int tr_inno;$/;"	m	struct:_linetraverser
tr_lx1	g_canvas.h	/^    int tr_lx1, tr_ly1, tr_lx2, tr_ly2;$/;"	m	struct:_linetraverser
tr_lx2	g_canvas.h	/^    int tr_lx1, tr_ly1, tr_lx2, tr_ly2;$/;"	m	struct:_linetraverser
tr_ly1	g_canvas.h	/^    int tr_lx1, tr_ly1, tr_lx2, tr_ly2;$/;"	m	struct:_linetraverser
tr_ly2	g_canvas.h	/^    int tr_lx1, tr_ly1, tr_lx2, tr_ly2;$/;"	m	struct:_linetraverser
tr_nextoc	g_canvas.h	/^    t_outconnect *tr_nextoc;$/;"	m	struct:_linetraverser
tr_nextoutno	g_canvas.h	/^    int tr_nextoutno;$/;"	m	struct:_linetraverser
tr_nin	g_canvas.h	/^    int tr_nin;$/;"	m	struct:_linetraverser
tr_nout	g_canvas.h	/^    int tr_nout;$/;"	m	struct:_linetraverser
tr_ob	g_canvas.h	/^    t_object *tr_ob;$/;"	m	struct:_linetraverser
tr_ob2	g_canvas.h	/^    t_object *tr_ob2;$/;"	m	struct:_linetraverser
tr_outlet	g_canvas.h	/^    t_outlet *tr_outlet;$/;"	m	struct:_linetraverser
tr_outno	g_canvas.h	/^    int tr_outno;$/;"	m	struct:_linetraverser
tr_x	g_canvas.h	/^    t_canvas *tr_x;$/;"	m	struct:_linetraverser
tr_x11	g_canvas.h	/^    int tr_x11, tr_y11, tr_x12, tr_y12;$/;"	m	struct:_linetraverser
tr_x12	g_canvas.h	/^    int tr_x11, tr_y11, tr_x12, tr_y12;$/;"	m	struct:_linetraverser
tr_x21	g_canvas.h	/^    int tr_x21, tr_y21, tr_x22, tr_y22;$/;"	m	struct:_linetraverser
tr_x22	g_canvas.h	/^    int tr_x21, tr_y21, tr_x22, tr_y22;$/;"	m	struct:_linetraverser
tr_y11	g_canvas.h	/^    int tr_x11, tr_y11, tr_x12, tr_y12;$/;"	m	struct:_linetraverser
tr_y12	g_canvas.h	/^    int tr_x11, tr_y11, tr_x12, tr_y12;$/;"	m	struct:_linetraverser
tr_y21	g_canvas.h	/^    int tr_x21, tr_y21, tr_x22, tr_y22;$/;"	m	struct:_linetraverser
tr_y22	g_canvas.h	/^    int tr_x21, tr_y21, tr_x22, tr_y22;$/;"	m	struct:_linetraverser
trailingBytesForUTF8	s_utf8.c	/^static const char trailingBytesForUTF8[256] = {$/;"	v	file:
trigger_anything	x_connective.c	/^static void trigger_anything(t_trigger *x, t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
trigger_bang	x_connective.c	/^static void trigger_bang(t_trigger *x)$/;"	f	file:
trigger_class	x_connective.c	/^static t_class *trigger_class;$/;"	v	file:
trigger_float	x_connective.c	/^static void trigger_float(t_trigger *x, t_float f)$/;"	f	file:
trigger_free	x_connective.c	/^static void trigger_free(t_trigger *x)$/;"	f	file:
trigger_list	x_connective.c	/^static void trigger_list(t_trigger *x, t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
trigger_new	x_connective.c	/^static void *trigger_new(t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
trigger_pointer	x_connective.c	/^static void trigger_pointer(t_trigger *x, t_gpointer *gp)$/;"	f	file:
trigger_setup	x_connective.c	/^static void trigger_setup(void)$/;"	f	file:
trigger_symbol	x_connective.c	/^static void trigger_symbol(t_trigger *x, t_symbol *s)$/;"	f	file:
triggerout	x_connective.c	/^typedef struct triggerout$/;"	s	file:
tryingalready	m_class.c	/^static int tryingalready;$/;"	v	file:
typedmess	m_pd.h	712;"	d
u8_charnum	s_utf8.c	/^int u8_charnum(char *s, int offset)$/;"	f
u8_dec	s_utf8.c	/^void u8_dec(char *s, int *i)$/;"	f
u8_dec_ptr	s_utf8.c	/^void u8_dec_ptr(char **sp)$/;"	f
u8_inc	s_utf8.c	/^void u8_inc(char *s, int *i)$/;"	f
u8_inc_ptr	s_utf8.c	/^void u8_inc_ptr(char **sp)$/;"	f
u8_nextchar	s_utf8.c	/^uint32_t u8_nextchar(char *s, int *i)$/;"	f
u8_offset	s_utf8.c	/^int u8_offset(char *str, int charnum)$/;"	f
u8_seqlen	s_utf8.c	/^int u8_seqlen(char *s)$/;"	f
u8_strlen	s_utf8.c	/^int u8_strlen(char *s)$/;"	f
u8_ucs2toutf8	s_utf8.c	/^int u8_ucs2toutf8(char *dest, int sz, uint16_t *src, int srcsz)$/;"	f
u8_utf8toucs2	s_utf8.c	/^int u8_utf8toucs2(uint16_t *dest, int sz, char *src, int srcsz)$/;"	f
u8_wc_nbytes	s_utf8.c	/^int u8_wc_nbytes(uint32_t ch)$/;"	f
u8_wc_toutf8	s_utf8.c	/^int u8_wc_toutf8(char *dest, uint32_t ch)$/;"	f
u8_wc_toutf8_nul	s_utf8.c	/^int u8_wc_toutf8_nul(char *dest, uint32_t ch)$/;"	f
u_done	d_ugen.c	/^    int u_done;$/;"	m	struct:_ugenbox	file:
u_in	d_ugen.c	/^    struct _siginlet *u_in;$/;"	m	struct:_ugenbox	typeref:struct:_ugenbox::_siginlet	file:
u_index	g_editor.c	/^    int u_index;    \/* index of first object pasted *\/  $/;"	m	struct:_undo_paste	file:
u_index1	g_editor.c	/^    int u_index1;$/;"	m	struct:_undo_connect	file:
u_index2	g_editor.c	/^    int u_index2;$/;"	m	struct:_undo_connect	file:
u_inletno	g_editor.c	/^    int u_inletno;$/;"	m	struct:_undo_connect	file:
u_mode	g_editor.c	/^    int u_mode;                 \/* from flags above *\/$/;"	m	struct:_undo_cut	file:
u_n	g_editor.c	/^    int u_n;$/;"	m	struct:_undo_move	file:
u_next	d_ugen.c	/^    struct _ugenbox *u_next;$/;"	m	struct:_ugenbox	typeref:struct:_ugenbox::_ugenbox	file:
u_nin	d_ugen.c	/^    int u_nin;$/;"	m	struct:_ugenbox	file:
u_nout	d_ugen.c	/^    int u_nout;$/;"	m	struct:_ugenbox	file:
u_obj	d_ugen.c	/^    t_object *u_obj;$/;"	m	struct:_ugenbox	file:
u_objectbuf	g_editor.c	/^    t_binbuf *u_objectbuf;      \/* the object cleared or typed into *\/$/;"	m	struct:_undo_cut	file:
u_out	d_ugen.c	/^    struct _sigoutlet *u_out;$/;"	m	struct:_ugenbox	typeref:struct:_ugenbox::_sigoutlet	file:
u_outlet	x_connective.c	/^    t_outlet *u_outlet;$/;"	m	struct:triggerout	file:
u_outlet	x_connective.c	/^    t_outlet *u_outlet;$/;"	m	struct:unpackout	file:
u_outletno	g_editor.c	/^    int u_outletno;$/;"	m	struct:_undo_connect	file:
u_phase	d_ugen.c	/^    int u_phase;$/;"	m	struct:_ugenbox	file:
u_reconnectbuf	g_editor.c	/^    t_binbuf *u_reconnectbuf;   \/* connections into and out of object *\/$/;"	m	struct:_undo_cut	file:
u_redotextbuf	g_editor.c	/^    t_binbuf *u_redotextbuf;    \/* buffer to paste back for redo if TEXT *\/$/;"	m	struct:_undo_cut	file:
u_type	x_connective.c	/^    int u_type;         \/* outlet type from above *\/$/;"	m	struct:triggerout	file:
u_type	x_connective.c	/^    t_atomtype u_type;$/;"	m	struct:unpackout	file:
u_vec	g_editor.c	/^    t_undo_move_elem *u_vec;$/;"	m	struct:_undo_move	file:
udpread	u_pdreceive.c	/^static void udpread(void)$/;"	f	file:
ugen_add	d_ugen.c	/^void ugen_add(t_dspcontext *dc, t_object *obj)$/;"	f
ugen_connect	d_ugen.c	/^void ugen_connect(t_dspcontext *dc, t_object *x1, int outno, t_object *x2,$/;"	f
ugen_currentcontext	d_ugen.c	/^static t_dspcontext *ugen_currentcontext;$/;"	v	file:
ugen_doit	d_ugen.c	/^static void ugen_doit(t_dspcontext *dc, t_ugenbox *u)$/;"	f	file:
ugen_done_graph	d_ugen.c	/^void ugen_done_graph(t_dspcontext *dc)$/;"	f
ugen_getiosig	d_ugen.c	/^t_signal *ugen_getiosig(int index, int inout)$/;"	f
ugen_getsortno	d_ugen.c	/^int ugen_getsortno(void)$/;"	f
ugen_index	d_ugen.c	/^static int ugen_index(t_dspcontext *dc, t_ugenbox *x)$/;"	f	file:
ugen_loud	d_ugen.c	/^static int ugen_loud;$/;"	v	file:
ugen_sortno	d_ugen.c	/^static int ugen_sortno = 0;$/;"	v	file:
ugen_start	d_ugen.c	/^void ugen_start(void)$/;"	f
ugen_start_graph	d_ugen.c	/^t_dspcontext *ugen_start_graph(int toplevel, t_signal **sp,$/;"	f
ugen_stop	d_ugen.c	/^void ugen_stop(void)$/;"	f
uint16_t	m_pd.h	/^typedef unsigned __int16  uint16_t;$/;"	t
uint32_t	m_pd.h	/^typedef unsigned __int32  uint32_t;$/;"	t
uint64_t	m_pd.h	/^typedef unsigned __int64  uint64_t;$/;"	t
uint8_t	m_pd.h	/^typedef unsigned __int8   uint8_t;$/;"	t
unpack_anything	x_connective.c	/^static void unpack_anything(t_unpack *x, t_symbol *s, int ac, t_atom *av)$/;"	f	file:
unpack_class	x_connective.c	/^static t_class *unpack_class;$/;"	v	file:
unpack_free	x_connective.c	/^static void unpack_free(t_unpack *x)$/;"	f	file:
unpack_list	x_connective.c	/^static void unpack_list(t_unpack *x, t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
unpack_new	x_connective.c	/^static void *unpack_new(t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
unpack_setup	x_connective.c	/^static void unpack_setup(void)$/;"	f	file:
unpackout	x_connective.c	/^typedef struct unpackout$/;"	s	file:
until_bang	x_connective.c	/^static void until_bang(t_until *x)$/;"	f	file:
until_bang2	x_connective.c	/^static void until_bang2(t_until *x)$/;"	f	file:
until_class	x_connective.c	/^static t_class *until_class;$/;"	v	file:
until_float	x_connective.c	/^static void until_float(t_until *x, t_float f)$/;"	f	file:
until_new	x_connective.c	/^static void *until_new(void)$/;"	f	file:
until_setup	x_connective.c	/^static void until_setup(void)$/;"	f	file:
upd_array	g_canvas.h	/^    unsigned int upd_array:1;       \/* true if array, false if glist *\/$/;"	m	struct:_updateheader
upd_next	g_canvas.h	/^    struct _updateheader *upd_next;$/;"	m	struct:_updateheader	typeref:struct:_updateheader::_updateheader
upd_queued	g_canvas.h	/^    unsigned int upd_queued:1;      \/* true if we're queued *\/$/;"	m	struct:_updateheader
upsample	m_pd.h	/^  int upsample;   \/* upsampling factor *\/$/;"	m	struct:_resample
upsampling_perform_0	d_resample.c	/^t_int *upsampling_perform_0(t_int *w)$/;"	f
upsampling_perform_hold	d_resample.c	/^t_int *upsampling_perform_hold(t_int *w)$/;"	f
upsampling_perform_linear	d_resample.c	/^t_int *upsampling_perform_linear(t_int *w)$/;"	f
usagemessage	s_main.c	/^static char *(usagemessage[]) = {$/;"	v	file:
v_pitch	x_midi.c	/^    t_float v_pitch;$/;"	m	struct:voice	file:
v_serial	x_midi.c	/^    unsigned long v_serial;$/;"	m	struct:voice	file:
v_used	x_midi.c	/^    int v_used;$/;"	m	struct:voice	file:
value_bang	x_connective.c	/^static void value_bang(t_value *x)$/;"	f	file:
value_class	x_connective.c	/^static t_class *value_class, *vcommon_class;$/;"	v	file:
value_ff	x_connective.c	/^static void value_ff(t_value *x)$/;"	f	file:
value_float	x_connective.c	/^static void value_float(t_value *x, t_float f)$/;"	f	file:
value_get	x_connective.c	/^t_float *value_get(t_symbol *s)$/;"	f
value_getfloat	x_connective.c	/^value_getfloat(t_symbol *s, t_float *f) $/;"	f
value_new	x_connective.c	/^static void *value_new(t_symbol *s)$/;"	f	file:
value_release	x_connective.c	/^void value_release(t_symbol *s)$/;"	f
value_setfloat	x_connective.c	/^value_setfloat(t_symbol *s, t_float f)$/;"	f
value_setup	x_connective.c	/^static void value_setup(void)$/;"	f	file:
vcfctl	d_osc.c	/^typedef struct vcfctl$/;"	s	file:
vcommon	x_connective.c	/^typedef struct vcommon$/;"	s	file:
vcommon_class	x_connective.c	/^static t_class *value_class, *vcommon_class;$/;"	v	file:
vcommon_float	x_connective.c	/^static void vcommon_float(t_vcommon *x, t_float f)$/;"	f	file:
vdial_new	g_vdial.c	/^static void *vdial_new(t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
verbose	s_print.c	/^void verbose(int level, const char *fmt, ...)$/;"	f
vinlet_anything	g_io.c	/^static void vinlet_anything(t_vinlet *x, t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
vinlet_bang	g_io.c	/^static void vinlet_bang(t_vinlet *x)$/;"	f	file:
vinlet_class	g_io.c	/^t_class *vinlet_class;$/;"	v
vinlet_doprolog	g_io.c	/^t_int *vinlet_doprolog(t_int *w)$/;"	f
vinlet_dsp	g_io.c	/^static void vinlet_dsp(t_vinlet *x, t_signal **sp)$/;"	f	file:
vinlet_dspprolog	g_io.c	/^void vinlet_dspprolog(struct _vinlet *x, t_signal **parentsigs,$/;"	f
vinlet_float	g_io.c	/^static void vinlet_float(t_vinlet *x, t_float f)$/;"	f	file:
vinlet_free	g_io.c	/^static void vinlet_free(t_vinlet *x)$/;"	f	file:
vinlet_getit	g_io.c	/^t_inlet *vinlet_getit(t_pd *x)$/;"	f
vinlet_issignal	g_io.c	/^int vinlet_issignal(t_vinlet *x)$/;"	f
vinlet_list	g_io.c	/^static void vinlet_list(t_vinlet *x, t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
vinlet_new	g_io.c	/^static void *vinlet_new(t_symbol *s)$/;"	f	file:
vinlet_newsig	g_io.c	/^static void *vinlet_newsig(t_symbol *s)$/;"	f	file:
vinlet_perform	g_io.c	/^t_int *vinlet_perform(t_int *w)$/;"	f
vinlet_pointer	g_io.c	/^static void vinlet_pointer(t_vinlet *x, t_gpointer *gp)$/;"	f	file:
vinlet_setup	g_io.c	/^static void vinlet_setup(void)$/;"	f	file:
vinlet_symbol	g_io.c	/^static void vinlet_symbol(t_vinlet *x, t_symbol *s)$/;"	f	file:
vline_tilde_class	d_ctl.c	/^static t_class *vline_tilde_class;$/;"	v	file:
vline_tilde_dsp	d_ctl.c	/^static void vline_tilde_dsp(t_vline *x, t_signal **sp)$/;"	f	file:
vline_tilde_float	d_ctl.c	/^static void vline_tilde_float(t_vline *x, t_float f)$/;"	f	file:
vline_tilde_new	d_ctl.c	/^static void *vline_tilde_new(void)$/;"	f	file:
vline_tilde_perform	d_ctl.c	/^static t_int *vline_tilde_perform(t_int *w)$/;"	f	file:
vline_tilde_setup	d_ctl.c	/^static void vline_tilde_setup(void)$/;"	f	file:
vline_tilde_stop	d_ctl.c	/^static void vline_tilde_stop(t_vline *x)$/;"	f	file:
vmess	m_pd.h	713;"	d
voice	x_midi.c	/^typedef struct voice$/;"	s	file:
voutlet_anything	g_io.c	/^static void voutlet_anything(t_voutlet *x, t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
voutlet_bang	g_io.c	/^static void voutlet_bang(t_voutlet *x)$/;"	f	file:
voutlet_class	g_io.c	/^t_class *voutlet_class;$/;"	v
voutlet_doepilog	g_io.c	/^static t_int *voutlet_doepilog(t_int *w)$/;"	f	file:
voutlet_doepilog_resampling	g_io.c	/^static t_int *voutlet_doepilog_resampling(t_int *w)$/;"	f	file:
voutlet_dsp	g_io.c	/^static void voutlet_dsp(t_voutlet *x, t_signal **sp)$/;"	f	file:
voutlet_dspepilog	g_io.c	/^void voutlet_dspepilog(struct _voutlet *x, t_signal **parentsigs,$/;"	f
voutlet_dspprolog	g_io.c	/^void voutlet_dspprolog(struct _voutlet *x, t_signal **parentsigs,$/;"	f
voutlet_float	g_io.c	/^static void voutlet_float(t_voutlet *x, t_float f)$/;"	f	file:
voutlet_free	g_io.c	/^static void voutlet_free(t_voutlet *x)$/;"	f	file:
voutlet_getit	g_io.c	/^t_outlet *voutlet_getit(t_pd *x)$/;"	f
voutlet_issignal	g_io.c	/^int voutlet_issignal(t_voutlet *x)$/;"	f
voutlet_list	g_io.c	/^static void voutlet_list(t_voutlet *x, t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
voutlet_new	g_io.c	/^static void *voutlet_new(t_symbol *s)$/;"	f	file:
voutlet_newsig	g_io.c	/^static void *voutlet_newsig(t_symbol *s)$/;"	f	file:
voutlet_perform	g_io.c	/^t_int *voutlet_perform(t_int *w)$/;"	f
voutlet_pointer	g_io.c	/^static void voutlet_pointer(t_voutlet *x, t_gpointer *gp)$/;"	f	file:
voutlet_setup	g_io.c	/^static void voutlet_setup(void)$/;"	f	file:
voutlet_symbol	g_io.c	/^static void voutlet_symbol(t_voutlet *x, t_symbol *s)$/;"	f	file:
vradio_bang	g_vdial.c	/^static void vradio_bang(t_vradio *x)$/;"	f	file:
vradio_class	g_vdial.c	/^static t_class *vradio_class, *vradio_old_class;$/;"	v	file:
vradio_click	g_vdial.c	/^static void vradio_click(t_vradio *x, t_floatarg xpos, t_floatarg ypos,$/;"	f	file:
vradio_color	g_vdial.c	/^static void vradio_color(t_vradio *x, t_symbol *s, int ac, t_atom *av)$/;"	f	file:
vradio_delta	g_vdial.c	/^static void vradio_delta(t_vradio *x, t_symbol *s, int ac, t_atom *av)$/;"	f	file:
vradio_dialog	g_vdial.c	/^static void vradio_dialog(t_vradio *x, t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
vradio_donew	g_vdial.c	/^static void *vradio_donew(t_symbol *s, int argc, t_atom *argv, int old)$/;"	f	file:
vradio_double_change	g_vdial.c	/^static void vradio_double_change(t_vradio *x)$/;"	f	file:
vradio_draw	g_vdial.c	/^void vradio_draw(t_vradio *x, t_glist *glist, int mode)$/;"	f
vradio_draw_config	g_vdial.c	/^void vradio_draw_config(t_vradio* x, t_glist* glist)$/;"	f
vradio_draw_erase	g_vdial.c	/^void vradio_draw_erase(t_vradio* x, t_glist* glist)$/;"	f
vradio_draw_io	g_vdial.c	/^void vradio_draw_io(t_vradio* x, t_glist* glist, int old_snd_rcv_flags)$/;"	f
vradio_draw_move	g_vdial.c	/^void vradio_draw_move(t_vradio *x, t_glist *glist)$/;"	f
vradio_draw_new	g_vdial.c	/^void vradio_draw_new(t_vradio *x, t_glist *glist)$/;"	f
vradio_draw_select	g_vdial.c	/^void vradio_draw_select(t_vradio* x, t_glist* glist)$/;"	f
vradio_draw_update	g_vdial.c	/^void vradio_draw_update(t_gobj *client, t_glist *glist)$/;"	f
vradio_ff	g_vdial.c	/^static void vradio_ff(t_vradio *x)$/;"	f	file:
vradio_float	g_vdial.c	/^static void vradio_float(t_vradio *x, t_floatarg f)$/;"	f	file:
vradio_fout	g_vdial.c	/^static void vradio_fout(t_vradio *x, t_floatarg f)$/;"	f	file:
vradio_getrect	g_vdial.c	/^static void vradio_getrect(t_gobj *z, t_glist *glist, int *xp1, int *yp1, int *xp2, int *yp2)$/;"	f	file:
vradio_init	g_vdial.c	/^static void vradio_init(t_vradio *x, t_floatarg f)$/;"	f	file:
vradio_label	g_vdial.c	/^static void vradio_label(t_vradio *x, t_symbol *s)$/;"	f	file:
vradio_label_font	g_vdial.c	/^static void vradio_label_font(t_vradio *x, t_symbol *s, int ac, t_atom *av)$/;"	f	file:
vradio_label_pos	g_vdial.c	/^static void vradio_label_pos(t_vradio *x, t_symbol *s, int ac, t_atom *av)$/;"	f	file:
vradio_loadbang	g_vdial.c	/^static void vradio_loadbang(t_vradio *x)$/;"	f	file:
vradio_new	g_vdial.c	/^static void *vradio_new(t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
vradio_newclick	g_vdial.c	/^static int vradio_newclick(t_gobj *z, struct _glist *glist,$/;"	f	file:
vradio_number	g_vdial.c	/^static void vradio_number(t_vradio *x, t_floatarg num)$/;"	f	file:
vradio_old_class	g_vdial.c	/^static t_class *vradio_class, *vradio_old_class;$/;"	v	file:
vradio_pos	g_vdial.c	/^static void vradio_pos(t_vradio *x, t_symbol *s, int ac, t_atom *av)$/;"	f	file:
vradio_properties	g_vdial.c	/^static void vradio_properties(t_gobj *z, t_glist *owner)$/;"	f	file:
vradio_receive	g_vdial.c	/^static void vradio_receive(t_vradio *x, t_symbol *s)$/;"	f	file:
vradio_save	g_vdial.c	/^static void vradio_save(t_gobj *z, t_binbuf *b)$/;"	f	file:
vradio_send	g_vdial.c	/^static void vradio_send(t_vradio *x, t_symbol *s)$/;"	f	file:
vradio_set	g_vdial.c	/^static void vradio_set(t_vradio *x, t_floatarg f)$/;"	f	file:
vradio_single_change	g_vdial.c	/^static void vradio_single_change(t_vradio *x)$/;"	f	file:
vradio_size	g_vdial.c	/^static void vradio_size(t_vradio *x, t_symbol *s, int ac, t_atom *av)$/;"	f	file:
vradio_widgetbehavior	g_vdial.c	/^t_widgetbehavior vradio_widgetbehavior;$/;"	v
vslider_bang	g_vslider.c	/^static void vslider_bang(t_vslider *x)$/;"	f	file:
vslider_check_height	g_vslider.c	/^void vslider_check_height(t_vslider *x, int h)$/;"	f
vslider_check_minmax	g_vslider.c	/^void vslider_check_minmax(t_vslider *x, double min, double max)$/;"	f
vslider_class	g_vslider.c	/^static t_class *vslider_class;$/;"	v	file:
vslider_click	g_vslider.c	/^static void vslider_click(t_vslider *x, t_floatarg xpos, t_floatarg ypos,$/;"	f	file:
vslider_color	g_vslider.c	/^static void vslider_color(t_vslider *x, t_symbol *s, int ac, t_atom *av)$/;"	f	file:
vslider_delta	g_vslider.c	/^static void vslider_delta(t_vslider *x, t_symbol *s, int ac, t_atom *av)$/;"	f	file:
vslider_dialog	g_vslider.c	/^static void vslider_dialog(t_vslider *x, t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
vslider_draw	g_vslider.c	/^void vslider_draw(t_vslider *x, t_glist *glist, int mode)$/;"	f
vslider_draw_config	g_vslider.c	/^static void vslider_draw_config(t_vslider* x,t_glist* glist)$/;"	f	file:
vslider_draw_erase	g_vslider.c	/^static void vslider_draw_erase(t_vslider* x,t_glist* glist)$/;"	f	file:
vslider_draw_io	g_vslider.c	/^static void vslider_draw_io(t_vslider* x,t_glist* glist, int old_snd_rcv_flags)$/;"	f	file:
vslider_draw_move	g_vslider.c	/^static void vslider_draw_move(t_vslider *x, t_glist *glist)$/;"	f	file:
vslider_draw_new	g_vslider.c	/^static void vslider_draw_new(t_vslider *x, t_glist *glist)$/;"	f	file:
vslider_draw_select	g_vslider.c	/^static void vslider_draw_select(t_vslider *x, t_glist *glist)$/;"	f	file:
vslider_draw_update	g_vslider.c	/^static void vslider_draw_update(t_gobj *client, t_glist *glist)$/;"	f	file:
vslider_float	g_vslider.c	/^static void vslider_float(t_vslider *x, t_floatarg f)$/;"	f	file:
vslider_free	g_vslider.c	/^static void vslider_free(t_vslider *x)$/;"	f	file:
vslider_getrect	g_vslider.c	/^static void vslider_getrect(t_gobj *z, t_glist *glist,$/;"	f	file:
vslider_init	g_vslider.c	/^static void vslider_init(t_vslider *x, t_floatarg f)$/;"	f	file:
vslider_label	g_vslider.c	/^static void vslider_label(t_vslider *x, t_symbol *s)$/;"	f	file:
vslider_label_font	g_vslider.c	/^static void vslider_label_font(t_vslider *x, t_symbol *s, int ac, t_atom *av)$/;"	f	file:
vslider_label_pos	g_vslider.c	/^static void vslider_label_pos(t_vslider *x, t_symbol *s, int ac, t_atom *av)$/;"	f	file:
vslider_lin	g_vslider.c	/^static void vslider_lin(t_vslider *x)$/;"	f	file:
vslider_loadbang	g_vslider.c	/^static void vslider_loadbang(t_vslider *x)$/;"	f	file:
vslider_log	g_vslider.c	/^static void vslider_log(t_vslider *x)$/;"	f	file:
vslider_motion	g_vslider.c	/^static void vslider_motion(t_vslider *x, t_floatarg dx, t_floatarg dy)$/;"	f	file:
vslider_new	g_vslider.c	/^static void *vslider_new(t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
vslider_newclick	g_vslider.c	/^static int vslider_newclick(t_gobj *z, struct _glist *glist,$/;"	f	file:
vslider_pos	g_vslider.c	/^static void vslider_pos(t_vslider *x, t_symbol *s, int ac, t_atom *av)$/;"	f	file:
vslider_properties	g_vslider.c	/^static void vslider_properties(t_gobj *z, t_glist *owner)$/;"	f	file:
vslider_range	g_vslider.c	/^static void vslider_range(t_vslider *x, t_symbol *s, int ac, t_atom *av)$/;"	f	file:
vslider_receive	g_vslider.c	/^static void vslider_receive(t_vslider *x, t_symbol *s)$/;"	f	file:
vslider_save	g_vslider.c	/^static void vslider_save(t_gobj *z, t_binbuf *b)$/;"	f	file:
vslider_send	g_vslider.c	/^static void vslider_send(t_vslider *x, t_symbol *s)$/;"	f	file:
vslider_set	g_vslider.c	/^static void vslider_set(t_vslider *x, t_floatarg f)$/;"	f	file:
vslider_size	g_vslider.c	/^static void vslider_size(t_vslider *x, t_symbol *s, int ac, t_atom *av)$/;"	f	file:
vslider_steady	g_vslider.c	/^static void vslider_steady(t_vslider *x, t_floatarg f)$/;"	f	file:
vslider_widgetbehavior	g_vslider.c	/^t_widgetbehavior vslider_widgetbehavior;$/;"	v
vsnapshot_tilde_bang	d_ctl.c	/^static void vsnapshot_tilde_bang(t_vsnapshot *x)$/;"	f	file:
vsnapshot_tilde_class	d_ctl.c	/^static t_class *vsnapshot_tilde_class;$/;"	v	file:
vsnapshot_tilde_dsp	d_ctl.c	/^static void vsnapshot_tilde_dsp(t_vsnapshot *x, t_signal **sp)$/;"	f	file:
vsnapshot_tilde_ff	d_ctl.c	/^static void vsnapshot_tilde_ff(t_vsnapshot *x)$/;"	f	file:
vsnapshot_tilde_new	d_ctl.c	/^static void *vsnapshot_tilde_new(void)$/;"	f	file:
vsnapshot_tilde_perform	d_ctl.c	/^static t_int *vsnapshot_tilde_perform(t_int *w)$/;"	f	file:
vsnapshot_tilde_setup	d_ctl.c	/^static void vsnapshot_tilde_setup(void)$/;"	f	file:
vu_bang	g_vumeter.c	/^static void vu_bang(t_vu *x)$/;"	f	file:
vu_check_height	g_vumeter.c	/^void vu_check_height(t_vu *x, int h)$/;"	f
vu_class	g_vumeter.c	/^static t_class *vu_class;$/;"	v	file:
vu_color	g_vumeter.c	/^static void vu_color(t_vu *x, t_symbol *s, int ac, t_atom *av)$/;"	f	file:
vu_delta	g_vumeter.c	/^static void vu_delta(t_vu *x, t_symbol *s, int ac, t_atom *av)$/;"	f	file:
vu_dialog	g_vumeter.c	/^static void vu_dialog(t_vu *x, t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
vu_draw	g_vumeter.c	/^void vu_draw(t_vu *x, t_glist *glist, int mode)$/;"	f
vu_draw_config	g_vumeter.c	/^static void vu_draw_config(t_vu* x, t_glist* glist)$/;"	f	file:
vu_draw_erase	g_vumeter.c	/^static void vu_draw_erase(t_vu* x,t_glist* glist)$/;"	f	file:
vu_draw_io	g_vumeter.c	/^static void vu_draw_io(t_vu* x, t_glist* glist, int old_snd_rcv_flags)$/;"	f	file:
vu_draw_move	g_vumeter.c	/^static void vu_draw_move(t_vu *x, t_glist *glist)$/;"	f	file:
vu_draw_new	g_vumeter.c	/^static void vu_draw_new(t_vu *x, t_glist *glist)$/;"	f	file:
vu_draw_select	g_vumeter.c	/^static void vu_draw_select(t_vu* x,t_glist* glist)$/;"	f	file:
vu_draw_update	g_vumeter.c	/^static void vu_draw_update(t_gobj *client, t_glist *glist)$/;"	f	file:
vu_float	g_vumeter.c	/^static void vu_float(t_vu *x, t_floatarg rms)$/;"	f	file:
vu_free	g_vumeter.c	/^static void vu_free(t_vu *x)$/;"	f	file:
vu_ft1	g_vumeter.c	/^static void vu_ft1(t_vu *x, t_floatarg peak)$/;"	f	file:
vu_getrect	g_vumeter.c	/^static void vu_getrect(t_gobj *z, t_glist *glist,$/;"	f	file:
vu_label	g_vumeter.c	/^static void vu_label(t_vu *x, t_symbol *s)$/;"	f	file:
vu_label_font	g_vumeter.c	/^static void vu_label_font(t_vu *x, t_symbol *s, int ac, t_atom *av)$/;"	f	file:
vu_label_pos	g_vumeter.c	/^static void vu_label_pos(t_vu *x, t_symbol *s, int ac, t_atom *av)$/;"	f	file:
vu_new	g_vumeter.c	/^static void *vu_new(t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
vu_pos	g_vumeter.c	/^static void vu_pos(t_vu *x, t_symbol *s, int ac, t_atom *av)$/;"	f	file:
vu_properties	g_vumeter.c	/^static void vu_properties(t_gobj *z, t_glist *owner)$/;"	f	file:
vu_receive	g_vumeter.c	/^static void vu_receive(t_vu *x, t_symbol *s)$/;"	f	file:
vu_save	g_vumeter.c	/^static void vu_save(t_gobj *z, t_binbuf *b)$/;"	f	file:
vu_scale	g_vumeter.c	/^static void vu_scale(t_vu *x, t_floatarg fscale)$/;"	f	file:
vu_size	g_vumeter.c	/^static void vu_size(t_vu *x, t_symbol *s, int ac, t_atom *av)$/;"	f	file:
vu_update_peak	g_vumeter.c	/^static void vu_update_peak(t_vu *x, t_glist *glist)$/;"	f	file:
vu_update_rms	g_vumeter.c	/^static void vu_update_rms(t_vu *x, t_glist *glist)$/;"	f	file:
vu_widgetbehavior	g_vumeter.c	/^t_widgetbehavior vu_widgetbehavior;$/;"	v
w	d_fft_fftsg.c	/^    double *w;$/;"	m	struct:cdft_arg_st	file:
wError	s_midi_mmio.c	/^    WORD    wError;         \/* error flags *\/$/;"	m	struct:circularBuffer_tag	file:
wNumDevices	s_midi_mmio.c	/^UINT wNumDevices = 0;                    \/\/ Number of MIDI input devices opened$/;"	v
w_activatefn	g_canvas.h	/^    t_activatefn w_activatefn;$/;"	m	struct:_widgetbehavior
w_array	m_pd.h	/^    t_array *w_array;$/;"	m	union:word
w_binbuf	m_pd.h	/^    struct _binbuf *w_binbuf;$/;"	m	union:word	typeref:struct:word::_binbuf
w_chunksize	d_soundfile.c	/^    uint32_t w_chunksize;           \/* chunk size                 *\/$/;"	m	struct:_wave	file:
w_clickfn	g_canvas.h	/^    t_clickfn w_clickfn;$/;"	m	struct:_widgetbehavior
w_datachunkid	d_soundfile.c	/^    char  w_datachunkid[4];         \/* data chunk id 'data'       *\/$/;"	m	struct:_wave	file:
w_datachunksize	d_soundfile.c	/^    uint32_t w_datachunksize;       \/* length of data chunk       *\/$/;"	m	struct:_wave	file:
w_deletefn	g_canvas.h	/^    t_deletefn w_deletefn;$/;"	m	struct:_widgetbehavior
w_displacefn	g_canvas.h	/^    t_displacefn w_displacefn;$/;"	m	struct:_widgetbehavior
w_fileid	d_soundfile.c	/^    char  w_fileid[4];              \/* chunk id 'RIFF'            *\/$/;"	m	struct:_wave	file:
w_float	m_pd.h	/^    t_float w_float;$/;"	m	union:word
w_fmtchunksize	d_soundfile.c	/^    uint32_t w_fmtchunksize;        \/* format chunk size          *\/$/;"	m	struct:_wave	file:
w_fmtid	d_soundfile.c	/^    char  w_fmtid[4];               \/* format chunk id 'fmt '     *\/$/;"	m	struct:_wave	file:
w_fmttag	d_soundfile.c	/^    uint16_t w_fmttag;              \/* format tag (WAV_INT etc)   *\/$/;"	m	struct:_wave	file:
w_getrectfn	g_canvas.h	/^    t_getrectfn w_getrectfn;$/;"	m	struct:_widgetbehavior
w_gpointer	m_pd.h	/^    t_gpointer *w_gpointer;$/;"	m	union:word
w_index	m_pd.h	/^    int w_index;$/;"	m	union:word
w_navgbytespersec	d_soundfile.c	/^    uint32_t w_navgbytespersec;     \/* average bytes per second   *\/$/;"	m	struct:_wave	file:
w_nbitspersample	d_soundfile.c	/^    uint16_t w_nbitspersample;      \/* number of bits in a sample *\/$/;"	m	struct:_wave	file:
w_nblockalign	d_soundfile.c	/^    uint16_t w_nblockalign;         \/* number of bytes per frame  *\/$/;"	m	struct:_wave	file:
w_nchannels	d_soundfile.c	/^    uint16_t w_nchannels;           \/* number of channels         *\/$/;"	m	struct:_wave	file:
w_parentactivatefn	g_canvas.h	/^    t_parentactivatefn w_parentactivatefn;$/;"	m	struct:_parentwidgetbehavior
w_parentclickfn	g_canvas.h	/^    t_parentclickfn w_parentclickfn;$/;"	m	struct:_parentwidgetbehavior
w_parentdisplacefn	g_canvas.h	/^    t_parentdisplacefn w_parentdisplacefn;$/;"	m	struct:_parentwidgetbehavior
w_parentgetrectfn	g_canvas.h	/^    t_parentgetrectfn w_parentgetrectfn;$/;"	m	struct:_parentwidgetbehavior
w_parentselectfn	g_canvas.h	/^    t_parentselectfn w_parentselectfn;$/;"	m	struct:_parentwidgetbehavior
w_parentvisfn	g_canvas.h	/^    t_parentvisfn w_parentvisfn;$/;"	m	struct:_parentwidgetbehavior
w_samplespersec	d_soundfile.c	/^    uint32_t w_samplespersec;       \/* sample rate in hz          *\/$/;"	m	struct:_wave	file:
w_selectfn	g_canvas.h	/^    t_selectfn w_selectfn;$/;"	m	struct:_widgetbehavior
w_symbol	m_pd.h	/^    t_symbol *w_symbol;$/;"	m	union:word
w_visfn	g_canvas.h	/^    t_visfn w_visfn;$/;"	m	struct:_widgetbehavior
w_waveid	d_soundfile.c	/^    char  w_waveid[4];              \/* wave chunk id 'WAVE'       *\/$/;"	m	struct:_wave	file:
wave_prep	s_audio_mmio.c	/^static void wave_prep(t_sbuf *bp, int setdone)$/;"	f	file:
wc_id	d_soundfile.c	/^    char  wc_id[4];                 \/* data chunk id, e.g., 'data' or 'fmt ' *\/$/;"	m	struct:_wavechunk	file:
wc_size	d_soundfile.c	/^    uint32_t wc_size;               \/* length of data chunk       *\/$/;"	m	struct:_wavechunk	file:
window	d_fftroutine.c	/^        SAMPLE          *window, *inv_window;$/;"	m	struct:Tfft_net	file:
window_type	d_fftroutine.c	/^        int             window_type;$/;"	m	struct:Tfft_net	file:
word	d_soundfile.c	/^typedef unsigned word;$/;"	t	file:
word	m_pd.h	/^typedef union word$/;"	u
word_free	g_scalar.c	/^void word_free(t_word *wp, t_template *template)$/;"	f
word_init	g_scalar.c	/^void word_init(t_word *wp, t_template *template, t_gpointer *gp)$/;"	f
word_restore	g_scalar.c	/^void word_restore(t_word *wp, t_template *template,$/;"	f
wrap	d_math.c	/^typedef struct wrap$/;"	s	file:
wrap_class	x_arithmetic.c	/^static t_class *wrap_class;      \/* ----------- wrap --------------- *\/$/;"	v	file:
wrap_float	x_arithmetic.c	/^static void wrap_float(t_object *x, t_float f)$/;"	f	file:
wrap_new	x_arithmetic.c	/^static void *wrap_new(void)$/;"	f	file:
writeIndex	s_audio_paring.h	/^    PA_VOLATILE long   writeIndex; \/* Index of next writable byte.$/;"	m	struct:__anon8
writemidi4	s_midi_pm.c	/^static void writemidi4(PortMidiStream* stream, int a, int b, int c, int d)$/;"	f	file:
writesf_child_main	d_soundfile.c	/^static void *writesf_child_main(void *zz)$/;"	f	file:
writesf_class	d_soundfile.c	/^static t_class *writesf_class;$/;"	v	file:
writesf_dsp	d_soundfile.c	/^static void writesf_dsp(t_writesf *x, t_signal **sp)$/;"	f	file:
writesf_free	d_soundfile.c	/^static void writesf_free(t_writesf *x)$/;"	f	file:
writesf_new	d_soundfile.c	/^static void *writesf_new(t_floatarg fnchannels, t_floatarg fbufsize)$/;"	f	file:
writesf_open	d_soundfile.c	/^static void writesf_open(t_writesf *x, t_symbol *s, int argc, t_atom *argv)$/;"	f	file:
writesf_perform	d_soundfile.c	/^static t_int *writesf_perform(t_int *w)$/;"	f	file:
writesf_print	d_soundfile.c	/^static void writesf_print(t_writesf *x)$/;"	f	file:
writesf_setup	d_soundfile.c	/^static void writesf_setup(void)$/;"	f	file:
writesf_start	d_soundfile.c	/^static void writesf_start(t_writesf *x)$/;"	f	file:
writesf_stop	d_soundfile.c	/^static void writesf_stop(t_writesf *x)$/;"	f	file:
x_1overn	d_ctl.c	/^    t_float x_1overn;$/;"	m	struct:_line	file:
x_1overtimediff	x_time.c	/^    double x_1overtimediff;$/;"	m	struct:_line	file:
x_accept	x_connective.c	/^    t_atomtype x_accept;$/;"	m	struct:_makefilename	file:
x_acoustics_setup	x_acoustics.c	/^void x_acoustics_setup(void)$/;"	f
x_active	g_rtext.c	/^    int x_active;$/;"	m	struct:_rtext	file:
x_alist	x_list.c	/^    t_alist x_alist;$/;"	m	struct:_list_append	file:
x_alist	x_list.c	/^    t_alist x_alist;$/;"	m	struct:_list_prepend	file:
x_allocforvs	d_ctl.c	/^    int x_allocforvs;               \/* extra buffer for DSP vector size *\/$/;"	m	struct:sigenv	file:
x_answercondition	d_soundfile.c	/^    pthread_cond_t x_answercondition;$/;"	m	struct:_readsf	file:
x_argc	g_template.c	/^    int x_argc;$/;"	m	struct:_gtemplate	file:
x_argc	x_text.c	/^    int x_argc;$/;"	m	struct:_text_sequence	file:
x_argv	g_template.c	/^    t_atom *x_argv;$/;"	m	struct:_gtemplate	file:
x_argv	x_text.c	/^    t_atom *x_argv;$/;"	m	struct:_text_sequence	file:
x_arithmetic_setup	x_arithmetic.c	/^void x_arithmetic_setup(void)$/;"	f
x_array_setup	x_array.c	/^void x_array_setup(void )$/;"	f
x_arrayname	d_array.c	/^    t_symbol *x_arrayname;$/;"	m	struct:_tabosc4_tilde	file:
x_arrayname	d_array.c	/^    t_symbol *x_arrayname;$/;"	m	struct:_tabplay_tilde	file:
x_arrayname	d_array.c	/^    t_symbol *x_arrayname;$/;"	m	struct:_tabread	file:
x_arrayname	d_array.c	/^    t_symbol *x_arrayname;$/;"	m	struct:_tabread4	file:
x_arrayname	d_array.c	/^    t_symbol *x_arrayname;$/;"	m	struct:_tabread4_tilde	file:
x_arrayname	d_array.c	/^    t_symbol *x_arrayname;$/;"	m	struct:_tabread_tilde	file:
x_arrayname	d_array.c	/^    t_symbol *x_arrayname;$/;"	m	struct:_tabreceive	file:
x_arrayname	d_array.c	/^    t_symbol *x_arrayname;$/;"	m	struct:_tabsend	file:
x_arrayname	d_array.c	/^    t_symbol *x_arrayname;$/;"	m	struct:_tabwrite	file:
x_arrayname	d_array.c	/^    t_symbol *x_arrayname;$/;"	m	struct:_tabwrite_tilde	file:
x_at	g_all_guis.h	/^    t_atom   x_at[2];$/;"	m	struct:_hdial
x_at	g_all_guis.h	/^    t_atom   x_at[2];$/;"	m	struct:_vdial
x_at	g_all_guis.h	/^    t_atom   x_at[3];$/;"	m	struct:_my_canvas
x_atom	x_connective.c	/^    t_atom x_atom;$/;"	m	struct:_sel1	file:
x_auto	x_text.c	/^    unsigned char x_auto;   \/* set timer when we hit single-number time list *\/$/;"	m	struct:_text_sequence	file:
x_bangout	d_array.c	/^    t_outlet *x_bangout;$/;"	m	struct:_tabplay_tilde	file:
x_bangout	d_soundfile.c	/^    t_outlet *x_bangout;                    \/* bang-on-done outlet *\/$/;"	m	struct:_readsf	file:
x_bangout	g_traversal.c	/^    t_outlet *x_bangout;$/;"	m	struct:_ptrobj	file:
x_bangout	x_text.c	/^    t_outlet *x_bangout;$/;"	m	struct:_qlist	file:
x_bcol	g_all_guis.h	/^    int                x_bcol;$/;"	m	struct:_iemgui
x_bigendian	d_soundfile.c	/^    int x_bigendian;        \/* true if file is big-endian *\/$/;"	m	struct:_readsf	file:
x_biginc	d_ctl.c	/^    t_sample x_biginc;$/;"	m	struct:_line	file:
x_bin	x_net.c	/^    int x_bin;$/;"	m	struct:_netsend	file:
x_binbuf	x_text.c	1517;"	d	file:
x_binbuf	x_text.c	243;"	d	file:
x_binbufindex	g_all_guis.h	/^    int                x_binbufindex;       \/* where in binbuf to find these *\/$/;"	m	struct:_iemgui
x_bindsym	x_text.c	/^    t_symbol *x_bindsym;$/;"	m	struct:_text_define	file:
x_blocklength	d_ugen.c	/^    int x_blocklength;  \/* length of dspchain for this block *\/$/;"	m	struct:_block	file:
x_buf	d_ctl.c	/^    t_sample *x_buf;                   \/* a Hanning window *\/$/;"	m	struct:sigenv	file:
x_buf	d_soundfile.c	/^    char *x_buf;                            \/* soundfile buffer *\/$/;"	m	struct:_readsf	file:
x_buf	g_all_guis.h	/^    char     x_buf[IEMGUI_MAX_NUM_LEN];$/;"	m	struct:_my_numbox
x_buf	g_io.c	/^    t_float *x_buf;         \/* signal buffer; zero if not a signal *\/$/;"	m	struct:_vinlet	file:
x_buf	g_io.c	/^    t_sample *x_buf;         \/* signal buffer; zero if not a signal *\/$/;"	m	struct:_voutlet	file:
x_buf	g_rtext.c	/^    char *x_buf;    \/*-- raw byte string, assumed UTF-8 encoded (moo) --*\/$/;"	m	struct:_rtext	file:
x_bufsize	d_soundfile.c	/^    int x_bufsize;                          \/* buffer size in bytes *\/$/;"	m	struct:_readsf	file:
x_bufsize	g_io.c	/^    int x_bufsize;$/;"	m	struct:_vinlet	file:
x_bufsize	g_io.c	/^    int x_bufsize;$/;"	m	struct:_voutlet	file:
x_bufsize	g_rtext.c	/^    int x_bufsize;  \/*-- byte length --*\/$/;"	m	struct:_rtext	file:
x_bytelimit	d_soundfile.c	/^    long x_bytelimit;       \/* max number of data bytes to read *\/$/;"	m	struct:_readsf	file:
x_bytespersample	d_soundfile.c	/^    int x_bytespersample;   \/* bytes per sample (2 or 3) *\/$/;"	m	struct:_readsf	file:
x_calcsize	d_ugen.c	/^    int x_calcsize;     \/* number of samples actually to compute *\/$/;"	m	struct:_block	file:
x_canvas	d_soundfile.c	/^    t_canvas *x_canvas;$/;"	m	struct:_readsf	file:
x_canvas	d_soundfile.c	/^    t_canvas *x_canvas;$/;"	m	struct:_soundfiler	file:
x_canvas	d_ugen.c	/^    t_canvas *x_canvas;$/;"	m	struct:_samplerate	file:
x_canvas	g_canvas.c	/^    t_canvas *x_canvas;$/;"	m	struct:_declare	file:
x_canvas	g_io.c	/^    t_canvas *x_canvas;$/;"	m	struct:_vinlet	file:
x_canvas	g_io.c	/^    t_canvas *x_canvas;$/;"	m	struct:_voutlet	file:
x_canvas	g_template.c	/^    t_canvas *x_canvas;$/;"	m	struct:_curve	file:
x_canvas	g_template.c	/^    t_canvas *x_canvas;$/;"	m	struct:_drawnumber	file:
x_canvas	g_template.c	/^    t_canvas *x_canvas;$/;"	m	struct:_plot	file:
x_canvas	x_gui.c	/^    t_canvas *x_canvas;$/;"	m	struct:_savepanel	file:
x_canvas	x_text.c	/^    t_canvas *x_canvas;     \/* owning canvas whose stub we use for x_gp *\/$/;"	m	struct:_text_define	file:
x_canvas	x_text.c	1518;"	d	file:
x_canvas	x_text.c	244;"	d	file:
x_center	g_all_guis.h	/^    int      x_center;$/;"	m	struct:_hslider
x_chainonset	d_ugen.c	/^    int x_chainonset;   \/* beginning of code in DSP chain *\/$/;"	m	struct:_block	file:
x_change	g_all_guis.h	/^    int      x_change;$/;"	m	struct:_hdial
x_change	g_all_guis.h	/^    int      x_change;$/;"	m	struct:_vdial
x_change	g_all_guis.h	/^    unsigned int x_change:1;$/;"	m	struct:_iem_fstyle_flags
x_channel	x_midi.c	/^    t_float x_channel;$/;"	m	struct:_bendin	file:
x_channel	x_midi.c	/^    t_float x_channel;$/;"	m	struct:_bendout	file:
x_channel	x_midi.c	/^    t_float x_channel;$/;"	m	struct:_ctlin	file:
x_channel	x_midi.c	/^    t_float x_channel;$/;"	m	struct:_ctlout	file:
x_channel	x_midi.c	/^    t_float x_channel;$/;"	m	struct:_notein	file:
x_channel	x_midi.c	/^    t_float x_channel;$/;"	m	struct:_noteout	file:
x_channel	x_midi.c	/^    t_float x_channel;$/;"	m	struct:_pgmin	file:
x_channel	x_midi.c	/^    t_float x_channel;$/;"	m	struct:_pgmout	file:
x_channel	x_midi.c	/^    t_float x_channel;$/;"	m	struct:_polytouchin	file:
x_channel	x_midi.c	/^    t_float x_channel;$/;"	m	struct:_polytouchout	file:
x_channel	x_midi.c	/^    t_float x_channel;$/;"	m	struct:_touchin	file:
x_channel	x_midi.c	/^    t_float x_channel;$/;"	m	struct:_touchout	file:
x_childthread	d_soundfile.c	/^    pthread_t x_childthread;$/;"	m	struct:_readsf	file:
x_clock	d_array.c	/^    t_clock *x_clock;$/;"	m	struct:_tabplay_tilde	file:
x_clock	d_ctl.c	/^    t_clock *x_clock;           \/* wakeup for message output *\/$/;"	m	struct:_threshold_tilde	file:
x_clock	d_ctl.c	/^    void *x_clock;                  \/* a "clock" object *\/$/;"	m	struct:sigenv	file:
x_clock	d_misc.c	/^    t_clock *x_clock;$/;"	m	struct:_bang	file:
x_clock	d_soundfile.c	/^    t_clock *x_clock;$/;"	m	struct:_readsf	file:
x_clock	g_guiconnect.c	/^    t_clock *x_clock;$/;"	m	struct:_guiconnect	file:
x_clock	x_text.c	/^    t_clock *x_clock;       \/* calback for auto mode *\/$/;"	m	struct:_text_sequence	file:
x_clock	x_text.c	/^    t_clock *x_clock;$/;"	m	struct:_qlist	file:
x_clock	x_time.c	/^    t_clock *x_clock;$/;"	m	struct:_delay	file:
x_clock	x_time.c	/^    t_clock *x_clock;$/;"	m	struct:_line	file:
x_clock	x_time.c	/^    t_clock *x_clock;$/;"	m	struct:_metro	file:
x_clock_brk	g_all_guis.h	/^    t_clock  *x_clock_brk;$/;"	m	struct:_bng
x_clock_hld	g_all_guis.h	/^    t_clock  *x_clock_hld;$/;"	m	struct:_bng
x_clock_lck	g_all_guis.h	/^    t_clock  *x_clock_lck;$/;"	m	struct:_bng
x_clock_reset	g_all_guis.h	/^    t_clock  *x_clock_reset;$/;"	m	struct:_my_numbox
x_clock_wait	g_all_guis.h	/^    t_clock  *x_clock_wait;$/;"	m	struct:_my_numbox
x_clockdelay	x_text.c	/^    t_float x_clockdelay;$/;"	m	struct:_qlist	file:
x_closesocket	u_pdreceive.c	/^static void x_closesocket(int fd)$/;"	f	file:
x_closesocket	u_pdsend.c	/^void x_closesocket(int fd)$/;"	f
x_color	g_template.c	/^    t_fielddesc x_color;$/;"	m	struct:_drawnumber	file:
x_connections	x_net.c	/^    int *x_connections;$/;"	m	struct:_netreceive	file:
x_connective_setup	x_connective.c	/^void x_connective_setup(void)$/;"	f
x_connectout	x_net.c	/^    t_outlet *x_connectout;$/;"	m	struct:_netsend	file:
x_conv	d_array.c	/^    t_float x_conv;$/;"	m	struct:_tabosc4_tilde	file:
x_conv	d_osc.c	/^    float x_conv;$/;"	m	struct:_osc	file:
x_conv	d_osc.c	/^    float x_conv;$/;"	m	struct:_phasor	file:
x_count	d_misc.c	/^    int x_count;$/;"	m	struct:_print	file:
x_count	d_ugen.c	/^    int x_count;        \/* number of times parent block has called us *\/$/;"	m	struct:_block	file:
x_count	x_connective.c	/^    int x_count;$/;"	m	struct:_until	file:
x_cspace	d_delay.c	/^    t_delwritectl x_cspace;$/;"	m	struct:_sigdelwrite	file:
x_cspace	d_filter.c	/^    t_biquadctl x_cspace;$/;"	m	struct:sigbiquad	file:
x_cspace	d_filter.c	/^    t_bpctl x_cspace;$/;"	m	struct:sigbp	file:
x_cspace	d_filter.c	/^    t_hipctl x_cspace;$/;"	m	struct:sighip	file:
x_cspace	d_filter.c	/^    t_lopctl x_cspace;$/;"	m	struct:siglop	file:
x_cspace	d_osc.c	/^    t_vcfctl x_cspace;$/;"	m	struct:sigvcf	file:
x_ctl	d_filter.c	/^    t_biquadctl *x_ctl;$/;"	m	struct:sigbiquad	file:
x_ctl	d_filter.c	/^    t_bpctl *x_ctl;$/;"	m	struct:sigbp	file:
x_ctl	d_filter.c	/^    t_hipctl *x_ctl;$/;"	m	struct:sighip	file:
x_ctl	d_filter.c	/^    t_lopctl *x_ctl;$/;"	m	struct:siglop	file:
x_ctl	d_osc.c	/^    t_vcfctl *x_ctl;$/;"	m	struct:sigvcf	file:
x_ctl	x_midi.c	/^    t_float x_ctl;$/;"	m	struct:_ctlout	file:
x_ctlno	x_midi.c	/^    t_float x_ctlno;$/;"	m	struct:_ctlin	file:
x_data	g_template.c	/^    t_fielddesc x_data;$/;"	m	struct:_plot	file:
x_deadwait	d_ctl.c	/^    t_float x_deadwait;           \/* msec remaining in dead period *\/$/;"	m	struct:_threshold_tilde	file:
x_delsamps	d_delay.c	/^    int x_delsamps;     \/* delay in samples *\/$/;"	m	struct:_sigdelread	file:
x_deltime	d_delay.c	/^    t_float x_deltime;  \/* delay in msec (added by Mathieu Bouchard) *\/$/;"	m	struct:_sigdelwrite	file:
x_deltime	d_delay.c	/^    t_float x_deltime;  \/* delay in msec *\/$/;"	m	struct:_sigdelread	file:
x_deltime	x_time.c	/^    double x_deltime;$/;"	m	struct:_delay	file:
x_deltime	x_time.c	/^    double x_deltime;$/;"	m	struct:_metro	file:
x_deltime	x_time.c	/^    t_float x_deltime;$/;"	m	struct:_pipe	file:
x_directsignal	g_io.c	/^    t_signal *x_directsignal;$/;"	m	struct:_vinlet	file:
x_directsignal	g_io.c	/^    t_signal *x_directsignal;$/;"	m	struct:_voutlet	file:
x_downsample	d_ugen.c	/^    int x_downsample;   \/* downsampling-factor *\/$/;"	m	struct:_block	file:
x_dragfrom	g_rtext.c	/^    int x_dragfrom;$/;"	m	struct:_rtext	file:
x_draw	g_all_guis.h	/^    t_iemfunptr        x_draw;$/;"	m	struct:_iemgui
x_drawn	g_all_guis.h	/^    int      x_drawn;$/;"	m	struct:_hdial
x_drawn	g_all_guis.h	/^    int      x_drawn;$/;"	m	struct:_vdial
x_drawnheight	g_rtext.c	/^    int x_drawnheight;$/;"	m	struct:_rtext	file:
x_drawnwidth	g_rtext.c	/^    int x_drawnwidth;$/;"	m	struct:_rtext	file:
x_dspticktomsec	d_ctl.c	/^    t_float x_dspticktomsec;$/;"	m	struct:_line	file:
x_dum1	g_all_guis.h	/^    int      x_dum1;$/;"	m	struct:_iemguidummy
x_dum2	g_all_guis.h	/^    int      x_dum2;$/;"	m	struct:_iemguidummy
x_dum3	g_all_guis.h	/^    int      x_dum3;$/;"	m	struct:_iemguidummy
x_dur	x_midi.c	/^    t_float x_dur;$/;"	m	struct:_makenote	file:
x_eaten	x_text.c	/^    unsigned char x_eaten;  \/* true if we've eaten leading numbers already *\/$/;"	m	struct:_text_sequence	file:
x_elemfield	x_array.c	/^    t_symbol *x_elemfield;$/;"	m	struct:_array_rangeop	file:
x_elemtemplate	x_array.c	/^    t_symbol *x_elemtemplate;   \/* unused - perhaps should at least check it *\/$/;"	m	struct:_array_rangeop	file:
x_empty	g_io.c	/^    t_sample *x_empty;       \/* next to read out of buffer in epilog code *\/$/;"	m	struct:_voutlet	file:
x_endbuf	g_io.c	/^    t_float *x_endbuf;$/;"	m	struct:_vinlet	file:
x_endbuf	g_io.c	/^    t_sample *x_endbuf;$/;"	m	struct:_voutlet	file:
x_endout	x_text.c	/^    t_outlet *x_endout;    \/* bang when hit end *\/$/;"	m	struct:_text_sequence	file:
x_eof	d_soundfile.c	/^    int x_eof;              \/* true if fifohead has stopped changing *\/$/;"	m	struct:_readsf	file:
x_epiloglength	d_ugen.c	/^    int x_epiloglength; \/* length of epilog *\/$/;"	m	struct:_block	file:
x_f	d_arithmetic.c	/^    t_float x_f;$/;"	m	struct:_max	file:
x_f	d_arithmetic.c	/^    t_float x_f;$/;"	m	struct:_min	file:
x_f	d_arithmetic.c	/^    t_float x_f;$/;"	m	struct:_minus	file:
x_f	d_arithmetic.c	/^    t_float x_f;$/;"	m	struct:_over	file:
x_f	d_arithmetic.c	/^    t_float x_f;$/;"	m	struct:_plus	file:
x_f	d_arithmetic.c	/^    t_float x_f;$/;"	m	struct:_scalarmax	file:
x_f	d_arithmetic.c	/^    t_float x_f;$/;"	m	struct:_scalarmin	file:
x_f	d_arithmetic.c	/^    t_float x_f;$/;"	m	struct:_scalarminus	file:
x_f	d_arithmetic.c	/^    t_float x_f;$/;"	m	struct:_scalarover	file:
x_f	d_arithmetic.c	/^    t_float x_f;$/;"	m	struct:_scalarplus	file:
x_f	d_arithmetic.c	/^    t_float x_f;$/;"	m	struct:_scalartimes	file:
x_f	d_arithmetic.c	/^    t_float x_f;$/;"	m	struct:_times	file:
x_f	d_array.c	/^    t_float x_f;$/;"	m	struct:_tabosc4_tilde	file:
x_f	d_array.c	/^    t_float x_f;$/;"	m	struct:_tabread4_tilde	file:
x_f	d_array.c	/^    t_float x_f;$/;"	m	struct:_tabread_tilde	file:
x_f	d_array.c	/^    t_float x_f;$/;"	m	struct:_tabsend	file:
x_f	d_array.c	/^    t_float x_f;$/;"	m	struct:_tabwrite_tilde	file:
x_f	d_ctl.c	/^    t_float x_f;                  \/* scalar inlet *\/$/;"	m	struct:_threshold_tilde	file:
x_f	d_ctl.c	/^    t_float x_f;$/;"	m	struct:_sig	file:
x_f	d_ctl.c	/^    t_float x_f;$/;"	m	struct:_snapshot	file:
x_f	d_ctl.c	/^    t_float x_f;$/;"	m	struct:_vsnapshot	file:
x_f	d_ctl.c	/^    t_float x_f;$/;"	m	struct:sigenv	file:
x_f	d_dac.c	/^    t_float x_f;$/;"	m	struct:_dac	file:
x_f	d_delay.c	/^    t_float x_f;$/;"	m	struct:_sigdelwrite	file:
x_f	d_delay.c	/^    t_float x_f;$/;"	m	struct:_sigvd	file:
x_f	d_fft.c	/^    t_float x_f;$/;"	m	struct:fft	file:
x_f	d_fft.c	/^    t_float x_f;$/;"	m	struct:framp	file:
x_f	d_fft.c	/^    t_float x_f;$/;"	m	struct:rfft	file:
x_f	d_fft.c	/^    t_float x_f;$/;"	m	struct:rifft	file:
x_f	d_filter.c	/^    t_float x_f;$/;"	m	struct:sigbiquad	file:
x_f	d_filter.c	/^    t_float x_f;$/;"	m	struct:sigbp	file:
x_f	d_filter.c	/^    t_float x_f;$/;"	m	struct:sigcpole	file:
x_f	d_filter.c	/^    t_float x_f;$/;"	m	struct:sigczero	file:
x_f	d_filter.c	/^    t_float x_f;$/;"	m	struct:sigczero_rev	file:
x_f	d_filter.c	/^    t_float x_f;$/;"	m	struct:sighip	file:
x_f	d_filter.c	/^    t_float x_f;$/;"	m	struct:siglop	file:
x_f	d_filter.c	/^    t_float x_f;$/;"	m	struct:sigrpole	file:
x_f	d_filter.c	/^    t_float x_f;$/;"	m	struct:sigrzero	file:
x_f	d_filter.c	/^    t_float x_f;$/;"	m	struct:sigrzero_rev	file:
x_f	d_filter.c	/^    t_float x_f;$/;"	m	struct:sigsamphold	file:
x_f	d_global.c	/^    t_float x_f;$/;"	m	struct:_sigsend	file:
x_f	d_global.c	/^    t_float x_f;$/;"	m	struct:_sigthrow	file:
x_f	d_math.c	/^    t_float x_f;$/;"	m	struct:_abs_tilde	file:
x_f	d_math.c	/^    t_float x_f;$/;"	m	struct:_clip	file:
x_f	d_math.c	/^    t_float x_f;$/;"	m	struct:_exp_tilde	file:
x_f	d_math.c	/^    t_float x_f;$/;"	m	struct:_log_tilde	file:
x_f	d_math.c	/^    t_float x_f;$/;"	m	struct:_pow_tilde	file:
x_f	d_math.c	/^    t_float x_f;$/;"	m	struct:dbtopow_tilde	file:
x_f	d_math.c	/^    t_float x_f;$/;"	m	struct:dbtorms_tilde	file:
x_f	d_math.c	/^    t_float x_f;$/;"	m	struct:ftom_tilde	file:
x_f	d_math.c	/^    t_float x_f;$/;"	m	struct:mtof_tilde	file:
x_f	d_math.c	/^    t_float x_f;$/;"	m	struct:powtodb_tilde	file:
x_f	d_math.c	/^    t_float x_f;$/;"	m	struct:rmstodb_tilde	file:
x_f	d_math.c	/^    t_float x_f;$/;"	m	struct:sigrsqrt	file:
x_f	d_math.c	/^    t_float x_f;$/;"	m	struct:sigsqrt	file:
x_f	d_math.c	/^    t_float x_f;$/;"	m	struct:wrap	file:
x_f	d_misc.c	/^    t_float x_f;$/;"	m	struct:_print	file:
x_f	d_osc.c	/^    float x_f;      \/* frequency if scalar *\/$/;"	m	struct:_osc	file:
x_f	d_osc.c	/^    float x_f;      \/* scalar frequency *\/$/;"	m	struct:_phasor	file:
x_f	d_osc.c	/^    float x_f;$/;"	m	struct:_cos	file:
x_f	d_osc.c	/^    float x_f;$/;"	m	struct:sigvcf	file:
x_f	d_soundfile.c	/^    t_float x_f;              \/* writesf~ only; scalar for signal inlet *\/$/;"	m	struct:_readsf	file:
x_f	x_arithmetic.c	/^    t_float x_f;$/;"	m	struct:_atan2	file:
x_f	x_connective.c	/^    t_float x_f;$/;"	m	struct:_change	file:
x_f	x_connective.c	/^    t_float x_f;$/;"	m	struct:_pdfloat	file:
x_f	x_connective.c	/^    t_float x_f;$/;"	m	struct:_pdint	file:
x_f	x_list.c	/^    t_float x_f;$/;"	m	struct:_list_split	file:
x_f	x_misc.c	/^    t_float x_f;$/;"	m	struct:_random	file:
x_f1	x_arithmetic.c	/^    t_float x_f1;$/;"	m	struct:_binop	file:
x_f1	x_arithmetic.c	/^    t_float x_f1;$/;"	m	struct:_clip	file:
x_f1	x_connective.c	/^    t_float x_f1;$/;"	m	struct:_swap	file:
x_f1	x_text.c	/^    t_float x_f1;           \/* field number, -1 for whole line *\/$/;"	m	struct:_text_get	file:
x_f1	x_text.c	/^    t_float x_f1;           \/* line number *\/$/;"	m	struct:_text_set	file:
x_f2	x_arithmetic.c	/^    t_float x_f2;$/;"	m	struct:_binop	file:
x_f2	x_arithmetic.c	/^    t_float x_f2;$/;"	m	struct:_clip	file:
x_f2	x_connective.c	/^    t_float x_f2;$/;"	m	struct:_swap	file:
x_f2	x_text.c	/^    t_float x_f2;           \/* field number, -1 for whole line *\/$/;"	m	struct:_text_set	file:
x_f2	x_text.c	/^    t_float x_f2;           \/* number of fields *\/$/;"	m	struct:_text_get	file:
x_f3	x_arithmetic.c	/^    t_float x_f3;$/;"	m	struct:_clip	file:
x_fcol	g_all_guis.h	/^    int                x_fcol;$/;"	m	struct:_iemgui
x_fd	d_soundfile.c	/^    int x_fd;               \/* filedesc *\/$/;"	m	struct:_readsf	file:
x_field	x_array.c	248;"	d	file:
x_field	x_text.c	539;"	d	file:
x_fieldname	g_template.c	/^    t_symbol *x_fieldname;$/;"	m	struct:_drawnumber	file:
x_fieldsym	g_traversal.c	/^    t_symbol *x_fieldsym;$/;"	m	struct:_elem	file:
x_fieldsym	g_traversal.c	/^    t_symbol *x_fieldsym;$/;"	m	struct:_getsize	file:
x_fieldsym	g_traversal.c	/^    t_symbol *x_fieldsym;$/;"	m	struct:_setsize	file:
x_fifohead	d_soundfile.c	/^    int x_fifohead;         \/* index of next byte to get from file *\/$/;"	m	struct:_readsf	file:
x_fifosize	d_soundfile.c	/^    int x_fifosize;         \/* buffer size appropriately rounded down *\/            $/;"	m	struct:_readsf	file:
x_fifotail	d_soundfile.c	/^    int x_fifotail;         \/* index of next byte the ugen will read *\/$/;"	m	struct:_readsf	file:
x_fileerror	d_soundfile.c	/^    int x_fileerror;        \/* slot for "errno" return *\/$/;"	m	struct:_readsf	file:
x_filename	d_soundfile.c	/^    char *x_filename;       \/* file to open (string is permanently allocated) *\/$/;"	m	struct:_readsf	file:
x_filetype	d_soundfile.c	/^    int x_filetype;         \/* writesf~ only; type of file to create *\/$/;"	m	struct:_readsf	file:
x_fill	g_io.c	/^    t_float *x_fill;$/;"	m	struct:_vinlet	file:
x_fillcolor	g_template.c	/^    t_fielddesc x_fillcolor;$/;"	m	struct:_curve	file:
x_finemoved	g_all_guis.h	/^    unsigned int x_finemoved:1;$/;"	m	struct:_iem_fstyle_flags
x_finvnpoints	d_array.c	/^    t_float x_finvnpoints;$/;"	m	struct:_tabosc4_tilde	file:
x_first	x_midi.c	/^    t_bagelem *x_first;$/;"	m	struct:_bag	file:
x_flags	g_template.c	/^    int x_flags;            \/* CLOSED and\/or BEZ and\/or NOMOUSE *\/$/;"	m	struct:_curve	file:
x_flashed	g_all_guis.h	/^    int      x_flashed;$/;"	m	struct:_bng
x_flashed	g_all_guis.h	/^    unsigned int x_flashed:1;$/;"	m	struct:_iem_init_symargs
x_flashtime_break	g_all_guis.h	/^    int      x_flashtime_break;$/;"	m	struct:_bng
x_flashtime_hold	g_all_guis.h	/^    int      x_flashtime_hold;$/;"	m	struct:_bng
x_floatstar	x_connective.c	/^    t_float *x_floatstar;$/;"	m	struct:_value	file:
x_fnpoints	d_array.c	/^    t_float x_fnpoints;$/;"	m	struct:_tabosc4_tilde	file:
x_font	g_all_guis.h	/^    char               x_font[MAXPDSTRING]; \/* font names can be long! *\/$/;"	m	struct:_iemgui
x_font_style	g_all_guis.h	/^    unsigned int x_font_style:6;$/;"	m	struct:_iem_fstyle_flags
x_fontsize	g_all_guis.h	/^    int                x_fontsize;$/;"	m	struct:_iemgui
x_format	x_connective.c	/^    t_symbol *x_format;$/;"	m	struct:_makefilename	file:
x_fp	g_all_guis.h	/^    t_float    x_fp;$/;"	m	struct:_vu
x_fr	g_all_guis.h	/^    t_float    x_fr;$/;"	m	struct:_vu
x_freq	d_filter.c	/^    t_float x_freq;$/;"	m	struct:sigbp	file:
x_frequency	d_ugen.c	/^    int x_frequency;    \/* supermultiple of comtaining canvas *\/$/;"	m	struct:_block	file:
x_fsf	g_all_guis.h	/^    t_iem_fstyle_flags x_fsf;$/;"	m	struct:_iemgui
x_ft1	d_array.c	/^    t_float x_ft1;$/;"	m	struct:_tabwrite	file:
x_g	d_arithmetic.c	/^    t_float x_g;            \/* inlet value *\/$/;"	m	struct:_scalarplus	file:
x_g	d_arithmetic.c	/^    t_float x_g;$/;"	m	struct:_scalarmax	file:
x_g	d_arithmetic.c	/^    t_float x_g;$/;"	m	struct:_scalarmin	file:
x_g	d_arithmetic.c	/^    t_float x_g;$/;"	m	struct:_scalarminus	file:
x_g	d_arithmetic.c	/^    t_float x_g;$/;"	m	struct:_scalarover	file:
x_g	d_arithmetic.c	/^    t_float x_g;$/;"	m	struct:_scalartimes	file:
x_glist	g_all_guis.h	/^    t_glist            *x_glist;$/;"	m	struct:_iemgui
x_glist	g_array.c	/^    t_glist *x_glist;       \/* containing glist *\/$/;"	m	struct:_garray	file:
x_glist	g_rtext.c	/^    t_glist *x_glist;$/;"	m	struct:_rtext	file:
x_gobj	g_array.c	/^    t_gobj x_gobj;$/;"	m	struct:_garray	file:
x_gotinlet	x_time.c	/^    int x_gotinlet;$/;"	m	struct:_line	file:
x_gotone	d_ctl.c	/^    int x_gotone;$/;"	m	struct:_vsnapshot	file:
x_gp	g_traversal.c	/^    t_gpointer x_gp;$/;"	m	struct:_append	file:
x_gp	g_traversal.c	/^    t_gpointer x_gp;$/;"	m	struct:_elem	file:
x_gp	g_traversal.c	/^    t_gpointer x_gp;$/;"	m	struct:_ptrobj	file:
x_gp	g_traversal.c	/^    t_gpointer x_gp;$/;"	m	struct:_set	file:
x_gp	g_traversal.c	/^    t_gpointer x_gp;$/;"	m	struct:_setsize	file:
x_gp	x_array.c	249;"	d	file:
x_gp	x_text.c	/^    t_gpointer x_gp;        \/* pointer to it *\/$/;"	m	struct:_text_define	file:
x_gp	x_text.c	537;"	d	file:
x_gp	x_time.c	/^    t_gpointer *x_gp;$/;"	m	struct:_pipe	file:
x_gparent	g_traversal.c	/^    t_gpointer x_gparent;$/;"	m	struct:_elem	file:
x_gpointer	x_connective.c	/^    t_gpointer *x_gpointer; \/* the pointers *\/$/;"	m	struct:_pack	file:
x_grain	x_time.c	/^    t_float x_grain;$/;"	m	struct:_line	file:
x_graphcount	d_array.c	/^    int x_graphcount;$/;"	m	struct:_tabsend	file:
x_graphperiod	d_array.c	/^    int x_graphperiod;$/;"	m	struct:_tabsend	file:
x_gui	g_all_guis.h	/^    t_iemgui x_gui;$/;"	m	struct:_bng
x_gui	g_all_guis.h	/^    t_iemgui x_gui;$/;"	m	struct:_hdial
x_gui	g_all_guis.h	/^    t_iemgui x_gui;$/;"	m	struct:_hslider
x_gui	g_all_guis.h	/^    t_iemgui x_gui;$/;"	m	struct:_iemguidummy
x_gui	g_all_guis.h	/^    t_iemgui x_gui;$/;"	m	struct:_my_canvas
x_gui	g_all_guis.h	/^    t_iemgui x_gui;$/;"	m	struct:_my_numbox
x_gui	g_all_guis.h	/^    t_iemgui x_gui;$/;"	m	struct:_toggle
x_gui	g_all_guis.h	/^    t_iemgui x_gui;$/;"	m	struct:_vdial
x_gui	g_all_guis.h	/^    t_iemgui x_gui;$/;"	m	struct:_vslider
x_gui	g_all_guis.h	/^    t_iemgui x_gui;$/;"	m	struct:_vu
x_gui_setup	x_gui.c	/^void x_gui_setup(void)$/;"	f
x_h	g_all_guis.h	/^    int                x_h;$/;"	m	struct:_iemgui
x_hang	x_midi.c	/^    t_hang *x_hang;$/;"	m	struct:_makenote	file:
x_hang	x_time.c	/^    t_hang *x_hang;$/;"	m	struct:_pipe	file:
x_height	g_rtext.c	/^    int x_height;$/;"	m	struct:_rtext	file:
x_hi	d_math.c	/^    t_float x_hi;$/;"	m	struct:_clip	file:
x_hideadtime	d_ctl.c	/^    t_float x_hideadtime;         \/* hi dead time in msec *\/$/;"	m	struct:_threshold_tilde	file:
x_hidename	g_array.c	/^    char x_hidename;        \/* don't print name above graph *\/$/;"	m	struct:_garray	file:
x_hit	x_time.c	/^    int x_hit;$/;"	m	struct:_metro	file:
x_hithresh	d_ctl.c	/^    t_float x_hithresh;           \/* value of high threshold *\/$/;"	m	struct:_threshold_tilde	file:
x_hop	g_io.c	/^    int x_hop;              \/* hopsize *\/$/;"	m	struct:_voutlet	file:
x_hop	g_io.c	/^    int x_hop;$/;"	m	struct:_vinlet	file:
x_hz	d_filter.c	/^    t_float x_hz;$/;"	m	struct:sighip	file:
x_hz	d_filter.c	/^    t_float x_hz;$/;"	m	struct:siglop	file:
x_in1val	x_time.c	/^    double x_in1val;$/;"	m	struct:_line	file:
x_inc	d_ctl.c	/^    double x_inc;$/;"	m	struct:_vline	file:
x_inc	d_ctl.c	/^    t_sample x_inc;$/;"	m	struct:_line	file:
x_inlet	g_io.c	/^    t_inlet *x_inlet;$/;"	m	struct:_vinlet	file:
x_inlet1	d_ctl.c	/^    t_float x_inlet1;$/;"	m	struct:_vline	file:
x_inlet2	d_ctl.c	/^    t_float x_inlet2;$/;"	m	struct:_vline	file:
x_inletvalue	d_ctl.c	/^    t_float x_inletvalue;$/;"	m	struct:_line	file:
x_inletwas	d_ctl.c	/^    t_float x_inletwas;$/;"	m	struct:_line	file:
x_innext	x_text.c	/^    int x_innext;           \/* we're currently inside the "next" routine *\/$/;"	m	struct:_qlist	file:
x_insamplerate	d_soundfile.c	/^    t_float x_insamplerate;   \/* sample rate of input signal if known *\/$/;"	m	struct:_readsf	file:
x_intconvert	x_connective.c	/^    int x_intconvert;$/;"	m	struct:_makefilename	file:
x_interface_setup	x_interface.c	/^void x_interface_setup(void)$/;"	f
x_isa	g_all_guis.h	/^    t_iem_init_symargs x_isa;$/;"	m	struct:_iemgui
x_issymbol	g_traversal.c	/^    int x_issymbol;$/;"	m	struct:_set	file:
x_itemswritten	d_soundfile.c	/^    int x_itemswritten;     \/* writesf~ only; items writen *\/$/;"	m	struct:_readsf	file:
x_justcopyout	g_io.c	/^    char x_justcopyout;$/;"	m	struct:_voutlet	file:
x_k	g_all_guis.h	/^    double   x_k;$/;"	m	struct:_hslider
x_k	g_all_guis.h	/^    double   x_k;$/;"	m	struct:_my_numbox
x_k	g_all_guis.h	/^    double   x_k;$/;"	m	struct:_vslider
x_keep	x_text.c	/^    unsigned char x_keep;   \/* whether to embed contents in patch on save *\/$/;"	m	struct:_text_define	file:
x_kerneltime	x_misc.c	/^    LARGE_INTEGER x_kerneltime;$/;"	m	struct:_cputime	file:
x_key	x_gui.c	/^    void *x_key;$/;"	m	struct:_gfxstub	file:
x_keyvec	x_text.c	/^    t_key *x_keyvec;$/;"	m	struct:_text_search	file:
x_lab	g_all_guis.h	/^    t_symbol           *x_lab;              \/* label *\/$/;"	m	struct:_iemgui
x_lab_arg_tail_len	g_all_guis.h	/^    unsigned int x_lab_arg_tail_len:6;$/;"	m	struct:_iem_fstyle_flags
x_lab_is_arg_num	g_all_guis.h	/^    unsigned int x_lab_is_arg_num:6;$/;"	m	struct:_iem_fstyle_flags
x_lab_is_unique	g_all_guis.h	/^    unsigned int x_lab_is_unique:1;$/;"	m	struct:_iem_fstyle_flags
x_lab_unexpanded	g_all_guis.h	/^    t_symbol           *x_lab_unexpanded;$/;"	m	struct:_iemgui
x_label	g_template.c	/^    t_symbol *x_label;$/;"	m	struct:_drawnumber	file:
x_labelbindex	g_all_guis.h	/^    int                x_labelbindex;       \/* where in binbuf to find label *\/$/;"	m	struct:_iemgui
x_last	d_filter.c	/^    t_sample x_last;$/;"	m	struct:sigrpole	file:
x_last	d_filter.c	/^    t_sample x_last;$/;"	m	struct:sigrzero	file:
x_last	d_filter.c	/^    t_sample x_last;$/;"	m	struct:sigrzero_rev	file:
x_lastim	d_filter.c	/^    t_sample x_lastim;$/;"	m	struct:sigcpole	file:
x_lastim	d_filter.c	/^    t_sample x_lastim;$/;"	m	struct:sigczero	file:
x_lastim	d_filter.c	/^    t_sample x_lastim;$/;"	m	struct:sigczero_rev	file:
x_lastin	d_filter.c	/^    t_sample x_lastin;$/;"	m	struct:sigsamphold	file:
x_lastlogicaltime	d_ctl.c	/^    double x_lastlogicaltime;$/;"	m	struct:_vline	file:
x_lastout	d_filter.c	/^    t_sample x_lastout;$/;"	m	struct:sigsamphold	file:
x_lastre	d_filter.c	/^    t_sample x_lastre;$/;"	m	struct:sigcpole	file:
x_lastre	d_filter.c	/^    t_sample x_lastre;$/;"	m	struct:sigczero	file:
x_lastre	d_filter.c	/^    t_sample x_lastre;$/;"	m	struct:sigczero_rev	file:
x_lastto	x_text.c	/^    t_symbol *x_lastto;     \/* destination symbol if we're after a comma *\/$/;"	m	struct:_text_sequence	file:
x_lcol	g_all_guis.h	/^    int                x_lcol;$/;"	m	struct:_iemgui
x_ldx	g_all_guis.h	/^    int                x_ldx;$/;"	m	struct:_iemgui
x_ldy	g_all_guis.h	/^    int                x_ldy;$/;"	m	struct:_iemgui
x_led_size	g_all_guis.h	/^    int      x_led_size;$/;"	m	struct:_vu
x_limit	d_array.c	/^    int x_limit;$/;"	m	struct:_tabplay_tilde	file:
x_lin0_log1	g_all_guis.h	/^    int      x_lin0_log1;$/;"	m	struct:_hslider
x_lin0_log1	g_all_guis.h	/^    int      x_lin0_log1;$/;"	m	struct:_my_numbox
x_lin0_log1	g_all_guis.h	/^    int      x_lin0_log1;$/;"	m	struct:_vslider
x_lin0_log1	g_all_guis.h	/^    unsigned int x_lin0_log1:1;$/;"	m	struct:_iem_fstyle_flags
x_list	d_ctl.c	/^    t_vseg *x_list;$/;"	m	struct:_vline	file:
x_list_setup	x_list.c	/^void x_list_setup(void)$/;"	f
x_listviewing	g_array.c	/^    char x_listviewing;     \/* true if list view window is open *\/$/;"	m	struct:_garray	file:
x_lo	d_math.c	/^    t_float x_lo;$/;"	m	struct:_clip	file:
x_loadinit	g_all_guis.h	/^    unsigned int x_loadinit:1;$/;"	m	struct:_iem_init_symargs
x_locked	g_all_guis.h	/^    unsigned int x_locked:1;$/;"	m	struct:_iem_init_symargs
x_lodeadtime	d_ctl.c	/^    t_float x_lodeadtime;         \/* lo dead time in msec *\/$/;"	m	struct:_threshold_tilde	file:
x_log_height	g_all_guis.h	/^    int      x_log_height;$/;"	m	struct:_my_numbox
x_loop	x_text.c	/^    unsigned char x_loop;   \/* true if we can send multiple lines *\/$/;"	m	struct:_text_sequence	file:
x_lothresh	d_ctl.c	/^    t_float x_lothresh;           \/* value of low threshold *\/$/;"	m	struct:_threshold_tilde	file:
x_mainout	x_text.c	/^    t_outlet *x_mainout;    \/* outlet for lists, zero if "global" *\/$/;"	m	struct:_text_sequence	file:
x_max	g_all_guis.h	/^    double   x_max;$/;"	m	struct:_hslider
x_max	g_all_guis.h	/^    double   x_max;$/;"	m	struct:_my_numbox
x_max	g_all_guis.h	/^    double   x_max;$/;"	m	struct:_vslider
x_midi_setup	x_midi.c	/^void x_midi_setup(void)$/;"	f
x_min	g_all_guis.h	/^    double   x_min;$/;"	m	struct:_hslider
x_min	g_all_guis.h	/^    double   x_min;$/;"	m	struct:_my_numbox
x_min	g_all_guis.h	/^    double   x_min;$/;"	m	struct:_vslider
x_misc_setup	x_misc.c	/^void x_misc_setup(void)$/;"	f
x_moreelapsed	x_time.c	/^    double x_moreelapsed;$/;"	m	struct:_timer	file:
x_msecpersamp	d_ctl.c	/^    double x_msecpersamp;$/;"	m	struct:_vline	file:
x_msecpertick	d_ctl.c	/^    t_float x_msecpertick;        \/* msec per DSP tick *\/$/;"	m	struct:_threshold_tilde	file:
x_msgout	x_net.c	/^    t_outlet *x_msgout;$/;"	m	struct:_netsend	file:
x_mutex	d_soundfile.c	/^    pthread_mutex_t x_mutex;$/;"	m	struct:_readsf	file:
x_n	d_ctl.c	/^    int x_n;$/;"	m	struct:_vsnapshot	file:
x_n	d_dac.c	/^    t_int x_n;$/;"	m	struct:_adc	file:
x_n	d_dac.c	/^    t_int x_n;$/;"	m	struct:_dac	file:
x_n	d_delay.c	/^    t_float x_n;        \/* vector size *\/$/;"	m	struct:_sigdelread	file:
x_n	d_global.c	/^    int x_n;$/;"	m	struct:_sigcatch	file:
x_n	d_global.c	/^    int x_n;$/;"	m	struct:_sigreceive	file:
x_n	d_global.c	/^    int x_n;$/;"	m	struct:_sigsend	file:
x_n	d_global.c	/^    int x_n;$/;"	m	struct:_sigthrow	file:
x_n	x_array.c	/^    float x_n;$/;"	m	struct:_array_rangeop	file:
x_n	x_connective.c	/^    t_int x_n;              \/* number of args *\/$/;"	m	struct:_pack	file:
x_n	x_connective.c	/^    t_int x_n;$/;"	m	struct:_trigger	file:
x_n	x_connective.c	/^    t_int x_n;$/;"	m	struct:_unpack	file:
x_n	x_midi.c	/^    int x_n;$/;"	m	struct:poly	file:
x_n	x_time.c	/^    int x_n;$/;"	m	struct:_pipe	file:
x_name	g_array.c	/^    t_symbol *x_name;       \/* unexpanded name (possibly with leading '$') *\/$/;"	m	struct:_garray	file:
x_nconnections	x_net.c	/^    int x_nconnections;$/;"	m	struct:_netreceive	file:
x_nelement	x_connective.c	/^    t_int x_nelement;$/;"	m	struct:_route	file:
x_nelement	x_connective.c	/^    t_int x_nelement;$/;"	m	struct:_sel2	file:
x_net_setup	x_net.c	/^void x_net_setup(void)$/;"	f
x_next	g_rtext.c	/^    struct _rtext *x_next;$/;"	m	struct:_rtext	typeref:struct:_rtext::_rtext	file:
x_next	g_template.c	/^    struct _gtemplate *x_next;$/;"	m	struct:_gtemplate	typeref:struct:_gtemplate::_gtemplate	file:
x_next	x_gui.c	/^    struct _gfxstub *x_next;$/;"	m	struct:_gfxstub	typeref:struct:_gfxstub::_gfxstub	file:
x_nextblocktime	d_ctl.c	/^    double x_nextblocktime;$/;"	m	struct:_vline	file:
x_nextdelay	x_text.c	/^    t_float x_nextdelay;$/;"	m	struct:_text_sequence	file:
x_nin	g_traversal.c	/^    int x_nin;$/;"	m	struct:_append	file:
x_nin	g_traversal.c	/^    int x_nin;$/;"	m	struct:_set	file:
x_nkeys	x_text.c	/^    int x_nkeys;$/;"	m	struct:_text_search	file:
x_nonzero	g_all_guis.h	/^    t_float    x_nonzero;$/;"	m	struct:_toggle
x_nout	g_traversal.c	/^    int x_nout;$/;"	m	struct:_get	file:
x_noutlets	d_soundfile.c	/^    int x_noutlets;                         \/* number of audio outlets *\/$/;"	m	struct:_readsf	file:
x_npoints	d_array.c	/^    int x_npoints;$/;"	m	struct:_tabread4_tilde	file:
x_npoints	d_array.c	/^    int x_npoints;$/;"	m	struct:_tabread_tilde	file:
x_npoints	d_array.c	/^    int x_npoints;$/;"	m	struct:_tabreceive	file:
x_npoints	d_array.c	/^    int x_npoints;$/;"	m	struct:_tabsend	file:
x_npoints	d_ctl.c	/^    int x_npoints;                  \/* analysis window size in samples *\/$/;"	m	struct:sigenv	file:
x_npoints	g_template.c	/^    int x_npoints;$/;"	m	struct:_curve	file:
x_nptr	x_connective.c	/^    t_int x_nptr;           \/* number of pointers *\/$/;"	m	struct:_pack	file:
x_nptr	x_time.c	/^    int x_nptr;$/;"	m	struct:_pipe	file:
x_ns	x_net.c	/^    t_netsend x_ns;$/;"	m	struct:_netreceive	file:
x_nsampsintab	d_array.c	/^    int x_nsampsintab;$/;"	m	struct:_tabplay_tilde	file:
x_nsampsintab	d_array.c	/^    int x_nsampsintab;$/;"	m	struct:_tabwrite_tilde	file:
x_ntypedout	g_traversal.c	/^    int x_ntypedout;$/;"	m	struct:_ptrobj	file:
x_number	g_all_guis.h	/^    int      x_number;$/;"	m	struct:_hdial
x_number	g_all_guis.h	/^    int      x_number;$/;"	m	struct:_vdial
x_numwidth	g_all_guis.h	/^    int      x_numwidth;$/;"	m	struct:_my_numbox
x_ob	x_arithmetic.c	/^    t_object x_ob;$/;"	m	struct:_atan2	file:
x_ob	x_arithmetic.c	/^    t_object x_ob;$/;"	m	struct:_clip	file:
x_ob	x_connective.c	/^    t_object x_ob;$/;"	m	struct:_moses	file:
x_ob	x_text.c	1516;"	d	file:
x_ob	x_text.c	242;"	d	file:
x_obj	d_arithmetic.c	/^    t_object x_obj;$/;"	m	struct:_max	file:
x_obj	d_arithmetic.c	/^    t_object x_obj;$/;"	m	struct:_min	file:
x_obj	d_arithmetic.c	/^    t_object x_obj;$/;"	m	struct:_minus	file:
x_obj	d_arithmetic.c	/^    t_object x_obj;$/;"	m	struct:_over	file:
x_obj	d_arithmetic.c	/^    t_object x_obj;$/;"	m	struct:_plus	file:
x_obj	d_arithmetic.c	/^    t_object x_obj;$/;"	m	struct:_scalarmax	file:
x_obj	d_arithmetic.c	/^    t_object x_obj;$/;"	m	struct:_scalarmin	file:
x_obj	d_arithmetic.c	/^    t_object x_obj;$/;"	m	struct:_scalarminus	file:
x_obj	d_arithmetic.c	/^    t_object x_obj;$/;"	m	struct:_scalarover	file:
x_obj	d_arithmetic.c	/^    t_object x_obj;$/;"	m	struct:_scalarplus	file:
x_obj	d_arithmetic.c	/^    t_object x_obj;$/;"	m	struct:_scalartimes	file:
x_obj	d_arithmetic.c	/^    t_object x_obj;$/;"	m	struct:_times	file:
x_obj	d_array.c	/^    t_object x_obj;$/;"	m	struct:_tabosc4_tilde	file:
x_obj	d_array.c	/^    t_object x_obj;$/;"	m	struct:_tabplay_tilde	file:
x_obj	d_array.c	/^    t_object x_obj;$/;"	m	struct:_tabread	file:
x_obj	d_array.c	/^    t_object x_obj;$/;"	m	struct:_tabread4	file:
x_obj	d_array.c	/^    t_object x_obj;$/;"	m	struct:_tabread4_tilde	file:
x_obj	d_array.c	/^    t_object x_obj;$/;"	m	struct:_tabread_tilde	file:
x_obj	d_array.c	/^    t_object x_obj;$/;"	m	struct:_tabreceive	file:
x_obj	d_array.c	/^    t_object x_obj;$/;"	m	struct:_tabsend	file:
x_obj	d_array.c	/^    t_object x_obj;$/;"	m	struct:_tabwrite	file:
x_obj	d_array.c	/^    t_object x_obj;$/;"	m	struct:_tabwrite_tilde	file:
x_obj	d_ctl.c	/^    t_object x_obj;                 \/* header *\/$/;"	m	struct:sigenv	file:
x_obj	d_ctl.c	/^    t_object x_obj;$/;"	m	struct:_line	file:
x_obj	d_ctl.c	/^    t_object x_obj;$/;"	m	struct:_sig	file:
x_obj	d_ctl.c	/^    t_object x_obj;$/;"	m	struct:_snapshot	file:
x_obj	d_ctl.c	/^    t_object x_obj;$/;"	m	struct:_threshold_tilde	file:
x_obj	d_ctl.c	/^    t_object x_obj;$/;"	m	struct:_vline	file:
x_obj	d_ctl.c	/^    t_object x_obj;$/;"	m	struct:_vsnapshot	file:
x_obj	d_dac.c	/^    t_object x_obj;$/;"	m	struct:_adc	file:
x_obj	d_dac.c	/^    t_object x_obj;$/;"	m	struct:_dac	file:
x_obj	d_delay.c	/^    t_object x_obj;$/;"	m	struct:_sigdelread	file:
x_obj	d_delay.c	/^    t_object x_obj;$/;"	m	struct:_sigdelwrite	file:
x_obj	d_delay.c	/^    t_object x_obj;$/;"	m	struct:_sigvd	file:
x_obj	d_fft.c	/^    t_object x_obj;$/;"	m	struct:fft	file:
x_obj	d_fft.c	/^    t_object x_obj;$/;"	m	struct:framp	file:
x_obj	d_fft.c	/^    t_object x_obj;$/;"	m	struct:rfft	file:
x_obj	d_fft.c	/^    t_object x_obj;$/;"	m	struct:rifft	file:
x_obj	d_filter.c	/^    t_object x_obj;$/;"	m	struct:sigbiquad	file:
x_obj	d_filter.c	/^    t_object x_obj;$/;"	m	struct:sigbp	file:
x_obj	d_filter.c	/^    t_object x_obj;$/;"	m	struct:sigcpole	file:
x_obj	d_filter.c	/^    t_object x_obj;$/;"	m	struct:sigczero	file:
x_obj	d_filter.c	/^    t_object x_obj;$/;"	m	struct:sigczero_rev	file:
x_obj	d_filter.c	/^    t_object x_obj;$/;"	m	struct:sighip	file:
x_obj	d_filter.c	/^    t_object x_obj;$/;"	m	struct:siglop	file:
x_obj	d_filter.c	/^    t_object x_obj;$/;"	m	struct:sigrpole	file:
x_obj	d_filter.c	/^    t_object x_obj;$/;"	m	struct:sigrzero	file:
x_obj	d_filter.c	/^    t_object x_obj;$/;"	m	struct:sigrzero_rev	file:
x_obj	d_filter.c	/^    t_object x_obj;$/;"	m	struct:sigsamphold	file:
x_obj	d_global.c	/^    t_object x_obj;$/;"	m	struct:_sigcatch	file:
x_obj	d_global.c	/^    t_object x_obj;$/;"	m	struct:_sigreceive	file:
x_obj	d_global.c	/^    t_object x_obj;$/;"	m	struct:_sigsend	file:
x_obj	d_global.c	/^    t_object x_obj;$/;"	m	struct:_sigthrow	file:
x_obj	d_math.c	/^    t_object x_obj;$/;"	m	struct:_abs_tilde	file:
x_obj	d_math.c	/^    t_object x_obj;$/;"	m	struct:_clip	file:
x_obj	d_math.c	/^    t_object x_obj;$/;"	m	struct:_exp_tilde	file:
x_obj	d_math.c	/^    t_object x_obj;$/;"	m	struct:_log_tilde	file:
x_obj	d_math.c	/^    t_object x_obj;$/;"	m	struct:_pow_tilde	file:
x_obj	d_math.c	/^    t_object x_obj;$/;"	m	struct:dbtopow_tilde	file:
x_obj	d_math.c	/^    t_object x_obj;$/;"	m	struct:dbtorms_tilde	file:
x_obj	d_math.c	/^    t_object x_obj;$/;"	m	struct:ftom_tilde	file:
x_obj	d_math.c	/^    t_object x_obj;$/;"	m	struct:mtof_tilde	file:
x_obj	d_math.c	/^    t_object x_obj;$/;"	m	struct:powtodb_tilde	file:
x_obj	d_math.c	/^    t_object x_obj;$/;"	m	struct:rmstodb_tilde	file:
x_obj	d_math.c	/^    t_object x_obj;$/;"	m	struct:sigrsqrt	file:
x_obj	d_math.c	/^    t_object x_obj;$/;"	m	struct:sigsqrt	file:
x_obj	d_math.c	/^    t_object x_obj;$/;"	m	struct:wrap	file:
x_obj	d_misc.c	/^    t_object x_obj;$/;"	m	struct:_bang	file:
x_obj	d_misc.c	/^    t_object x_obj;$/;"	m	struct:_print	file:
x_obj	d_osc.c	/^    t_object x_obj;$/;"	m	struct:_cos	file:
x_obj	d_osc.c	/^    t_object x_obj;$/;"	m	struct:_noise	file:
x_obj	d_osc.c	/^    t_object x_obj;$/;"	m	struct:_osc	file:
x_obj	d_osc.c	/^    t_object x_obj;$/;"	m	struct:_phasor	file:
x_obj	d_osc.c	/^    t_object x_obj;$/;"	m	struct:sigvcf	file:
x_obj	d_soundfile.c	/^    t_object x_obj;$/;"	m	struct:_readsf	file:
x_obj	d_soundfile.c	/^    t_object x_obj;$/;"	m	struct:_soundfiler	file:
x_obj	d_ugen.c	/^    t_object x_obj;$/;"	m	struct:_block	file:
x_obj	d_ugen.c	/^    t_object x_obj;$/;"	m	struct:_samplerate	file:
x_obj	g_all_guis.h	/^    t_object           x_obj;$/;"	m	struct:_iemgui
x_obj	g_canvas.c	/^    t_object x_obj;$/;"	m	struct:_declare	file:
x_obj	g_guiconnect.c	/^    t_object x_obj;$/;"	m	struct:_guiconnect	file:
x_obj	g_io.c	/^    t_object x_obj;$/;"	m	struct:_vinlet	file:
x_obj	g_io.c	/^    t_object x_obj;$/;"	m	struct:_voutlet	file:
x_obj	g_template.c	/^    t_object x_obj;$/;"	m	struct:_curve	file:
x_obj	g_template.c	/^    t_object x_obj;$/;"	m	struct:_drawnumber	file:
x_obj	g_template.c	/^    t_object x_obj;$/;"	m	struct:_gtemplate	file:
x_obj	g_template.c	/^    t_object x_obj;$/;"	m	struct:_plot	file:
x_obj	g_traversal.c	/^    t_object x_obj;$/;"	m	struct:_append	file:
x_obj	g_traversal.c	/^    t_object x_obj;$/;"	m	struct:_elem	file:
x_obj	g_traversal.c	/^    t_object x_obj;$/;"	m	struct:_get	file:
x_obj	g_traversal.c	/^    t_object x_obj;$/;"	m	struct:_getsize	file:
x_obj	g_traversal.c	/^    t_object x_obj;$/;"	m	struct:_ptrobj	file:
x_obj	g_traversal.c	/^    t_object x_obj;$/;"	m	struct:_set	file:
x_obj	g_traversal.c	/^    t_object x_obj;$/;"	m	struct:_setsize	file:
x_obj	x_arithmetic.c	/^    t_object x_obj;$/;"	m	struct:_binop	file:
x_obj	x_connective.c	/^    t_object x_obj;$/;"	m	struct:_bang	file:
x_obj	x_connective.c	/^    t_object x_obj;$/;"	m	struct:_change	file:
x_obj	x_connective.c	/^    t_object x_obj;$/;"	m	struct:_makefilename	file:
x_obj	x_connective.c	/^    t_object x_obj;$/;"	m	struct:_pack	file:
x_obj	x_connective.c	/^    t_object x_obj;$/;"	m	struct:_pdfloat	file:
x_obj	x_connective.c	/^    t_object x_obj;$/;"	m	struct:_pdint	file:
x_obj	x_connective.c	/^    t_object x_obj;$/;"	m	struct:_pdsymbol	file:
x_obj	x_connective.c	/^    t_object x_obj;$/;"	m	struct:_receive	file:
x_obj	x_connective.c	/^    t_object x_obj;$/;"	m	struct:_route	file:
x_obj	x_connective.c	/^    t_object x_obj;$/;"	m	struct:_sel1	file:
x_obj	x_connective.c	/^    t_object x_obj;$/;"	m	struct:_sel2	file:
x_obj	x_connective.c	/^    t_object x_obj;$/;"	m	struct:_send	file:
x_obj	x_connective.c	/^    t_object x_obj;$/;"	m	struct:_spigot	file:
x_obj	x_connective.c	/^    t_object x_obj;$/;"	m	struct:_swap	file:
x_obj	x_connective.c	/^    t_object x_obj;$/;"	m	struct:_trigger	file:
x_obj	x_connective.c	/^    t_object x_obj;$/;"	m	struct:_unpack	file:
x_obj	x_connective.c	/^    t_object x_obj;$/;"	m	struct:_until	file:
x_obj	x_connective.c	/^    t_object x_obj;$/;"	m	struct:_value	file:
x_obj	x_gui.c	/^    t_object x_obj;$/;"	m	struct:_key	file:
x_obj	x_gui.c	/^    t_object x_obj;$/;"	m	struct:_keyname	file:
x_obj	x_gui.c	/^    t_object x_obj;$/;"	m	struct:_keyup	file:
x_obj	x_gui.c	/^    t_object x_obj;$/;"	m	struct:_openpanel	file:
x_obj	x_gui.c	/^    t_object x_obj;$/;"	m	struct:_savepanel	file:
x_obj	x_interface.c	/^    t_object x_obj;$/;"	m	struct:_print	file:
x_obj	x_list.c	/^    t_object x_obj;$/;"	m	struct:_list_append	file:
x_obj	x_list.c	/^    t_object x_obj;$/;"	m	struct:_list_fromsymbol	file:
x_obj	x_list.c	/^    t_object x_obj;$/;"	m	struct:_list_length	file:
x_obj	x_list.c	/^    t_object x_obj;$/;"	m	struct:_list_prepend	file:
x_obj	x_list.c	/^    t_object x_obj;$/;"	m	struct:_list_split	file:
x_obj	x_list.c	/^    t_object x_obj;$/;"	m	struct:_list_tosymbol	file:
x_obj	x_list.c	/^    t_object x_obj;$/;"	m	struct:_list_trim	file:
x_obj	x_midi.c	/^    t_object x_obj;$/;"	m	struct:_bag	file:
x_obj	x_midi.c	/^    t_object x_obj;$/;"	m	struct:_bendin	file:
x_obj	x_midi.c	/^    t_object x_obj;$/;"	m	struct:_bendout	file:
x_obj	x_midi.c	/^    t_object x_obj;$/;"	m	struct:_ctlin	file:
x_obj	x_midi.c	/^    t_object x_obj;$/;"	m	struct:_ctlout	file:
x_obj	x_midi.c	/^    t_object x_obj;$/;"	m	struct:_makenote	file:
x_obj	x_midi.c	/^    t_object x_obj;$/;"	m	struct:_midiclkin	file:
x_obj	x_midi.c	/^    t_object x_obj;$/;"	m	struct:_midiin	file:
x_obj	x_midi.c	/^    t_object x_obj;$/;"	m	struct:_midiout	file:
x_obj	x_midi.c	/^    t_object x_obj;$/;"	m	struct:_midirealtimein	file:
x_obj	x_midi.c	/^    t_object x_obj;$/;"	m	struct:_notein	file:
x_obj	x_midi.c	/^    t_object x_obj;$/;"	m	struct:_noteout	file:
x_obj	x_midi.c	/^    t_object x_obj;$/;"	m	struct:_pgmin	file:
x_obj	x_midi.c	/^    t_object x_obj;$/;"	m	struct:_pgmout	file:
x_obj	x_midi.c	/^    t_object x_obj;$/;"	m	struct:_polytouchin	file:
x_obj	x_midi.c	/^    t_object x_obj;$/;"	m	struct:_polytouchout	file:
x_obj	x_midi.c	/^    t_object x_obj;$/;"	m	struct:_stripnote	file:
x_obj	x_midi.c	/^    t_object x_obj;$/;"	m	struct:_touchin	file:
x_obj	x_midi.c	/^    t_object x_obj;$/;"	m	struct:_touchout	file:
x_obj	x_midi.c	/^    t_object x_obj;$/;"	m	struct:poly	file:
x_obj	x_misc.c	/^    t_object x_obj;$/;"	m	struct:_cputime	file:
x_obj	x_misc.c	/^    t_object x_obj;$/;"	m	struct:_loadbang	file:
x_obj	x_misc.c	/^    t_object x_obj;$/;"	m	struct:_namecanvas	file:
x_obj	x_misc.c	/^    t_object x_obj;$/;"	m	struct:_random	file:
x_obj	x_misc.c	/^    t_object x_obj;$/;"	m	struct:_realtime	file:
x_obj	x_misc.c	/^    t_object x_obj;$/;"	m	struct:_serial	file:
x_obj	x_net.c	/^    t_object x_obj;$/;"	m	struct:_netsend	file:
x_obj	x_text.c	535;"	d	file:
x_obj	x_time.c	/^    t_object x_obj;$/;"	m	struct:_delay	file:
x_obj	x_time.c	/^    t_object x_obj;$/;"	m	struct:_line	file:
x_obj	x_time.c	/^    t_object x_obj;$/;"	m	struct:_metro	file:
x_obj	x_time.c	/^    t_object x_obj;$/;"	m	struct:_pipe	file:
x_obj	x_time.c	/^    t_object x_obj;$/;"	m	struct:_timer	file:
x_old	x_net.c	/^    int x_old;$/;"	m	struct:_netreceive	file:
x_on	g_all_guis.h	/^    int      x_on;$/;"	m	struct:_hdial
x_on	g_all_guis.h	/^    int      x_on;$/;"	m	struct:_vdial
x_on	g_all_guis.h	/^    t_float    x_on;$/;"	m	struct:_toggle
x_on_old	g_all_guis.h	/^    int      x_on_old;  \/* LATER delete this; it's used for old version *\/$/;"	m	struct:_hdial
x_on_old	g_all_guis.h	/^    int      x_on_old;$/;"	m	struct:_vdial
x_onset	d_array.c	/^    t_float x_onset;$/;"	m	struct:_tabread4_tilde	file:
x_onset	x_array.c	/^    float x_onset;$/;"	m	struct:_array_rangeop	file:
x_onset	x_array.c	/^    int x_onset;            \/* search onset *\/$/;"	m	struct:_array_max	file:
x_onset	x_array.c	/^    int x_onset;            \/* search onset *\/$/;"	m	struct:_array_min	file:
x_onset	x_text.c	/^    int x_onset;                \/* playback position *\/$/;"	m	struct:_qlist	file:
x_onset	x_text.c	/^    int x_onset;$/;"	m	struct:_text_sequence	file:
x_onsetframes	d_soundfile.c	/^    long x_onsetframes;     \/* number of sample frames to skip *\/$/;"	m	struct:_readsf	file:
x_open	x_misc.c	/^    int x_open;$/;"	m	struct:_serial	file:
x_otherout	g_traversal.c	/^    t_outlet *x_otherout;$/;"	m	struct:_ptrobj	file:
x_out	x_text.c	/^    t_outlet *x_out;$/;"	m	struct:_text_define	file:
x_out1	x_array.c	/^    t_outlet *x_out1;       \/* value *\/$/;"	m	struct:_array_max	file:
x_out1	x_array.c	/^    t_outlet *x_out1;       \/* value *\/$/;"	m	struct:_array_min	file:
x_out1	x_list.c	/^    t_outlet *x_out1;$/;"	m	struct:_list_split	file:
x_out1	x_text.c	/^    t_outlet *x_out1;       \/* float *\/$/;"	m	struct:_text_size	file:
x_out1	x_text.c	/^    t_outlet *x_out1;       \/* line indices *\/$/;"	m	struct:_text_search	file:
x_out1	x_text.c	/^    t_outlet *x_out1;       \/* list *\/$/;"	m	struct:_text_get	file:
x_out2	x_array.c	/^    t_outlet *x_out2;       \/* index *\/$/;"	m	struct:_array_max	file:
x_out2	x_array.c	/^    t_outlet *x_out2;       \/* index *\/$/;"	m	struct:_array_min	file:
x_out2	x_connective.c	/^    t_outlet *x_out2;$/;"	m	struct:_moses	file:
x_out2	x_connective.c	/^    t_outlet *x_out2;$/;"	m	struct:_swap	file:
x_out2	x_list.c	/^    t_outlet *x_out2;$/;"	m	struct:_list_split	file:
x_out2	x_text.c	/^    t_outlet *x_out2;       \/* 1 if comma terminated, 0 if semi, 2 if none *\/$/;"	m	struct:_text_get	file:
x_out2	x_text.c	/^    t_outlet *x_out2;       \/* number of matches *\/$/;"	m	struct:_text_search	file:
x_out3	x_list.c	/^    t_outlet *x_out3;$/;"	m	struct:_list_split	file:
x_out_peak	g_all_guis.h	/^    void     *x_out_peak;$/;"	m	struct:_vu
x_out_rms	g_all_guis.h	/^    void     *x_out_rms;$/;"	m	struct:_vu
x_outlet	d_ctl.c	/^    void *x_outlet;                 \/* a "float" outlet *\/$/;"	m	struct:sigenv	file:
x_outlet	x_array.c	337;"	d	file:
x_outlet1	d_ctl.c	/^    t_outlet *x_outlet1;        \/* bang out for high thresh *\/$/;"	m	struct:_threshold_tilde	file:
x_outlet1	x_connective.c	/^    t_outlet *x_outlet1;$/;"	m	struct:_sel1	file:
x_outlet1	x_gui.c	/^    t_outlet *x_outlet1;$/;"	m	struct:_keyname	file:
x_outlet1	x_midi.c	/^    t_outlet *x_outlet1;$/;"	m	struct:_bendin	file:
x_outlet1	x_midi.c	/^    t_outlet *x_outlet1;$/;"	m	struct:_ctlin	file:
x_outlet1	x_midi.c	/^    t_outlet *x_outlet1;$/;"	m	struct:_midiclkin	file:
x_outlet1	x_midi.c	/^    t_outlet *x_outlet1;$/;"	m	struct:_midiin	file:
x_outlet1	x_midi.c	/^    t_outlet *x_outlet1;$/;"	m	struct:_midirealtimein	file:
x_outlet1	x_midi.c	/^    t_outlet *x_outlet1;$/;"	m	struct:_notein	file:
x_outlet1	x_midi.c	/^    t_outlet *x_outlet1;$/;"	m	struct:_pgmin	file:
x_outlet1	x_midi.c	/^    t_outlet *x_outlet1;$/;"	m	struct:_polytouchin	file:
x_outlet1	x_midi.c	/^    t_outlet *x_outlet1;$/;"	m	struct:_touchin	file:
x_outlet2	d_ctl.c	/^    t_outlet *x_outlet2;        \/* bang out for low thresh *\/$/;"	m	struct:_threshold_tilde	file:
x_outlet2	x_connective.c	/^    t_outlet *x_outlet2;$/;"	m	struct:_sel1	file:
x_outlet2	x_gui.c	/^    t_outlet *x_outlet2;$/;"	m	struct:_keyname	file:
x_outlet2	x_midi.c	/^    t_outlet *x_outlet2;$/;"	m	struct:_bendin	file:
x_outlet2	x_midi.c	/^    t_outlet *x_outlet2;$/;"	m	struct:_ctlin	file:
x_outlet2	x_midi.c	/^    t_outlet *x_outlet2;$/;"	m	struct:_midiclkin	file:
x_outlet2	x_midi.c	/^    t_outlet *x_outlet2;$/;"	m	struct:_midiin	file:
x_outlet2	x_midi.c	/^    t_outlet *x_outlet2;$/;"	m	struct:_midirealtimein	file:
x_outlet2	x_midi.c	/^    t_outlet *x_outlet2;$/;"	m	struct:_notein	file:
x_outlet2	x_midi.c	/^    t_outlet *x_outlet2;$/;"	m	struct:_pgmin	file:
x_outlet2	x_midi.c	/^    t_outlet *x_outlet2;$/;"	m	struct:_polytouchin	file:
x_outlet2	x_midi.c	/^    t_outlet *x_outlet2;$/;"	m	struct:_touchin	file:
x_outlet3	x_midi.c	/^    t_outlet *x_outlet3;$/;"	m	struct:_ctlin	file:
x_outlet3	x_midi.c	/^    t_outlet *x_outlet3;$/;"	m	struct:_notein	file:
x_outlet3	x_midi.c	/^    t_outlet *x_outlet3;$/;"	m	struct:_polytouchin	file:
x_outlinecolor	g_template.c	/^    t_fielddesc x_outlinecolor;$/;"	m	struct:_curve	file:
x_outlinecolor	g_template.c	/^    t_fielddesc x_outlinecolor;$/;"	m	struct:_plot	file:
x_outvec	d_soundfile.c	/^    t_sample *(x_outvec[MAXSFCHANS]);       \/* audio vectors *\/$/;"	m	struct:_readsf	file:
x_outvec	x_connective.c	/^    t_atom *x_outvec;       \/* space for output values *\/$/;"	m	struct:_pack	file:
x_overlap	d_ugen.c	/^    int x_overlap;$/;"	m	struct:_block	file:
x_owner	g_template.c	/^    t_canvas *x_owner;$/;"	m	struct:_gtemplate	file:
x_owner	x_gui.c	/^    t_pd *x_owner;$/;"	m	struct:_gfxstub	file:
x_owner	x_misc.c	/^    t_pd *x_owner;$/;"	m	struct:_namecanvas	file:
x_parentoutlet	g_io.c	/^    t_outlet *x_parentoutlet;$/;"	m	struct:_voutlet	file:
x_pd	x_gui.c	/^    t_pd x_pd;$/;"	m	struct:_gfxstub	file:
x_peak	g_all_guis.h	/^    int      x_peak;$/;"	m	struct:_vu
x_period	d_ctl.c	/^    int x_period;                   \/* requested period of output *\/$/;"	m	struct:sigenv	file:
x_period	d_ugen.c	/^    int x_period;       \/* submultiple of containing canvas *\/$/;"	m	struct:_block	file:
x_phase	d_array.c	/^    double x_phase;$/;"	m	struct:_tabosc4_tilde	file:
x_phase	d_array.c	/^    int x_phase;$/;"	m	struct:_tabplay_tilde	file:
x_phase	d_array.c	/^    int x_phase;$/;"	m	struct:_tabwrite_tilde	file:
x_phase	d_ctl.c	/^    int x_phase;                    \/* number of points since last output *\/$/;"	m	struct:sigenv	file:
x_phase	d_osc.c	/^    double x_phase;$/;"	m	struct:_osc	file:
x_phase	d_osc.c	/^    double x_phase;$/;"	m	struct:_phasor	file:
x_phase	d_ugen.c	/^    int x_phase;        \/* from 0 to period-1; when zero we run the block *\/$/;"	m	struct:_block	file:
x_pitch	x_midi.c	/^    t_float x_pitch;$/;"	m	struct:_polytouchout	file:
x_pitchout	x_midi.c	/^    t_outlet *x_pitchout;$/;"	m	struct:_makenote	file:
x_pitchout	x_midi.c	/^    t_outlet *x_pitchout;$/;"	m	struct:_stripnote	file:
x_pitchout	x_midi.c	/^    t_outlet *x_pitchout;$/;"	m	struct:poly	file:
x_portno	x_midi.c	/^    t_float x_portno;$/;"	m	struct:_midiout	file:
x_portno	x_misc.c	/^    int x_portno;$/;"	m	struct:_serial	file:
x_pos	g_all_guis.h	/^    int      x_pos;$/;"	m	struct:_hslider
x_pos	g_all_guis.h	/^    int      x_pos;$/;"	m	struct:_vslider
x_prevtime	x_time.c	/^    double x_prevtime;$/;"	m	struct:_line	file:
x_protocol	x_net.c	/^    int x_protocol;$/;"	m	struct:_netsend	file:
x_put_in2out	g_all_guis.h	/^    unsigned int x_put_in2out:1;$/;"	m	struct:_iem_fstyle_flags
x_q	d_filter.c	/^    t_float x_q;$/;"	m	struct:sigbp	file:
x_qlist_setup	x_text.c	/^void x_qlist_setup(void )$/;"	f
x_r	x_array.c	/^    t_array_rangeop x_r;$/;"	m	struct:_array_random	file:
x_rangeop	x_array.c	/^    t_array_rangeop x_rangeop;$/;"	m	struct:_array_max	file:
x_rangeop	x_array.c	/^    t_array_rangeop x_rangeop;$/;"	m	struct:_array_min	file:
x_rcv	g_all_guis.h	/^    t_symbol           *x_rcv;              \/* receive *\/$/;"	m	struct:_iemgui
x_rcv_able	g_all_guis.h	/^    unsigned int x_rcv_able:1;$/;"	m	struct:_iem_fstyle_flags
x_rcv_arg_tail_len	g_all_guis.h	/^    unsigned int x_rcv_arg_tail_len:6;$/;"	m	struct:_iem_init_symargs
x_rcv_is_arg_num	g_all_guis.h	/^    unsigned int x_rcv_is_arg_num:6;$/;"	m	struct:_iem_init_symargs
x_rcv_is_unique	g_all_guis.h	/^    unsigned int x_rcv_is_unique:1;$/;"	m	struct:_iem_fstyle_flags
x_rcv_unexpanded	g_all_guis.h	/^    t_symbol           *x_rcv_unexpanded;$/;"	m	struct:_iemgui
x_read	g_io.c	/^    t_float *x_read;$/;"	m	struct:_vinlet	file:
x_realname	g_array.c	/^    t_symbol *x_realname;   \/* expanded name (symbol we're bound to) *\/$/;"	m	struct:_garray	file:
x_realperiod	d_ctl.c	/^    int x_realperiod;               \/* period rounded up to vecsize multiple *\/$/;"	m	struct:sigenv	file:
x_reblock	d_ugen.c	/^    char x_reblock;     \/* true if inlets and outlets are reblocking *\/$/;"	m	struct:_block	file:
x_referencetime	d_ctl.c	/^    double x_referencetime;$/;"	m	struct:_vline	file:
x_rejectout	x_connective.c	/^    t_outlet *x_rejectout;$/;"	m	struct:_route	file:
x_rejectout	x_connective.c	/^    t_outlet *x_rejectout;$/;"	m	struct:_sel2	file:
x_requestcode	d_soundfile.c	/^    int x_requestcode;      \/* pending request from parent to I\/O thread *\/$/;"	m	struct:_readsf	file:
x_requestcondition	d_soundfile.c	/^    pthread_cond_t x_requestcondition;$/;"	m	struct:_readsf	file:
x_result	d_ctl.c	/^    t_float x_result;                 \/* result to output *\/$/;"	m	struct:sigenv	file:
x_retarget	d_ctl.c	/^    int x_retarget;$/;"	m	struct:_line	file:
x_return	d_ugen.c	/^    int x_return;       \/* stop right after this block (for one-shots) *\/$/;"	m	struct:_block	file:
x_reverse	g_all_guis.h	/^    unsigned int x_reverse:1; \/* bugfix *\/$/;"	m	struct:_iem_init_symargs
x_rewound	x_text.c	/^    int x_rewound;          \/* we've been rewound since last start *\/$/;"	m	struct:_qlist	file:
x_rms	g_all_guis.h	/^    int      x_rms;$/;"	m	struct:_vu
x_rsortno	d_delay.c	/^    int x_rsortno;  \/* DSP sort # for first delread or write in chain *\/$/;"	m	struct:_sigdelwrite	file:
x_run	x_connective.c	/^    int x_run;$/;"	m	struct:_until	file:
x_s	x_connective.c	/^    t_symbol *x_s;$/;"	m	struct:_pdsymbol	file:
x_s	x_gui.c	/^    t_symbol *x_s;$/;"	m	struct:_openpanel	file:
x_s	x_gui.c	/^    t_symbol *x_s;$/;"	m	struct:_savepanel	file:
x_samplerate	d_soundfile.c	/^    t_float x_samplerate;     \/* sample rate of soundfile *\/$/;"	m	struct:_readsf	file:
x_samppermsec	d_ctl.c	/^    double x_samppermsec;$/;"	m	struct:_vline	file:
x_samps	x_time.c	/^    int x_samps;$/;"	m	struct:_timer	file:
x_sampspermsec	d_ctl.c	/^    t_float x_sampspermsec;$/;"	m	struct:_vsnapshot	file:
x_saveit	g_array.c	/^    char x_saveit;          \/* true if we should save this with parent *\/$/;"	m	struct:_garray	file:
x_scalar	g_array.c	/^    t_scalar *x_scalar;     \/* scalar "containing" the array *\/$/;"	m	struct:_garray	file:
x_scalar	x_text.c	/^    t_scalar *x_scalar;     \/* faux scalar (struct text-scalar) to point to *\/$/;"	m	struct:_text_define	file:
x_scalar_setup	x_scalar.c	/^void x_scalar_setup(void )$/;"	f
x_scalarvis	g_template.c	/^    t_fielddesc x_scalarvis;    \/* true if drawing the scalar at each point *\/$/;"	m	struct:_plot	file:
x_scale	g_all_guis.h	/^    int      x_scale;$/;"	m	struct:_vu
x_scale	g_all_guis.h	/^    unsigned int x_scale:1;$/;"	m	struct:_iem_init_symargs
x_selected	g_all_guis.h	/^    unsigned int x_selected:1;$/;"	m	struct:_iem_fstyle_flags
x_selend	g_rtext.c	/^    int x_selend;   \/*-- byte offset --*\/$/;"	m	struct:_rtext	file:
x_selstart	g_rtext.c	/^    int x_selstart; \/*-- byte offset --*\/$/;"	m	struct:_rtext	file:
x_serial	x_midi.c	/^    unsigned long x_serial;$/;"	m	struct:poly	file:
x_setcputime	x_misc.c	/^    struct tms x_setcputime;$/;"	m	struct:_cputime	typeref:struct:_cputime::tms	file:
x_setrealtime	x_misc.c	/^    double x_setrealtime;$/;"	m	struct:_realtime	file:
x_settime	x_time.c	/^    double x_settime;$/;"	m	struct:_timer	file:
x_setval	x_time.c	/^    t_float x_setval;$/;"	m	struct:_line	file:
x_sfchannels	d_soundfile.c	/^    int x_sfchannels;       \/* number of channels in soundfile *\/$/;"	m	struct:_readsf	file:
x_shiftdown	g_all_guis.h	/^    unsigned int x_shiftdown:1;$/;"	m	struct:_iem_fstyle_flags
x_sigcountdown	d_soundfile.c	/^    int x_sigcountdown;     \/* counter for signalling child for more data *\/$/;"	m	struct:_readsf	file:
x_sigperiod	d_soundfile.c	/^    int x_sigperiod;        \/* number of ticks per signal *\/$/;"	m	struct:_readsf	file:
x_skipheaderbytes	d_soundfile.c	/^    int x_skipheaderbytes;  \/* size of header we'll skip *\/$/;"	m	struct:_readsf	file:
x_snd	g_all_guis.h	/^    t_symbol           *x_snd;              \/* send symbol *\/$/;"	m	struct:_iemgui
x_snd_able	g_all_guis.h	/^    unsigned int x_snd_able:1;$/;"	m	struct:_iem_fstyle_flags
x_snd_arg_tail_len	g_all_guis.h	/^    unsigned int x_snd_arg_tail_len:6;$/;"	m	struct:_iem_init_symargs
x_snd_is_arg_num	g_all_guis.h	/^    unsigned int x_snd_is_arg_num:6;$/;"	m	struct:_iem_init_symargs
x_snd_is_unique	g_all_guis.h	/^    unsigned int x_snd_is_unique:1;$/;"	m	struct:_iem_fstyle_flags
x_snd_unexpanded	g_all_guis.h	/^    t_symbol           *x_snd_unexpanded;   \/* same 3, with '$' unexpanded *\/$/;"	m	struct:_iemgui
x_sockfd	x_net.c	/^    int x_sockfd;$/;"	m	struct:_netreceive	file:
x_sockfd	x_net.c	/^    int x_sockfd;$/;"	m	struct:_netsend	file:
x_sortno	d_delay.c	/^    int x_sortno;   \/* DSP sort number at which this was last put on chain *\/$/;"	m	struct:_sigdelwrite	file:
x_sr	d_delay.c	/^    t_float x_sr;       \/* samples per msec *\/$/;"	m	struct:_sigdelread	file:
x_sr	d_delay.c	/^    t_float x_sr;       \/* samples per msec *\/$/;"	m	struct:_sigvd	file:
x_sr	d_filter.c	/^    t_float x_sr;$/;"	m	struct:sigbp	file:
x_sr	d_filter.c	/^    t_float x_sr;$/;"	m	struct:sighip	file:
x_sr	d_filter.c	/^    t_float x_sr;$/;"	m	struct:siglop	file:
x_sr	d_ugen.c	/^    t_float x_sr;$/;"	m	struct:_samplerate	file:
x_state	d_ctl.c	/^    int x_state;                \/* 1 = high, 0 = low *\/$/;"	m	struct:_threshold_tilde	file:
x_state	d_soundfile.c	/^    int x_state;                            \/* opened, running, or idle *\/$/;"	m	struct:_readsf	file:
x_state	x_array.c	/^    unsigned int x_state;$/;"	m	struct:_array_random	file:
x_state	x_connective.c	/^    t_float x_state;$/;"	m	struct:_spigot	file:
x_state	x_misc.c	/^    unsigned int x_state;$/;"	m	struct:_random	file:
x_steady	g_all_guis.h	/^    int      x_steady;$/;"	m	struct:_hslider
x_steady	g_all_guis.h	/^    int      x_steady;$/;"	m	struct:_vslider
x_steady	g_all_guis.h	/^    unsigned int x_steady:1;$/;"	m	struct:_iem_fstyle_flags
x_steal	x_midi.c	/^    int x_steal;$/;"	m	struct:poly	file:
x_struct	x_array.c	247;"	d	file:
x_struct	x_text.c	538;"	d	file:
x_style	g_template.c	/^    t_fielddesc x_style;$/;"	m	struct:_plot	file:
x_sumbuf	d_ctl.c	/^    t_sample x_sumbuf[MAXOVERLAP];     \/* summing buffer *\/$/;"	m	struct:sigenv	file:
x_swap	d_soundfile.c	/^    int x_swap;             \/* writesf~ only; true if byte swapping *\/$/;"	m	struct:_readsf	file:
x_switched	d_ugen.c	/^    char x_switched;    \/* true if we're acting as a a switch *\/$/;"	m	struct:_block	file:
x_switchon	d_ugen.c	/^    char x_switchon;    \/* true if we're switched on *\/$/;"	m	struct:_block	file:
x_sym	d_delay.c	/^    t_symbol *x_sym;$/;"	m	struct:_sigdelread	file:
x_sym	d_delay.c	/^    t_symbol *x_sym;$/;"	m	struct:_sigdelwrite	file:
x_sym	d_delay.c	/^    t_symbol *x_sym;$/;"	m	struct:_sigvd	file:
x_sym	d_global.c	/^    t_symbol *x_sym;$/;"	m	struct:_sigcatch	file:
x_sym	d_global.c	/^    t_symbol *x_sym;$/;"	m	struct:_sigreceive	file:
x_sym	d_global.c	/^    t_symbol *x_sym;$/;"	m	struct:_sigsend	file:
x_sym	d_global.c	/^    t_symbol *x_sym;$/;"	m	struct:_sigthrow	file:
x_sym	d_misc.c	/^    t_symbol *x_sym;$/;"	m	struct:_print	file:
x_sym	g_guiconnect.c	/^    t_symbol *x_sym;$/;"	m	struct:_guiconnect	file:
x_sym	g_template.c	/^    t_symbol *x_sym;$/;"	m	struct:_gtemplate	file:
x_sym	x_array.c	246;"	d	file:
x_sym	x_connective.c	/^    t_symbol *x_sym;$/;"	m	struct:_receive	file:
x_sym	x_connective.c	/^    t_symbol *x_sym;$/;"	m	struct:_send	file:
x_sym	x_connective.c	/^    t_symbol *x_sym;$/;"	m	struct:_value	file:
x_sym	x_gui.c	/^    t_symbol *x_sym;$/;"	m	struct:_gfxstub	file:
x_sym	x_interface.c	/^    t_symbol *x_sym;$/;"	m	struct:_print	file:
x_sym	x_misc.c	/^    t_symbol *x_sym;$/;"	m	struct:_namecanvas	file:
x_sym	x_text.c	536;"	d	file:
x_tag	g_rtext.c	/^    char x_tag[50];$/;"	m	struct:_rtext	file:
x_target	d_ctl.c	/^    t_sample x_target; \/* target value of ramp *\/$/;"	m	struct:_line	file:
x_target	d_ctl.c	/^    t_sample x_target;$/;"	m	struct:_vline	file:
x_targettime	d_ctl.c	/^    double x_targettime;$/;"	m	struct:_vline	file:
x_targettime	x_time.c	/^    double x_targettime;$/;"	m	struct:_line	file:
x_targetval	x_time.c	/^    t_float x_targetval;$/;"	m	struct:_line	file:
x_tc	x_array.c	/^    t_array_client x_tc;$/;"	m	struct:_array_rangeop	file:
x_tc	x_array.c	/^    t_array_client x_tc;$/;"	m	struct:_array_size	file:
x_tc	x_text.c	/^    t_text_client x_tc;$/;"	m	struct:_text_get	file:
x_tc	x_text.c	/^    t_text_client x_tc;$/;"	m	struct:_text_search	file:
x_tc	x_text.c	/^    t_text_client x_tc;$/;"	m	struct:_text_sequence	file:
x_tc	x_text.c	/^    t_text_client x_tc;$/;"	m	struct:_text_set	file:
x_tc	x_text.c	/^    t_text_client x_tc;$/;"	m	struct:_text_size	file:
x_template	g_template.c	/^    t_template *x_template;$/;"	m	struct:_gtemplate	file:
x_templatesym	g_traversal.c	/^    t_symbol *x_templatesym;$/;"	m	struct:_append	file:
x_templatesym	g_traversal.c	/^    t_symbol *x_templatesym;$/;"	m	struct:_elem	file:
x_templatesym	g_traversal.c	/^    t_symbol *x_templatesym;$/;"	m	struct:_get	file:
x_templatesym	g_traversal.c	/^    t_symbol *x_templatesym;$/;"	m	struct:_getsize	file:
x_templatesym	g_traversal.c	/^    t_symbol *x_templatesym;$/;"	m	struct:_set	file:
x_templatesym	g_traversal.c	/^    t_symbol *x_templatesym;$/;"	m	struct:_setsize	file:
x_tempo	x_text.c	/^    t_float x_tempo;$/;"	m	struct:_qlist	file:
x_text	g_rtext.c	/^    t_text *x_text;$/;"	m	struct:_rtext	file:
x_textbuf	x_text.c	/^    t_textbuf x_textbuf;$/;"	m	struct:_qlist	file:
x_textbuf	x_text.c	/^    t_textbuf x_textbuf;$/;"	m	struct:_text_define	file:
x_thick	g_all_guis.h	/^    int      x_thick;$/;"	m	struct:_hslider
x_thick	g_all_guis.h	/^    unsigned int x_thick:1;$/;"	m	struct:_iem_fstyle_flags
x_ticksleft	d_ctl.c	/^    int x_ticksleft;$/;"	m	struct:_line	file:
x_time	d_ctl.c	/^    double x_time;$/;"	m	struct:_vsnapshot	file:
x_time_setup	x_time.c	/^void x_time_setup(void)$/;"	f
x_type	x_connective.c	/^    t_atomtype x_type;$/;"	m	struct:_route	file:
x_type	x_connective.c	/^    t_atomtype x_type;$/;"	m	struct:_sel2	file:
x_typedout	g_traversal.c	/^    t_typedout *x_typedout;$/;"	m	struct:_ptrobj	file:
x_unit	x_time.c	/^    t_float x_unit;$/;"	m	struct:_timer	file:
x_updatepeak	g_all_guis.h	/^    unsigned int x_updatepeak:1;$/;"	m	struct:_vu
x_updaterms	g_all_guis.h	/^    unsigned int x_updaterms:1;$/;"	m	struct:_vu
x_updown	g_io.c	/^  t_resample x_updown;$/;"	m	struct:_vinlet	file:
x_updown	g_io.c	/^  t_resample x_updown;$/;"	m	struct:_voutlet	file:
x_upsample	d_ugen.c	/^    int x_upsample;     \/* upsampling-factor *\/$/;"	m	struct:_block	file:
x_usedindsp	g_array.c	/^    char x_usedindsp;       \/* true if some DSP routine is using this *\/$/;"	m	struct:_garray	file:
x_useme	g_canvas.c	/^    int x_useme;$/;"	m	struct:_declare	file:
x_usertime	x_misc.c	/^    LARGE_INTEGER x_usertime;$/;"	m	struct:_cputime	file:
x_val	d_osc.c	/^    int x_val;$/;"	m	struct:_noise	file:
x_val	g_all_guis.h	/^    double   x_val;$/;"	m	struct:_my_numbox
x_val	g_all_guis.h	/^    int      x_val;$/;"	m	struct:_hslider
x_val	g_all_guis.h	/^    int      x_val;$/;"	m	struct:_vslider
x_value	d_ctl.c	/^    double x_value;$/;"	m	struct:_vline	file:
x_value	d_ctl.c	/^    t_sample x_value; \/* current value of ramp at block-borders *\/$/;"	m	struct:_line	file:
x_value	d_ctl.c	/^    t_sample x_value;$/;"	m	struct:_snapshot	file:
x_variables	g_traversal.c	/^    t_appendvariable *x_variables;$/;"	m	struct:_append	file:
x_variables	g_traversal.c	/^    t_getvariable *x_variables;$/;"	m	struct:_get	file:
x_variables	g_traversal.c	/^    t_setvariable *x_variables;$/;"	m	struct:_set	file:
x_vec	d_array.c	/^    t_word *x_vec;$/;"	m	struct:_tabosc4_tilde	file:
x_vec	d_array.c	/^    t_word *x_vec;$/;"	m	struct:_tabplay_tilde	file:
x_vec	d_array.c	/^    t_word *x_vec;$/;"	m	struct:_tabread4_tilde	file:
x_vec	d_array.c	/^    t_word *x_vec;$/;"	m	struct:_tabread_tilde	file:
x_vec	d_array.c	/^    t_word *x_vec;$/;"	m	struct:_tabreceive	file:
x_vec	d_array.c	/^    t_word *x_vec;$/;"	m	struct:_tabsend	file:
x_vec	d_array.c	/^    t_word *x_vec;$/;"	m	struct:_tabwrite_tilde	file:
x_vec	d_ctl.c	/^    t_sample *x_vec;$/;"	m	struct:_vsnapshot	file:
x_vec	d_dac.c	/^    t_int *x_vec;$/;"	m	struct:_adc	file:
x_vec	d_dac.c	/^    t_int *x_vec;$/;"	m	struct:_dac	file:
x_vec	d_global.c	/^    t_sample *x_vec;$/;"	m	struct:_sigcatch	file:
x_vec	d_global.c	/^    t_sample *x_vec;$/;"	m	struct:_sigsend	file:
x_vec	g_template.c	/^    t_fielddesc *x_vec;$/;"	m	struct:_curve	file:
x_vec	x_connective.c	/^    t_atom *x_vec;          \/* input values *\/$/;"	m	struct:_pack	file:
x_vec	x_connective.c	/^    t_routeelement *x_vec;$/;"	m	struct:_route	file:
x_vec	x_connective.c	/^    t_selectelement *x_vec;$/;"	m	struct:_sel2	file:
x_vec	x_connective.c	/^    t_triggerout *x_vec;$/;"	m	struct:_trigger	file:
x_vec	x_connective.c	/^    t_unpackout *x_vec;$/;"	m	struct:_unpack	file:
x_vec	x_midi.c	/^    t_voice *x_vec;$/;"	m	struct:poly	file:
x_vec	x_time.c	/^    t_pipeout *x_vec;$/;"	m	struct:_pipe	file:
x_vecsize	d_delay.c	/^    int x_vecsize;  \/* vector size for delread~ to use *\/$/;"	m	struct:_sigdelwrite	file:
x_vecsize	d_soundfile.c	/^    int x_vecsize;                          \/* vector size for transfers *\/$/;"	m	struct:_readsf	file:
x_vecsize	d_ugen.c	/^    int x_vecsize;      \/* size of audio signals in this block *\/$/;"	m	struct:_block	file:
x_vel	x_midi.c	/^    t_float x_vel;$/;"	m	struct:poly	file:
x_velo	x_midi.c	/^    t_float x_velo;$/;"	m	struct:_bag	file:
x_velo	x_midi.c	/^    t_float x_velo;$/;"	m	struct:_makenote	file:
x_velo	x_midi.c	/^    t_float x_velo;$/;"	m	struct:_noteout	file:
x_velo	x_midi.c	/^    t_float x_velo;$/;"	m	struct:_stripnote	file:
x_velout	x_midi.c	/^    t_outlet *x_velout;$/;"	m	struct:_makenote	file:
x_velout	x_midi.c	/^    t_outlet *x_velout;$/;"	m	struct:_stripnote	file:
x_velout	x_midi.c	/^    t_outlet *x_velout;$/;"	m	struct:poly	file:
x_vis	g_template.c	/^    t_fielddesc x_vis;          \/* visible *\/$/;"	m	struct:_plot	file:
x_vis	g_template.c	/^    t_fielddesc x_vis;$/;"	m	struct:_curve	file:
x_vis	g_template.c	/^    t_fielddesc x_vis;$/;"	m	struct:_drawnumber	file:
x_vis_h	g_all_guis.h	/^    int      x_vis_h;$/;"	m	struct:_my_canvas
x_vis_w	g_all_guis.h	/^    int      x_vis_w;$/;"	m	struct:_my_canvas
x_w	g_all_guis.h	/^    int                x_w;$/;"	m	struct:_iemgui
x_waitargc	x_text.c	/^    int x_waitargc;         \/* how many leading numbers to use for waiting *\/$/;"	m	struct:_text_sequence	file:
x_waitout	x_text.c	/^    t_outlet *x_waitout;    \/* outlet for wait times, zero if we never wait *\/$/;"	m	struct:_text_sequence	file:
x_waitsym	x_text.c	/^    t_symbol *x_waitsym;    \/* symbol to initiate wait, zero if none *\/$/;"	m	struct:_text_sequence	file:
x_warned	x_misc.c	/^    int x_warned;$/;"	m	struct:_cputime	file:
x_whenclockset	x_text.c	/^    double x_whenclockset;$/;"	m	struct:_qlist	file:
x_wherefrom	d_global.c	/^    t_sample *x_wherefrom;$/;"	m	struct:_sigreceive	file:
x_whereto	d_global.c	/^    t_sample *x_whereto;$/;"	m	struct:_sigthrow	file:
x_who	g_guiconnect.c	/^    t_pd *x_who;$/;"	m	struct:_guiconnect	file:
x_width	g_template.c	/^    t_fielddesc x_width;$/;"	m	struct:_curve	file:
x_width	g_template.c	/^    t_fielddesc x_width;$/;"	m	struct:_plot	file:
x_wpoints	g_template.c	/^    t_fielddesc x_wpoints;$/;"	m	struct:_plot	file:
x_write	g_io.c	/^    t_sample *x_write;       \/* next to write in to buffer *\/$/;"	m	struct:_voutlet	file:
x_xinc	g_template.c	/^    t_fielddesc x_xinc;$/;"	m	struct:_plot	file:
x_xloc	g_template.c	/^    t_fielddesc x_xloc;$/;"	m	struct:_drawnumber	file:
x_xloc	g_template.c	/^    t_fielddesc x_xloc;$/;"	m	struct:_plot	file:
x_xpoints	g_template.c	/^    t_fielddesc x_xpoints;$/;"	m	struct:_plot	file:
x_y	x_connective.c	/^    t_float x_y;$/;"	m	struct:_moses	file:
x_yloc	g_template.c	/^    t_fielddesc x_yloc;$/;"	m	struct:_drawnumber	file:
x_yloc	g_template.c	/^    t_fielddesc x_yloc;$/;"	m	struct:_plot	file:
x_ypoints	g_template.c	/^    t_fielddesc x_ypoints;$/;"	m	struct:_plot	file:
x_zerodel	d_delay.c	/^    int x_zerodel;      \/* 0 or vecsize depending on read\/write order *\/$/;"	m	struct:_sigdelread	file:
x_zerodel	d_delay.c	/^    int x_zerodel;      \/* 0 or vecsize depending on read\/write order *\/$/;"	m	struct:_sigvd	file:
xferno	s_audio_alsa.c	/^static int xferno = 0;$/;"	v	file:
xrun_recovery	s_audio_alsamm.c	/^static int xrun_recovery(snd_pcm_t *handle, int err)$/;"	f	file:
xruns_watch	s_audio_alsamm.c	/^ static  int xruns_watch[WATCH_PERIODS];$/;"	v	file:
zero_perf8	d_ugen.c	/^t_int *zero_perf8(t_int *w)$/;"	f
zero_perform	d_ugen.c	/^t_int *zero_perform(t_int *w)   \/* zero out a vector *\/$/;"	f
zgetfn	m_class.c	/^t_gotfn zgetfn(t_pd *x, t_symbol *s)$/;"	f
